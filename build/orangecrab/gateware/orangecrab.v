//--------------------------------------------------------------------------------
// Auto-generated by Migen (cb88406) & LiteX (c474272f) on 2020-10-25 15:11:29
//--------------------------------------------------------------------------------
module orangecrab(
	input wire clk48,
	output wire [15:0] ddram_a,
	output wire [2:0] ddram_ba,
	output wire ddram_ras_n,
	output wire ddram_cas_n,
	output wire ddram_we_n,
	output wire ddram_cs_n,
	output wire [1:0] ddram_dm,
	input wire [15:0] ddram_dq,
	input wire [1:0] ddram_dqs_p,
	output wire ddram_clk_p,
	output wire ddram_cke,
	output wire ddram_odt,
	output wire ddram_reset_n,
	output wire [5:0] ddram_vccio,
	output wire [1:0] ddram_gnd,
	output wire rgb_led0_r,
	output wire rgb_led0_g,
	output wire rgb_led0_b,
	input wire [12:0] gpio0,
	input wire usr_btn,
	output wire rst_n,
	output reg spiflash4x_cs_n,
	input wire [3:0] spiflash4x_dq,
	input wire usb_d_p,
	input wire usb_d_n,
	output wire usb_pullup
);

reg soccontroller_reset_storage = 1'd0;
reg soccontroller_reset_re = 1'd0;
reg [31:0] soccontroller_scratch_storage = 32'd305419896;
reg soccontroller_scratch_re = 1'd0;
wire [31:0] soccontroller_bus_errors_status;
wire soccontroller_bus_errors_we;
wire soccontroller_bus_errors_re;
wire soccontroller_reset;
wire soccontroller_bus_error;
reg [31:0] soccontroller_bus_errors = 32'd0;
wire cpu_reset;
reg [31:0] cpu_interrupt = 32'd0;
wire [29:0] cpu_ibus_adr;
wire [31:0] cpu_ibus_dat_w;
wire [31:0] cpu_ibus_dat_r;
wire [3:0] cpu_ibus_sel;
wire cpu_ibus_cyc;
wire cpu_ibus_stb;
wire cpu_ibus_ack;
wire cpu_ibus_we;
wire [2:0] cpu_ibus_cti;
wire [1:0] cpu_ibus_bte;
wire cpu_ibus_err;
wire [29:0] cpu_dbus_adr;
wire [31:0] cpu_dbus_dat_w;
wire [31:0] cpu_dbus_dat_r;
wire [3:0] cpu_dbus_sel;
wire cpu_dbus_cyc;
wire cpu_dbus_stb;
wire cpu_dbus_ack;
wire cpu_dbus_we;
wire [2:0] cpu_dbus_cti;
wire [1:0] cpu_dbus_bte;
wire cpu_dbus_err;
reg [31:0] vexriscv = 32'd0;
wire [29:0] basesoc_ram_bus_adr;
wire [31:0] basesoc_ram_bus_dat_w;
wire [31:0] basesoc_ram_bus_dat_r;
wire [3:0] basesoc_ram_bus_sel;
wire basesoc_ram_bus_cyc;
wire basesoc_ram_bus_stb;
reg basesoc_ram_bus_ack = 1'd0;
wire basesoc_ram_bus_we;
wire [2:0] basesoc_ram_bus_cti;
wire [1:0] basesoc_ram_bus_bte;
reg basesoc_ram_bus_err = 1'd0;
wire [12:0] basesoc_adr;
wire [31:0] basesoc_dat_r;
wire [29:0] ram_bus_ram_bus_adr;
wire [31:0] ram_bus_ram_bus_dat_w;
wire [31:0] ram_bus_ram_bus_dat_r;
wire [3:0] ram_bus_ram_bus_sel;
wire ram_bus_ram_bus_cyc;
wire ram_bus_ram_bus_stb;
reg ram_bus_ram_bus_ack = 1'd0;
wire ram_bus_ram_bus_we;
wire [2:0] ram_bus_ram_bus_cti;
wire [1:0] ram_bus_ram_bus_bte;
reg ram_bus_ram_bus_err = 1'd0;
wire [10:0] ram_adr;
wire [31:0] ram_dat_r;
reg [3:0] ram_we = 4'd0;
wire [31:0] ram_dat_w;
wire uart_rxtx_re;
wire [7:0] uart_rxtx_r;
wire uart_rxtx_we;
wire [7:0] uart_rxtx_w;
wire uart_txfull_status;
wire uart_txfull_we;
wire uart_txfull_re;
wire uart_rxempty_status;
wire uart_rxempty_we;
wire uart_rxempty_re;
wire uart_irq;
wire uart_tx_status;
reg uart_tx_pending = 1'd0;
wire uart_tx_trigger;
reg uart_tx_clear = 1'd0;
reg uart_tx_old_trigger = 1'd0;
wire uart_rx_status;
reg uart_rx_pending = 1'd0;
wire uart_rx_trigger;
reg uart_rx_clear = 1'd0;
reg uart_rx_old_trigger = 1'd0;
wire uart_eventmanager_status_re;
wire [1:0] uart_eventmanager_status_r;
wire uart_eventmanager_status_we;
reg [1:0] uart_eventmanager_status_w = 2'd0;
wire uart_eventmanager_pending_re;
wire [1:0] uart_eventmanager_pending_r;
wire uart_eventmanager_pending_we;
reg [1:0] uart_eventmanager_pending_w = 2'd0;
reg [1:0] uart_eventmanager_storage = 2'd0;
reg uart_eventmanager_re = 1'd0;
wire uart_txempty_status;
wire uart_txempty_we;
wire uart_txempty_re;
wire uart_rxfull_status;
wire uart_rxfull_we;
wire uart_rxfull_re;
reg uart_uart_sink_valid = 1'd0;
wire uart_uart_sink_ready;
reg uart_uart_sink_first = 1'd0;
reg uart_uart_sink_last = 1'd0;
reg [7:0] uart_uart_sink_payload_data = 8'd0;
wire uart_uart_source_valid;
wire uart_uart_source_ready;
wire uart_uart_source_first;
wire uart_uart_source_last;
wire [7:0] uart_uart_source_payload_data;
wire uart_tx_fifo_sink_valid;
wire uart_tx_fifo_sink_ready;
reg uart_tx_fifo_sink_first = 1'd0;
reg uart_tx_fifo_sink_last = 1'd0;
wire [7:0] uart_tx_fifo_sink_payload_data;
wire uart_tx_fifo_source_valid;
wire uart_tx_fifo_source_ready;
wire uart_tx_fifo_source_first;
wire uart_tx_fifo_source_last;
wire [7:0] uart_tx_fifo_source_payload_data;
wire uart_rx_fifo_sink_valid;
wire uart_rx_fifo_sink_ready;
wire uart_rx_fifo_sink_first;
wire uart_rx_fifo_sink_last;
wire [7:0] uart_rx_fifo_sink_payload_data;
wire uart_rx_fifo_source_valid;
wire uart_rx_fifo_source_ready;
wire uart_rx_fifo_source_first;
wire uart_rx_fifo_source_last;
wire [7:0] uart_rx_fifo_source_payload_data;
reg [31:0] timer_load_storage = 32'd0;
reg timer_load_re = 1'd0;
reg [31:0] timer_reload_storage = 32'd0;
reg timer_reload_re = 1'd0;
reg timer_en_storage = 1'd0;
reg timer_en_re = 1'd0;
reg timer_update_value_storage = 1'd0;
reg timer_update_value_re = 1'd0;
reg [31:0] timer_value_status = 32'd0;
wire timer_value_we;
wire timer_value_re;
wire timer_irq;
wire timer_zero_status;
reg timer_zero_pending = 1'd0;
wire timer_zero_trigger;
reg timer_zero_clear = 1'd0;
reg timer_zero_old_trigger = 1'd0;
wire timer_eventmanager_status_re;
wire timer_eventmanager_status_r;
wire timer_eventmanager_status_we;
wire timer_eventmanager_status_w;
wire timer_eventmanager_pending_re;
wire timer_eventmanager_pending_r;
wire timer_eventmanager_pending_we;
wire timer_eventmanager_pending_w;
reg timer_eventmanager_storage = 1'd0;
reg timer_eventmanager_re = 1'd0;
reg [31:0] timer_value = 32'd0;
wire init_clk;
reg init_rst = 1'd0;
wire por_clk;
wire sys_clk;
reg sys_rst = 1'd0;
wire sys2x_clk;
wire sys2x_i_clk;
wire sys2x_i_rst;
wire crg_stop;
wire crg_reset;
wire crg_osc_g;
wire crg_por_done;
reg [23:0] crg_por_count = 24'd2400000;
wire crg_sys2x_clk_ecsout;
wire crg_pll_reset;
wire crg_pll_locked;
wire crg_ecp5pll0_clkin;
wire crg_ecp5pll0_clkout;
wire usb_12_clk;
wire usb_12_rst;
wire usb_48_clk;
wire usb_48_rst;
wire crg_usb_pll_reset;
wire crg_usb_pll_locked;
wire crg_ecp5pll1_clkin;
wire crg_ecp5pll1_clkout0;
wire crg_ecp5pll1_clkout1;
wire ddrphy_pause0;
wire ddrphy_stop0;
wire ddrphy_delay0;
wire ddrphy_reset0;
wire ddrphy_new_lock;
reg ddrphy_update = 1'd0;
reg ddrphy_stop1 = 1'd0;
reg ddrphy_freeze = 1'd0;
reg ddrphy_pause1 = 1'd0;
reg ddrphy_reset1 = 1'd0;
wire ddrphy_lock0;
wire ddrphy_delay1;
wire ddrphy_lock1;
reg ddrphy_lock_d = 1'd0;
reg [6:0] ddrphy_counter = 7'd0;
reg [1:0] ddrphy_dly_sel_storage = 2'd0;
reg ddrphy_dly_sel_re = 1'd0;
wire ddrphy_rdly_dq_rst_re;
wire ddrphy_rdly_dq_rst_r;
wire ddrphy_rdly_dq_rst_we;
reg ddrphy_rdly_dq_rst_w = 1'd0;
wire ddrphy_rdly_dq_inc_re;
wire ddrphy_rdly_dq_inc_r;
wire ddrphy_rdly_dq_inc_we;
reg ddrphy_rdly_dq_inc_w = 1'd0;
wire ddrphy_rdly_dq_bitslip_rst_re;
wire ddrphy_rdly_dq_bitslip_rst_r;
wire ddrphy_rdly_dq_bitslip_rst_we;
reg ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
wire ddrphy_rdly_dq_bitslip_re;
wire ddrphy_rdly_dq_bitslip_r;
wire ddrphy_rdly_dq_bitslip_we;
reg ddrphy_rdly_dq_bitslip_w = 1'd0;
wire ddrphy_burstdet_clr_re;
wire ddrphy_burstdet_clr_r;
wire ddrphy_burstdet_clr_we;
reg ddrphy_burstdet_clr_w = 1'd0;
reg [1:0] ddrphy_burstdet_seen_status = 2'd0;
wire ddrphy_burstdet_seen_we;
wire ddrphy_burstdet_seen_re;
wire [1:0] ddrphy_datavalid;
wire [15:0] ddrphy_dfi_p0_address;
wire [2:0] ddrphy_dfi_p0_bank;
wire ddrphy_dfi_p0_cas_n;
wire ddrphy_dfi_p0_cs_n;
wire ddrphy_dfi_p0_ras_n;
wire ddrphy_dfi_p0_we_n;
wire ddrphy_dfi_p0_cke;
wire ddrphy_dfi_p0_odt;
wire ddrphy_dfi_p0_reset_n;
wire ddrphy_dfi_p0_act_n;
wire [63:0] ddrphy_dfi_p0_wrdata;
wire ddrphy_dfi_p0_wrdata_en;
wire [7:0] ddrphy_dfi_p0_wrdata_mask;
wire ddrphy_dfi_p0_rddata_en;
reg [63:0] ddrphy_dfi_p0_rddata = 64'd0;
wire ddrphy_dfi_p0_rddata_valid;
wire [15:0] ddrphy_dfi_p1_address;
wire [2:0] ddrphy_dfi_p1_bank;
wire ddrphy_dfi_p1_cas_n;
wire ddrphy_dfi_p1_cs_n;
wire ddrphy_dfi_p1_ras_n;
wire ddrphy_dfi_p1_we_n;
wire ddrphy_dfi_p1_cke;
wire ddrphy_dfi_p1_odt;
wire ddrphy_dfi_p1_reset_n;
wire ddrphy_dfi_p1_act_n;
wire [63:0] ddrphy_dfi_p1_wrdata;
wire ddrphy_dfi_p1_wrdata_en;
wire [7:0] ddrphy_dfi_p1_wrdata_mask;
wire ddrphy_dfi_p1_rddata_en;
reg [63:0] ddrphy_dfi_p1_rddata = 64'd0;
wire ddrphy_dfi_p1_rddata_valid;
wire ddrphy_dfi_p2_rddata_valid;
wire ddrphy_dfi_p3_rddata_valid;
wire ddrphy_bl8_chunk;
wire ddrphy_dq_oe;
wire ddrphy_dqs_re;
wire ddrphy_dqs_oe;
wire ddrphy_dqs_postamble;
wire ddrphy_dqs_preamble;
wire ddrphy_dqs_i0;
wire ddrphy_dqsr900;
wire ddrphy_dqsw2700;
wire ddrphy_dqsw0;
wire [2:0] ddrphy_rdpntr0;
wire [2:0] ddrphy_wrpntr0;
reg [6:0] ddrphy_rdly0 = 7'd0;
wire ddrphy_burstdet0;
reg ddrphy_burstdet_d0 = 1'd0;
wire ddrphy_dqs0;
wire ddrphy_dqs_oe_n0;
reg [7:0] ddrphy_dm_o_data0 = 8'd0;
reg [7:0] ddrphy_dm_o_data_d0 = 8'd0;
reg [3:0] ddrphy_dm_o_data_muxed0 = 4'd0;
wire ddrphy_dq_o0;
wire ddrphy_dq_i0;
wire ddrphy_dq_oe_n0;
wire ddrphy_dq_i_delayed0;
wire [7:0] ddrphy_dq_i_data0;
reg [7:0] ddrphy_dq_o_data0 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d0 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed0 = 4'd0;
wire [3:0] ddrphy_bitslip0_i;
reg [3:0] ddrphy_bitslip0_o = 4'd0;
reg [1:0] ddrphy_bitslip0_value = 2'd0;
reg [7:0] ddrphy_bitslip0_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d0 = 4'd0;
wire ddrphy_dq_o1;
wire ddrphy_dq_i1;
wire ddrphy_dq_oe_n1;
wire ddrphy_dq_i_delayed1;
wire [7:0] ddrphy_dq_i_data1;
reg [7:0] ddrphy_dq_o_data1 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d1 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed1 = 4'd0;
wire [3:0] ddrphy_bitslip1_i;
reg [3:0] ddrphy_bitslip1_o = 4'd0;
reg [1:0] ddrphy_bitslip1_value = 2'd0;
reg [7:0] ddrphy_bitslip1_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d1 = 4'd0;
wire ddrphy_dq_o2;
wire ddrphy_dq_i2;
wire ddrphy_dq_oe_n2;
wire ddrphy_dq_i_delayed2;
wire [7:0] ddrphy_dq_i_data2;
reg [7:0] ddrphy_dq_o_data2 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d2 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed2 = 4'd0;
wire [3:0] ddrphy_bitslip2_i;
reg [3:0] ddrphy_bitslip2_o = 4'd0;
reg [1:0] ddrphy_bitslip2_value = 2'd0;
reg [7:0] ddrphy_bitslip2_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d2 = 4'd0;
wire ddrphy_dq_o3;
wire ddrphy_dq_i3;
wire ddrphy_dq_oe_n3;
wire ddrphy_dq_i_delayed3;
wire [7:0] ddrphy_dq_i_data3;
reg [7:0] ddrphy_dq_o_data3 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d3 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed3 = 4'd0;
wire [3:0] ddrphy_bitslip3_i;
reg [3:0] ddrphy_bitslip3_o = 4'd0;
reg [1:0] ddrphy_bitslip3_value = 2'd0;
reg [7:0] ddrphy_bitslip3_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d3 = 4'd0;
wire ddrphy_dq_o4;
wire ddrphy_dq_i4;
wire ddrphy_dq_oe_n4;
wire ddrphy_dq_i_delayed4;
wire [7:0] ddrphy_dq_i_data4;
reg [7:0] ddrphy_dq_o_data4 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d4 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed4 = 4'd0;
wire [3:0] ddrphy_bitslip4_i;
reg [3:0] ddrphy_bitslip4_o = 4'd0;
reg [1:0] ddrphy_bitslip4_value = 2'd0;
reg [7:0] ddrphy_bitslip4_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d4 = 4'd0;
wire ddrphy_dq_o5;
wire ddrphy_dq_i5;
wire ddrphy_dq_oe_n5;
wire ddrphy_dq_i_delayed5;
wire [7:0] ddrphy_dq_i_data5;
reg [7:0] ddrphy_dq_o_data5 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d5 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed5 = 4'd0;
wire [3:0] ddrphy_bitslip5_i;
reg [3:0] ddrphy_bitslip5_o = 4'd0;
reg [1:0] ddrphy_bitslip5_value = 2'd0;
reg [7:0] ddrphy_bitslip5_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d5 = 4'd0;
wire ddrphy_dq_o6;
wire ddrphy_dq_i6;
wire ddrphy_dq_oe_n6;
wire ddrphy_dq_i_delayed6;
wire [7:0] ddrphy_dq_i_data6;
reg [7:0] ddrphy_dq_o_data6 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d6 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed6 = 4'd0;
wire [3:0] ddrphy_bitslip6_i;
reg [3:0] ddrphy_bitslip6_o = 4'd0;
reg [1:0] ddrphy_bitslip6_value = 2'd0;
reg [7:0] ddrphy_bitslip6_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d6 = 4'd0;
wire ddrphy_dq_o7;
wire ddrphy_dq_i7;
wire ddrphy_dq_oe_n7;
wire ddrphy_dq_i_delayed7;
wire [7:0] ddrphy_dq_i_data7;
reg [7:0] ddrphy_dq_o_data7 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d7 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed7 = 4'd0;
wire [3:0] ddrphy_bitslip7_i;
reg [3:0] ddrphy_bitslip7_o = 4'd0;
reg [1:0] ddrphy_bitslip7_value = 2'd0;
reg [7:0] ddrphy_bitslip7_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d7 = 4'd0;
wire ddrphy_dqs_i1;
wire ddrphy_dqsr901;
wire ddrphy_dqsw2701;
wire ddrphy_dqsw1;
wire [2:0] ddrphy_rdpntr1;
wire [2:0] ddrphy_wrpntr1;
reg [6:0] ddrphy_rdly1 = 7'd0;
wire ddrphy_burstdet1;
reg ddrphy_burstdet_d1 = 1'd0;
wire ddrphy_dqs1;
wire ddrphy_dqs_oe_n1;
reg [7:0] ddrphy_dm_o_data1 = 8'd0;
reg [7:0] ddrphy_dm_o_data_d1 = 8'd0;
reg [3:0] ddrphy_dm_o_data_muxed1 = 4'd0;
wire ddrphy_dq_o8;
wire ddrphy_dq_i8;
wire ddrphy_dq_oe_n8;
wire ddrphy_dq_i_delayed8;
wire [7:0] ddrphy_dq_i_data8;
reg [7:0] ddrphy_dq_o_data8 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d8 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed8 = 4'd0;
wire [3:0] ddrphy_bitslip8_i;
reg [3:0] ddrphy_bitslip8_o = 4'd0;
reg [1:0] ddrphy_bitslip8_value = 2'd0;
reg [7:0] ddrphy_bitslip8_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d8 = 4'd0;
wire ddrphy_dq_o9;
wire ddrphy_dq_i9;
wire ddrphy_dq_oe_n9;
wire ddrphy_dq_i_delayed9;
wire [7:0] ddrphy_dq_i_data9;
reg [7:0] ddrphy_dq_o_data9 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d9 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed9 = 4'd0;
wire [3:0] ddrphy_bitslip9_i;
reg [3:0] ddrphy_bitslip9_o = 4'd0;
reg [1:0] ddrphy_bitslip9_value = 2'd0;
reg [7:0] ddrphy_bitslip9_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d9 = 4'd0;
wire ddrphy_dq_o10;
wire ddrphy_dq_i10;
wire ddrphy_dq_oe_n10;
wire ddrphy_dq_i_delayed10;
wire [7:0] ddrphy_dq_i_data10;
reg [7:0] ddrphy_dq_o_data10 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d10 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed10 = 4'd0;
wire [3:0] ddrphy_bitslip10_i;
reg [3:0] ddrphy_bitslip10_o = 4'd0;
reg [1:0] ddrphy_bitslip10_value = 2'd0;
reg [7:0] ddrphy_bitslip10_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d10 = 4'd0;
wire ddrphy_dq_o11;
wire ddrphy_dq_i11;
wire ddrphy_dq_oe_n11;
wire ddrphy_dq_i_delayed11;
wire [7:0] ddrphy_dq_i_data11;
reg [7:0] ddrphy_dq_o_data11 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d11 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed11 = 4'd0;
wire [3:0] ddrphy_bitslip11_i;
reg [3:0] ddrphy_bitslip11_o = 4'd0;
reg [1:0] ddrphy_bitslip11_value = 2'd0;
reg [7:0] ddrphy_bitslip11_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d11 = 4'd0;
wire ddrphy_dq_o12;
wire ddrphy_dq_i12;
wire ddrphy_dq_oe_n12;
wire ddrphy_dq_i_delayed12;
wire [7:0] ddrphy_dq_i_data12;
reg [7:0] ddrphy_dq_o_data12 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d12 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed12 = 4'd0;
wire [3:0] ddrphy_bitslip12_i;
reg [3:0] ddrphy_bitslip12_o = 4'd0;
reg [1:0] ddrphy_bitslip12_value = 2'd0;
reg [7:0] ddrphy_bitslip12_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d12 = 4'd0;
wire ddrphy_dq_o13;
wire ddrphy_dq_i13;
wire ddrphy_dq_oe_n13;
wire ddrphy_dq_i_delayed13;
wire [7:0] ddrphy_dq_i_data13;
reg [7:0] ddrphy_dq_o_data13 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d13 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed13 = 4'd0;
wire [3:0] ddrphy_bitslip13_i;
reg [3:0] ddrphy_bitslip13_o = 4'd0;
reg [1:0] ddrphy_bitslip13_value = 2'd0;
reg [7:0] ddrphy_bitslip13_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d13 = 4'd0;
wire ddrphy_dq_o14;
wire ddrphy_dq_i14;
wire ddrphy_dq_oe_n14;
wire ddrphy_dq_i_delayed14;
wire [7:0] ddrphy_dq_i_data14;
reg [7:0] ddrphy_dq_o_data14 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d14 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed14 = 4'd0;
wire [3:0] ddrphy_bitslip14_i;
reg [3:0] ddrphy_bitslip14_o = 4'd0;
reg [1:0] ddrphy_bitslip14_value = 2'd0;
reg [7:0] ddrphy_bitslip14_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d14 = 4'd0;
wire ddrphy_dq_o15;
wire ddrphy_dq_i15;
wire ddrphy_dq_oe_n15;
wire ddrphy_dq_i_delayed15;
wire [7:0] ddrphy_dq_i_data15;
reg [7:0] ddrphy_dq_o_data15 = 8'd0;
reg [7:0] ddrphy_dq_o_data_d15 = 8'd0;
reg [3:0] ddrphy_dq_o_data_muxed15 = 4'd0;
wire [3:0] ddrphy_bitslip15_i;
reg [3:0] ddrphy_bitslip15_o = 4'd0;
reg [1:0] ddrphy_bitslip15_value = 2'd0;
reg [7:0] ddrphy_bitslip15_r = 8'd0;
reg [3:0] ddrphy_dq_i_bitslip_o_d15 = 4'd0;
reg ddrphy_rddata_en_tappeddelayline0 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline1 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline2 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline3 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline4 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline5 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline6 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline7 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline8 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline9 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline10 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline11 = 1'd0;
reg ddrphy_rddata_en_tappeddelayline12 = 1'd0;
reg ddrphy_wrdata_en_tappeddelayline0 = 1'd0;
reg ddrphy_wrdata_en_tappeddelayline1 = 1'd0;
reg ddrphy_wrdata_en_tappeddelayline2 = 1'd0;
reg ddrphy_wrdata_en_tappeddelayline3 = 1'd0;
reg ddrphy_wrdata_en_tappeddelayline4 = 1'd0;
reg ddrphy_wrdata_en_tappeddelayline5 = 1'd0;
reg ddrphy_wrdata_en_tappeddelayline6 = 1'd0;
wire [12:0] sdram_inti_p0_address;
wire [2:0] sdram_inti_p0_bank;
reg sdram_inti_p0_cas_n = 1'd1;
reg sdram_inti_p0_cs_n = 1'd1;
reg sdram_inti_p0_ras_n = 1'd1;
reg sdram_inti_p0_we_n = 1'd1;
wire sdram_inti_p0_cke;
wire sdram_inti_p0_odt;
wire sdram_inti_p0_reset_n;
reg sdram_inti_p0_act_n = 1'd1;
wire [63:0] sdram_inti_p0_wrdata;
wire sdram_inti_p0_wrdata_en;
wire [7:0] sdram_inti_p0_wrdata_mask;
wire sdram_inti_p0_rddata_en;
reg [63:0] sdram_inti_p0_rddata = 64'd0;
reg sdram_inti_p0_rddata_valid = 1'd0;
wire [12:0] sdram_inti_p1_address;
wire [2:0] sdram_inti_p1_bank;
reg sdram_inti_p1_cas_n = 1'd1;
reg sdram_inti_p1_cs_n = 1'd1;
reg sdram_inti_p1_ras_n = 1'd1;
reg sdram_inti_p1_we_n = 1'd1;
wire sdram_inti_p1_cke;
wire sdram_inti_p1_odt;
wire sdram_inti_p1_reset_n;
reg sdram_inti_p1_act_n = 1'd1;
wire [63:0] sdram_inti_p1_wrdata;
wire sdram_inti_p1_wrdata_en;
wire [7:0] sdram_inti_p1_wrdata_mask;
wire sdram_inti_p1_rddata_en;
reg [63:0] sdram_inti_p1_rddata = 64'd0;
reg sdram_inti_p1_rddata_valid = 1'd0;
wire [12:0] sdram_slave_p0_address;
wire [2:0] sdram_slave_p0_bank;
wire sdram_slave_p0_cas_n;
wire sdram_slave_p0_cs_n;
wire sdram_slave_p0_ras_n;
wire sdram_slave_p0_we_n;
wire sdram_slave_p0_cke;
wire sdram_slave_p0_odt;
wire sdram_slave_p0_reset_n;
wire sdram_slave_p0_act_n;
wire [63:0] sdram_slave_p0_wrdata;
wire sdram_slave_p0_wrdata_en;
wire [7:0] sdram_slave_p0_wrdata_mask;
wire sdram_slave_p0_rddata_en;
reg [63:0] sdram_slave_p0_rddata = 64'd0;
reg sdram_slave_p0_rddata_valid = 1'd0;
wire [12:0] sdram_slave_p1_address;
wire [2:0] sdram_slave_p1_bank;
wire sdram_slave_p1_cas_n;
wire sdram_slave_p1_cs_n;
wire sdram_slave_p1_ras_n;
wire sdram_slave_p1_we_n;
wire sdram_slave_p1_cke;
wire sdram_slave_p1_odt;
wire sdram_slave_p1_reset_n;
wire sdram_slave_p1_act_n;
wire [63:0] sdram_slave_p1_wrdata;
wire sdram_slave_p1_wrdata_en;
wire [7:0] sdram_slave_p1_wrdata_mask;
wire sdram_slave_p1_rddata_en;
reg [63:0] sdram_slave_p1_rddata = 64'd0;
reg sdram_slave_p1_rddata_valid = 1'd0;
reg [12:0] sdram_master_p0_address = 13'd0;
reg [2:0] sdram_master_p0_bank = 3'd0;
reg sdram_master_p0_cas_n = 1'd1;
reg sdram_master_p0_cs_n = 1'd1;
reg sdram_master_p0_ras_n = 1'd1;
reg sdram_master_p0_we_n = 1'd1;
reg sdram_master_p0_cke = 1'd0;
reg sdram_master_p0_odt = 1'd0;
reg sdram_master_p0_reset_n = 1'd0;
reg sdram_master_p0_act_n = 1'd1;
reg [63:0] sdram_master_p0_wrdata = 64'd0;
reg sdram_master_p0_wrdata_en = 1'd0;
reg [7:0] sdram_master_p0_wrdata_mask = 8'd0;
reg sdram_master_p0_rddata_en = 1'd0;
wire [63:0] sdram_master_p0_rddata;
wire sdram_master_p0_rddata_valid;
reg [12:0] sdram_master_p1_address = 13'd0;
reg [2:0] sdram_master_p1_bank = 3'd0;
reg sdram_master_p1_cas_n = 1'd1;
reg sdram_master_p1_cs_n = 1'd1;
reg sdram_master_p1_ras_n = 1'd1;
reg sdram_master_p1_we_n = 1'd1;
reg sdram_master_p1_cke = 1'd0;
reg sdram_master_p1_odt = 1'd0;
reg sdram_master_p1_reset_n = 1'd0;
reg sdram_master_p1_act_n = 1'd1;
reg [63:0] sdram_master_p1_wrdata = 64'd0;
reg sdram_master_p1_wrdata_en = 1'd0;
reg [7:0] sdram_master_p1_wrdata_mask = 8'd0;
reg sdram_master_p1_rddata_en = 1'd0;
wire [63:0] sdram_master_p1_rddata;
wire sdram_master_p1_rddata_valid;
wire sdram_sel;
wire sdram_cke;
wire sdram_odt;
wire sdram_reset_n;
reg [3:0] sdram_storage = 4'd1;
reg sdram_re = 1'd0;
reg [5:0] sdram_phaseinjector0_command_storage = 6'd0;
reg sdram_phaseinjector0_command_re = 1'd0;
wire sdram_phaseinjector0_command_issue_re;
wire sdram_phaseinjector0_command_issue_r;
wire sdram_phaseinjector0_command_issue_we;
reg sdram_phaseinjector0_command_issue_w = 1'd0;
reg [12:0] sdram_phaseinjector0_address_storage = 13'd0;
reg sdram_phaseinjector0_address_re = 1'd0;
reg [2:0] sdram_phaseinjector0_baddress_storage = 3'd0;
reg sdram_phaseinjector0_baddress_re = 1'd0;
reg [63:0] sdram_phaseinjector0_wrdata_storage = 64'd0;
reg sdram_phaseinjector0_wrdata_re = 1'd0;
reg [63:0] sdram_phaseinjector0_rddata_status = 64'd0;
wire sdram_phaseinjector0_rddata_we;
wire sdram_phaseinjector0_rddata_re;
reg [5:0] sdram_phaseinjector1_command_storage = 6'd0;
reg sdram_phaseinjector1_command_re = 1'd0;
wire sdram_phaseinjector1_command_issue_re;
wire sdram_phaseinjector1_command_issue_r;
wire sdram_phaseinjector1_command_issue_we;
reg sdram_phaseinjector1_command_issue_w = 1'd0;
reg [12:0] sdram_phaseinjector1_address_storage = 13'd0;
reg sdram_phaseinjector1_address_re = 1'd0;
reg [2:0] sdram_phaseinjector1_baddress_storage = 3'd0;
reg sdram_phaseinjector1_baddress_re = 1'd0;
reg [63:0] sdram_phaseinjector1_wrdata_storage = 64'd0;
reg sdram_phaseinjector1_wrdata_re = 1'd0;
reg [63:0] sdram_phaseinjector1_rddata_status = 64'd0;
wire sdram_phaseinjector1_rddata_we;
wire sdram_phaseinjector1_rddata_re;
wire sdram_interface_bank0_valid;
wire sdram_interface_bank0_ready;
wire sdram_interface_bank0_we;
wire [19:0] sdram_interface_bank0_addr;
wire sdram_interface_bank0_lock;
wire sdram_interface_bank0_wdata_ready;
wire sdram_interface_bank0_rdata_valid;
wire sdram_interface_bank1_valid;
wire sdram_interface_bank1_ready;
wire sdram_interface_bank1_we;
wire [19:0] sdram_interface_bank1_addr;
wire sdram_interface_bank1_lock;
wire sdram_interface_bank1_wdata_ready;
wire sdram_interface_bank1_rdata_valid;
wire sdram_interface_bank2_valid;
wire sdram_interface_bank2_ready;
wire sdram_interface_bank2_we;
wire [19:0] sdram_interface_bank2_addr;
wire sdram_interface_bank2_lock;
wire sdram_interface_bank2_wdata_ready;
wire sdram_interface_bank2_rdata_valid;
wire sdram_interface_bank3_valid;
wire sdram_interface_bank3_ready;
wire sdram_interface_bank3_we;
wire [19:0] sdram_interface_bank3_addr;
wire sdram_interface_bank3_lock;
wire sdram_interface_bank3_wdata_ready;
wire sdram_interface_bank3_rdata_valid;
wire sdram_interface_bank4_valid;
wire sdram_interface_bank4_ready;
wire sdram_interface_bank4_we;
wire [19:0] sdram_interface_bank4_addr;
wire sdram_interface_bank4_lock;
wire sdram_interface_bank4_wdata_ready;
wire sdram_interface_bank4_rdata_valid;
wire sdram_interface_bank5_valid;
wire sdram_interface_bank5_ready;
wire sdram_interface_bank5_we;
wire [19:0] sdram_interface_bank5_addr;
wire sdram_interface_bank5_lock;
wire sdram_interface_bank5_wdata_ready;
wire sdram_interface_bank5_rdata_valid;
wire sdram_interface_bank6_valid;
wire sdram_interface_bank6_ready;
wire sdram_interface_bank6_we;
wire [19:0] sdram_interface_bank6_addr;
wire sdram_interface_bank6_lock;
wire sdram_interface_bank6_wdata_ready;
wire sdram_interface_bank6_rdata_valid;
wire sdram_interface_bank7_valid;
wire sdram_interface_bank7_ready;
wire sdram_interface_bank7_we;
wire [19:0] sdram_interface_bank7_addr;
wire sdram_interface_bank7_lock;
wire sdram_interface_bank7_wdata_ready;
wire sdram_interface_bank7_rdata_valid;
reg [127:0] sdram_interface_wdata = 128'd0;
reg [15:0] sdram_interface_wdata_we = 16'd0;
wire [127:0] sdram_interface_rdata;
reg [12:0] sdram_dfi_p0_address = 13'd0;
reg [2:0] sdram_dfi_p0_bank = 3'd0;
reg sdram_dfi_p0_cas_n = 1'd1;
reg sdram_dfi_p0_cs_n = 1'd1;
reg sdram_dfi_p0_ras_n = 1'd1;
reg sdram_dfi_p0_we_n = 1'd1;
wire sdram_dfi_p0_cke;
wire sdram_dfi_p0_odt;
wire sdram_dfi_p0_reset_n;
reg sdram_dfi_p0_act_n = 1'd1;
wire [63:0] sdram_dfi_p0_wrdata;
reg sdram_dfi_p0_wrdata_en = 1'd0;
wire [7:0] sdram_dfi_p0_wrdata_mask;
reg sdram_dfi_p0_rddata_en = 1'd0;
wire [63:0] sdram_dfi_p0_rddata;
wire sdram_dfi_p0_rddata_valid;
reg [12:0] sdram_dfi_p1_address = 13'd0;
reg [2:0] sdram_dfi_p1_bank = 3'd0;
reg sdram_dfi_p1_cas_n = 1'd1;
reg sdram_dfi_p1_cs_n = 1'd1;
reg sdram_dfi_p1_ras_n = 1'd1;
reg sdram_dfi_p1_we_n = 1'd1;
wire sdram_dfi_p1_cke;
wire sdram_dfi_p1_odt;
wire sdram_dfi_p1_reset_n;
reg sdram_dfi_p1_act_n = 1'd1;
wire [63:0] sdram_dfi_p1_wrdata;
reg sdram_dfi_p1_wrdata_en = 1'd0;
wire [7:0] sdram_dfi_p1_wrdata_mask;
reg sdram_dfi_p1_rddata_en = 1'd0;
wire [63:0] sdram_dfi_p1_rddata;
wire sdram_dfi_p1_rddata_valid;
reg sdram_cmd_valid = 1'd0;
reg sdram_cmd_ready = 1'd0;
reg sdram_cmd_last = 1'd0;
reg [12:0] sdram_cmd_payload_a = 13'd0;
reg [2:0] sdram_cmd_payload_ba = 3'd0;
reg sdram_cmd_payload_cas = 1'd0;
reg sdram_cmd_payload_ras = 1'd0;
reg sdram_cmd_payload_we = 1'd0;
reg sdram_cmd_payload_is_read = 1'd0;
reg sdram_cmd_payload_is_write = 1'd0;
wire sdram_wants_refresh;
wire sdram_wants_zqcs;
wire sdram_timer_wait;
wire sdram_timer_done0;
wire [8:0] sdram_timer_count0;
wire sdram_timer_done1;
reg [8:0] sdram_timer_count1 = 9'd374;
wire sdram_postponer_req_i;
reg sdram_postponer_req_o = 1'd0;
reg sdram_postponer_count = 1'd0;
reg sdram_sequencer_start0 = 1'd0;
wire sdram_sequencer_done0;
wire sdram_sequencer_start1;
reg sdram_sequencer_done1 = 1'd0;
reg [6:0] sdram_sequencer_counter = 7'd0;
reg sdram_sequencer_count = 1'd0;
wire sdram_zqcs_timer_wait;
wire sdram_zqcs_timer_done0;
wire [25:0] sdram_zqcs_timer_count0;
wire sdram_zqcs_timer_done1;
reg [25:0] sdram_zqcs_timer_count1 = 26'd47999999;
reg sdram_zqcs_executer_start = 1'd0;
reg sdram_zqcs_executer_done = 1'd0;
reg [5:0] sdram_zqcs_executer_counter = 6'd0;
wire sdram_bankmachine0_req_valid;
wire sdram_bankmachine0_req_ready;
wire sdram_bankmachine0_req_we;
wire [19:0] sdram_bankmachine0_req_addr;
wire sdram_bankmachine0_req_lock;
reg sdram_bankmachine0_req_wdata_ready = 1'd0;
reg sdram_bankmachine0_req_rdata_valid = 1'd0;
wire sdram_bankmachine0_refresh_req;
reg sdram_bankmachine0_refresh_gnt = 1'd0;
reg sdram_bankmachine0_cmd_valid = 1'd0;
reg sdram_bankmachine0_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine0_cmd_payload_a = 13'd0;
wire [2:0] sdram_bankmachine0_cmd_payload_ba;
reg sdram_bankmachine0_cmd_payload_cas = 1'd0;
reg sdram_bankmachine0_cmd_payload_ras = 1'd0;
reg sdram_bankmachine0_cmd_payload_we = 1'd0;
reg sdram_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine0_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine0_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine0_auto_precharge = 1'd0;
wire sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine0_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine0_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
wire [19:0] sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
wire [19:0] sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we;
wire sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
wire sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re;
wire sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
wire [22:0] sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
wire [22:0] sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
reg [3:0] sdram_bankmachine0_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine0_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine0_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine0_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [22:0] sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine0_cmd_buffer_lookahead_wrport_we;
wire [22:0] sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine0_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr;
wire [22:0] sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we;
wire [19:0] sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
wire [19:0] sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine0_cmd_buffer_sink_valid;
wire sdram_bankmachine0_cmd_buffer_sink_ready;
wire sdram_bankmachine0_cmd_buffer_sink_first;
wire sdram_bankmachine0_cmd_buffer_sink_last;
wire sdram_bankmachine0_cmd_buffer_sink_payload_we;
wire [19:0] sdram_bankmachine0_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine0_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine0_cmd_buffer_source_ready;
reg sdram_bankmachine0_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine0_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine0_cmd_buffer_source_payload_we = 1'd0;
reg [19:0] sdram_bankmachine0_cmd_buffer_source_payload_addr = 20'd0;
reg [12:0] sdram_bankmachine0_row = 13'd0;
reg sdram_bankmachine0_row_opened = 1'd0;
wire sdram_bankmachine0_row_hit;
reg sdram_bankmachine0_row_open = 1'd0;
reg sdram_bankmachine0_row_close = 1'd0;
reg sdram_bankmachine0_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine0_twtpcon_valid;
reg sdram_bankmachine0_twtpcon_ready = 1'd0;
reg [2:0] sdram_bankmachine0_twtpcon_count = 3'd0;
wire sdram_bankmachine0_trccon_valid;
reg sdram_bankmachine0_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine0_trccon_count = 2'd0;
wire sdram_bankmachine0_trascon_valid;
reg sdram_bankmachine0_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine0_trascon_count = 2'd0;
wire sdram_bankmachine1_req_valid;
wire sdram_bankmachine1_req_ready;
wire sdram_bankmachine1_req_we;
wire [19:0] sdram_bankmachine1_req_addr;
wire sdram_bankmachine1_req_lock;
reg sdram_bankmachine1_req_wdata_ready = 1'd0;
reg sdram_bankmachine1_req_rdata_valid = 1'd0;
wire sdram_bankmachine1_refresh_req;
reg sdram_bankmachine1_refresh_gnt = 1'd0;
reg sdram_bankmachine1_cmd_valid = 1'd0;
reg sdram_bankmachine1_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine1_cmd_payload_a = 13'd0;
wire [2:0] sdram_bankmachine1_cmd_payload_ba;
reg sdram_bankmachine1_cmd_payload_cas = 1'd0;
reg sdram_bankmachine1_cmd_payload_ras = 1'd0;
reg sdram_bankmachine1_cmd_payload_we = 1'd0;
reg sdram_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine1_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine1_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine1_auto_precharge = 1'd0;
wire sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine1_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine1_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
wire [19:0] sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
wire [19:0] sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we;
wire sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
wire sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re;
wire sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
wire [22:0] sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
wire [22:0] sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
reg [3:0] sdram_bankmachine1_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine1_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine1_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine1_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [22:0] sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine1_cmd_buffer_lookahead_wrport_we;
wire [22:0] sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine1_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr;
wire [22:0] sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we;
wire [19:0] sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
wire [19:0] sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine1_cmd_buffer_sink_valid;
wire sdram_bankmachine1_cmd_buffer_sink_ready;
wire sdram_bankmachine1_cmd_buffer_sink_first;
wire sdram_bankmachine1_cmd_buffer_sink_last;
wire sdram_bankmachine1_cmd_buffer_sink_payload_we;
wire [19:0] sdram_bankmachine1_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine1_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine1_cmd_buffer_source_ready;
reg sdram_bankmachine1_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine1_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine1_cmd_buffer_source_payload_we = 1'd0;
reg [19:0] sdram_bankmachine1_cmd_buffer_source_payload_addr = 20'd0;
reg [12:0] sdram_bankmachine1_row = 13'd0;
reg sdram_bankmachine1_row_opened = 1'd0;
wire sdram_bankmachine1_row_hit;
reg sdram_bankmachine1_row_open = 1'd0;
reg sdram_bankmachine1_row_close = 1'd0;
reg sdram_bankmachine1_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine1_twtpcon_valid;
reg sdram_bankmachine1_twtpcon_ready = 1'd0;
reg [2:0] sdram_bankmachine1_twtpcon_count = 3'd0;
wire sdram_bankmachine1_trccon_valid;
reg sdram_bankmachine1_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine1_trccon_count = 2'd0;
wire sdram_bankmachine1_trascon_valid;
reg sdram_bankmachine1_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine1_trascon_count = 2'd0;
wire sdram_bankmachine2_req_valid;
wire sdram_bankmachine2_req_ready;
wire sdram_bankmachine2_req_we;
wire [19:0] sdram_bankmachine2_req_addr;
wire sdram_bankmachine2_req_lock;
reg sdram_bankmachine2_req_wdata_ready = 1'd0;
reg sdram_bankmachine2_req_rdata_valid = 1'd0;
wire sdram_bankmachine2_refresh_req;
reg sdram_bankmachine2_refresh_gnt = 1'd0;
reg sdram_bankmachine2_cmd_valid = 1'd0;
reg sdram_bankmachine2_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine2_cmd_payload_a = 13'd0;
wire [2:0] sdram_bankmachine2_cmd_payload_ba;
reg sdram_bankmachine2_cmd_payload_cas = 1'd0;
reg sdram_bankmachine2_cmd_payload_ras = 1'd0;
reg sdram_bankmachine2_cmd_payload_we = 1'd0;
reg sdram_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine2_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine2_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine2_auto_precharge = 1'd0;
wire sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine2_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine2_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
wire [19:0] sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
wire [19:0] sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we;
wire sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
wire sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re;
wire sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
wire [22:0] sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
wire [22:0] sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
reg [3:0] sdram_bankmachine2_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine2_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine2_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine2_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [22:0] sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine2_cmd_buffer_lookahead_wrport_we;
wire [22:0] sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine2_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr;
wire [22:0] sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we;
wire [19:0] sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
wire [19:0] sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine2_cmd_buffer_sink_valid;
wire sdram_bankmachine2_cmd_buffer_sink_ready;
wire sdram_bankmachine2_cmd_buffer_sink_first;
wire sdram_bankmachine2_cmd_buffer_sink_last;
wire sdram_bankmachine2_cmd_buffer_sink_payload_we;
wire [19:0] sdram_bankmachine2_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine2_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine2_cmd_buffer_source_ready;
reg sdram_bankmachine2_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine2_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine2_cmd_buffer_source_payload_we = 1'd0;
reg [19:0] sdram_bankmachine2_cmd_buffer_source_payload_addr = 20'd0;
reg [12:0] sdram_bankmachine2_row = 13'd0;
reg sdram_bankmachine2_row_opened = 1'd0;
wire sdram_bankmachine2_row_hit;
reg sdram_bankmachine2_row_open = 1'd0;
reg sdram_bankmachine2_row_close = 1'd0;
reg sdram_bankmachine2_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine2_twtpcon_valid;
reg sdram_bankmachine2_twtpcon_ready = 1'd0;
reg [2:0] sdram_bankmachine2_twtpcon_count = 3'd0;
wire sdram_bankmachine2_trccon_valid;
reg sdram_bankmachine2_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine2_trccon_count = 2'd0;
wire sdram_bankmachine2_trascon_valid;
reg sdram_bankmachine2_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine2_trascon_count = 2'd0;
wire sdram_bankmachine3_req_valid;
wire sdram_bankmachine3_req_ready;
wire sdram_bankmachine3_req_we;
wire [19:0] sdram_bankmachine3_req_addr;
wire sdram_bankmachine3_req_lock;
reg sdram_bankmachine3_req_wdata_ready = 1'd0;
reg sdram_bankmachine3_req_rdata_valid = 1'd0;
wire sdram_bankmachine3_refresh_req;
reg sdram_bankmachine3_refresh_gnt = 1'd0;
reg sdram_bankmachine3_cmd_valid = 1'd0;
reg sdram_bankmachine3_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine3_cmd_payload_a = 13'd0;
wire [2:0] sdram_bankmachine3_cmd_payload_ba;
reg sdram_bankmachine3_cmd_payload_cas = 1'd0;
reg sdram_bankmachine3_cmd_payload_ras = 1'd0;
reg sdram_bankmachine3_cmd_payload_we = 1'd0;
reg sdram_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine3_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine3_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine3_auto_precharge = 1'd0;
wire sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine3_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine3_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
wire [19:0] sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
wire [19:0] sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we;
wire sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
wire sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re;
wire sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
wire [22:0] sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
wire [22:0] sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
reg [3:0] sdram_bankmachine3_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine3_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine3_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine3_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [22:0] sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine3_cmd_buffer_lookahead_wrport_we;
wire [22:0] sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine3_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr;
wire [22:0] sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we;
wire [19:0] sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
wire [19:0] sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine3_cmd_buffer_sink_valid;
wire sdram_bankmachine3_cmd_buffer_sink_ready;
wire sdram_bankmachine3_cmd_buffer_sink_first;
wire sdram_bankmachine3_cmd_buffer_sink_last;
wire sdram_bankmachine3_cmd_buffer_sink_payload_we;
wire [19:0] sdram_bankmachine3_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine3_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine3_cmd_buffer_source_ready;
reg sdram_bankmachine3_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine3_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine3_cmd_buffer_source_payload_we = 1'd0;
reg [19:0] sdram_bankmachine3_cmd_buffer_source_payload_addr = 20'd0;
reg [12:0] sdram_bankmachine3_row = 13'd0;
reg sdram_bankmachine3_row_opened = 1'd0;
wire sdram_bankmachine3_row_hit;
reg sdram_bankmachine3_row_open = 1'd0;
reg sdram_bankmachine3_row_close = 1'd0;
reg sdram_bankmachine3_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine3_twtpcon_valid;
reg sdram_bankmachine3_twtpcon_ready = 1'd0;
reg [2:0] sdram_bankmachine3_twtpcon_count = 3'd0;
wire sdram_bankmachine3_trccon_valid;
reg sdram_bankmachine3_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine3_trccon_count = 2'd0;
wire sdram_bankmachine3_trascon_valid;
reg sdram_bankmachine3_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine3_trascon_count = 2'd0;
wire sdram_bankmachine4_req_valid;
wire sdram_bankmachine4_req_ready;
wire sdram_bankmachine4_req_we;
wire [19:0] sdram_bankmachine4_req_addr;
wire sdram_bankmachine4_req_lock;
reg sdram_bankmachine4_req_wdata_ready = 1'd0;
reg sdram_bankmachine4_req_rdata_valid = 1'd0;
wire sdram_bankmachine4_refresh_req;
reg sdram_bankmachine4_refresh_gnt = 1'd0;
reg sdram_bankmachine4_cmd_valid = 1'd0;
reg sdram_bankmachine4_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine4_cmd_payload_a = 13'd0;
wire [2:0] sdram_bankmachine4_cmd_payload_ba;
reg sdram_bankmachine4_cmd_payload_cas = 1'd0;
reg sdram_bankmachine4_cmd_payload_ras = 1'd0;
reg sdram_bankmachine4_cmd_payload_we = 1'd0;
reg sdram_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine4_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine4_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine4_auto_precharge = 1'd0;
wire sdram_bankmachine4_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine4_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine4_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine4_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we;
wire [19:0] sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine4_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine4_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine4_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine4_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we;
wire [19:0] sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we;
wire sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable;
wire sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re;
wire sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable;
wire [22:0] sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din;
wire [22:0] sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
reg [3:0] sdram_bankmachine4_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine4_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine4_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine4_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [22:0] sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine4_cmd_buffer_lookahead_wrport_we;
wire [22:0] sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine4_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr;
wire [22:0] sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we;
wire [19:0] sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we;
wire [19:0] sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine4_cmd_buffer_sink_valid;
wire sdram_bankmachine4_cmd_buffer_sink_ready;
wire sdram_bankmachine4_cmd_buffer_sink_first;
wire sdram_bankmachine4_cmd_buffer_sink_last;
wire sdram_bankmachine4_cmd_buffer_sink_payload_we;
wire [19:0] sdram_bankmachine4_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine4_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine4_cmd_buffer_source_ready;
reg sdram_bankmachine4_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine4_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine4_cmd_buffer_source_payload_we = 1'd0;
reg [19:0] sdram_bankmachine4_cmd_buffer_source_payload_addr = 20'd0;
reg [12:0] sdram_bankmachine4_row = 13'd0;
reg sdram_bankmachine4_row_opened = 1'd0;
wire sdram_bankmachine4_row_hit;
reg sdram_bankmachine4_row_open = 1'd0;
reg sdram_bankmachine4_row_close = 1'd0;
reg sdram_bankmachine4_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine4_twtpcon_valid;
reg sdram_bankmachine4_twtpcon_ready = 1'd0;
reg [2:0] sdram_bankmachine4_twtpcon_count = 3'd0;
wire sdram_bankmachine4_trccon_valid;
reg sdram_bankmachine4_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine4_trccon_count = 2'd0;
wire sdram_bankmachine4_trascon_valid;
reg sdram_bankmachine4_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine4_trascon_count = 2'd0;
wire sdram_bankmachine5_req_valid;
wire sdram_bankmachine5_req_ready;
wire sdram_bankmachine5_req_we;
wire [19:0] sdram_bankmachine5_req_addr;
wire sdram_bankmachine5_req_lock;
reg sdram_bankmachine5_req_wdata_ready = 1'd0;
reg sdram_bankmachine5_req_rdata_valid = 1'd0;
wire sdram_bankmachine5_refresh_req;
reg sdram_bankmachine5_refresh_gnt = 1'd0;
reg sdram_bankmachine5_cmd_valid = 1'd0;
reg sdram_bankmachine5_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine5_cmd_payload_a = 13'd0;
wire [2:0] sdram_bankmachine5_cmd_payload_ba;
reg sdram_bankmachine5_cmd_payload_cas = 1'd0;
reg sdram_bankmachine5_cmd_payload_ras = 1'd0;
reg sdram_bankmachine5_cmd_payload_we = 1'd0;
reg sdram_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine5_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine5_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine5_auto_precharge = 1'd0;
wire sdram_bankmachine5_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine5_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine5_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine5_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we;
wire [19:0] sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine5_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine5_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine5_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine5_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we;
wire [19:0] sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we;
wire sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable;
wire sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re;
wire sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable;
wire [22:0] sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din;
wire [22:0] sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
reg [3:0] sdram_bankmachine5_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine5_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine5_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine5_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [22:0] sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine5_cmd_buffer_lookahead_wrport_we;
wire [22:0] sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine5_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr;
wire [22:0] sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we;
wire [19:0] sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we;
wire [19:0] sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine5_cmd_buffer_sink_valid;
wire sdram_bankmachine5_cmd_buffer_sink_ready;
wire sdram_bankmachine5_cmd_buffer_sink_first;
wire sdram_bankmachine5_cmd_buffer_sink_last;
wire sdram_bankmachine5_cmd_buffer_sink_payload_we;
wire [19:0] sdram_bankmachine5_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine5_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine5_cmd_buffer_source_ready;
reg sdram_bankmachine5_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine5_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine5_cmd_buffer_source_payload_we = 1'd0;
reg [19:0] sdram_bankmachine5_cmd_buffer_source_payload_addr = 20'd0;
reg [12:0] sdram_bankmachine5_row = 13'd0;
reg sdram_bankmachine5_row_opened = 1'd0;
wire sdram_bankmachine5_row_hit;
reg sdram_bankmachine5_row_open = 1'd0;
reg sdram_bankmachine5_row_close = 1'd0;
reg sdram_bankmachine5_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine5_twtpcon_valid;
reg sdram_bankmachine5_twtpcon_ready = 1'd0;
reg [2:0] sdram_bankmachine5_twtpcon_count = 3'd0;
wire sdram_bankmachine5_trccon_valid;
reg sdram_bankmachine5_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine5_trccon_count = 2'd0;
wire sdram_bankmachine5_trascon_valid;
reg sdram_bankmachine5_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine5_trascon_count = 2'd0;
wire sdram_bankmachine6_req_valid;
wire sdram_bankmachine6_req_ready;
wire sdram_bankmachine6_req_we;
wire [19:0] sdram_bankmachine6_req_addr;
wire sdram_bankmachine6_req_lock;
reg sdram_bankmachine6_req_wdata_ready = 1'd0;
reg sdram_bankmachine6_req_rdata_valid = 1'd0;
wire sdram_bankmachine6_refresh_req;
reg sdram_bankmachine6_refresh_gnt = 1'd0;
reg sdram_bankmachine6_cmd_valid = 1'd0;
reg sdram_bankmachine6_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine6_cmd_payload_a = 13'd0;
wire [2:0] sdram_bankmachine6_cmd_payload_ba;
reg sdram_bankmachine6_cmd_payload_cas = 1'd0;
reg sdram_bankmachine6_cmd_payload_ras = 1'd0;
reg sdram_bankmachine6_cmd_payload_we = 1'd0;
reg sdram_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine6_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine6_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine6_auto_precharge = 1'd0;
wire sdram_bankmachine6_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine6_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine6_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine6_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we;
wire [19:0] sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine6_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine6_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine6_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine6_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we;
wire [19:0] sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we;
wire sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable;
wire sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re;
wire sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable;
wire [22:0] sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din;
wire [22:0] sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
reg [3:0] sdram_bankmachine6_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine6_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine6_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine6_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [22:0] sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine6_cmd_buffer_lookahead_wrport_we;
wire [22:0] sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine6_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr;
wire [22:0] sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we;
wire [19:0] sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we;
wire [19:0] sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine6_cmd_buffer_sink_valid;
wire sdram_bankmachine6_cmd_buffer_sink_ready;
wire sdram_bankmachine6_cmd_buffer_sink_first;
wire sdram_bankmachine6_cmd_buffer_sink_last;
wire sdram_bankmachine6_cmd_buffer_sink_payload_we;
wire [19:0] sdram_bankmachine6_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine6_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine6_cmd_buffer_source_ready;
reg sdram_bankmachine6_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine6_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine6_cmd_buffer_source_payload_we = 1'd0;
reg [19:0] sdram_bankmachine6_cmd_buffer_source_payload_addr = 20'd0;
reg [12:0] sdram_bankmachine6_row = 13'd0;
reg sdram_bankmachine6_row_opened = 1'd0;
wire sdram_bankmachine6_row_hit;
reg sdram_bankmachine6_row_open = 1'd0;
reg sdram_bankmachine6_row_close = 1'd0;
reg sdram_bankmachine6_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine6_twtpcon_valid;
reg sdram_bankmachine6_twtpcon_ready = 1'd0;
reg [2:0] sdram_bankmachine6_twtpcon_count = 3'd0;
wire sdram_bankmachine6_trccon_valid;
reg sdram_bankmachine6_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine6_trccon_count = 2'd0;
wire sdram_bankmachine6_trascon_valid;
reg sdram_bankmachine6_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine6_trascon_count = 2'd0;
wire sdram_bankmachine7_req_valid;
wire sdram_bankmachine7_req_ready;
wire sdram_bankmachine7_req_we;
wire [19:0] sdram_bankmachine7_req_addr;
wire sdram_bankmachine7_req_lock;
reg sdram_bankmachine7_req_wdata_ready = 1'd0;
reg sdram_bankmachine7_req_rdata_valid = 1'd0;
wire sdram_bankmachine7_refresh_req;
reg sdram_bankmachine7_refresh_gnt = 1'd0;
reg sdram_bankmachine7_cmd_valid = 1'd0;
reg sdram_bankmachine7_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine7_cmd_payload_a = 13'd0;
wire [2:0] sdram_bankmachine7_cmd_payload_ba;
reg sdram_bankmachine7_cmd_payload_cas = 1'd0;
reg sdram_bankmachine7_cmd_payload_ras = 1'd0;
reg sdram_bankmachine7_cmd_payload_we = 1'd0;
reg sdram_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine7_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine7_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine7_auto_precharge = 1'd0;
wire sdram_bankmachine7_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine7_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine7_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine7_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we;
wire [19:0] sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine7_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine7_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine7_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine7_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we;
wire [19:0] sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we;
wire sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable;
wire sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re;
wire sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable;
wire [22:0] sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din;
wire [22:0] sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
reg [3:0] sdram_bankmachine7_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine7_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine7_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine7_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [22:0] sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine7_cmd_buffer_lookahead_wrport_we;
wire [22:0] sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine7_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr;
wire [22:0] sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we;
wire [19:0] sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we;
wire [19:0] sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine7_cmd_buffer_sink_valid;
wire sdram_bankmachine7_cmd_buffer_sink_ready;
wire sdram_bankmachine7_cmd_buffer_sink_first;
wire sdram_bankmachine7_cmd_buffer_sink_last;
wire sdram_bankmachine7_cmd_buffer_sink_payload_we;
wire [19:0] sdram_bankmachine7_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine7_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine7_cmd_buffer_source_ready;
reg sdram_bankmachine7_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine7_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine7_cmd_buffer_source_payload_we = 1'd0;
reg [19:0] sdram_bankmachine7_cmd_buffer_source_payload_addr = 20'd0;
reg [12:0] sdram_bankmachine7_row = 13'd0;
reg sdram_bankmachine7_row_opened = 1'd0;
wire sdram_bankmachine7_row_hit;
reg sdram_bankmachine7_row_open = 1'd0;
reg sdram_bankmachine7_row_close = 1'd0;
reg sdram_bankmachine7_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine7_twtpcon_valid;
reg sdram_bankmachine7_twtpcon_ready = 1'd0;
reg [2:0] sdram_bankmachine7_twtpcon_count = 3'd0;
wire sdram_bankmachine7_trccon_valid;
reg sdram_bankmachine7_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine7_trccon_count = 2'd0;
wire sdram_bankmachine7_trascon_valid;
reg sdram_bankmachine7_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine7_trascon_count = 2'd0;
wire sdram_ras_allowed;
wire sdram_cas_allowed;
reg sdram_choose_cmd_want_reads = 1'd0;
reg sdram_choose_cmd_want_writes = 1'd0;
reg sdram_choose_cmd_want_cmds = 1'd0;
reg sdram_choose_cmd_want_activates = 1'd0;
wire sdram_choose_cmd_cmd_valid;
reg sdram_choose_cmd_cmd_ready = 1'd0;
wire [12:0] sdram_choose_cmd_cmd_payload_a;
wire [2:0] sdram_choose_cmd_cmd_payload_ba;
reg sdram_choose_cmd_cmd_payload_cas = 1'd0;
reg sdram_choose_cmd_cmd_payload_ras = 1'd0;
reg sdram_choose_cmd_cmd_payload_we = 1'd0;
wire sdram_choose_cmd_cmd_payload_is_cmd;
wire sdram_choose_cmd_cmd_payload_is_read;
wire sdram_choose_cmd_cmd_payload_is_write;
reg [7:0] sdram_choose_cmd_valids = 8'd0;
wire [7:0] sdram_choose_cmd_request;
reg [2:0] sdram_choose_cmd_grant = 3'd0;
wire sdram_choose_cmd_ce;
reg sdram_choose_req_want_reads = 1'd0;
reg sdram_choose_req_want_writes = 1'd0;
reg sdram_choose_req_want_cmds = 1'd0;
reg sdram_choose_req_want_activates = 1'd0;
wire sdram_choose_req_cmd_valid;
reg sdram_choose_req_cmd_ready = 1'd0;
wire [12:0] sdram_choose_req_cmd_payload_a;
wire [2:0] sdram_choose_req_cmd_payload_ba;
reg sdram_choose_req_cmd_payload_cas = 1'd0;
reg sdram_choose_req_cmd_payload_ras = 1'd0;
reg sdram_choose_req_cmd_payload_we = 1'd0;
wire sdram_choose_req_cmd_payload_is_cmd;
wire sdram_choose_req_cmd_payload_is_read;
wire sdram_choose_req_cmd_payload_is_write;
reg [7:0] sdram_choose_req_valids = 8'd0;
wire [7:0] sdram_choose_req_request;
reg [2:0] sdram_choose_req_grant = 3'd0;
wire sdram_choose_req_ce;
reg [12:0] sdram_nop_a = 13'd0;
reg [2:0] sdram_nop_ba = 3'd0;
reg [1:0] sdram_steerer_sel0 = 2'd0;
reg [1:0] sdram_steerer_sel1 = 2'd0;
reg sdram_steerer0 = 1'd1;
reg sdram_steerer1 = 1'd1;
reg sdram_steerer2 = 1'd1;
reg sdram_steerer3 = 1'd1;
wire sdram_trrdcon_valid;
reg sdram_trrdcon_ready = 1'd0;
reg sdram_trrdcon_count = 1'd0;
wire sdram_tfawcon_valid;
reg sdram_tfawcon_ready = 1'd1;
wire [1:0] sdram_tfawcon_count;
reg [2:0] sdram_tfawcon_window = 3'd0;
wire sdram_tccdcon_valid;
reg sdram_tccdcon_ready = 1'd0;
reg sdram_tccdcon_count = 1'd0;
wire sdram_twtrcon_valid;
reg sdram_twtrcon_ready = 1'd0;
reg [2:0] sdram_twtrcon_count = 3'd0;
wire sdram_read_available;
wire sdram_write_available;
reg sdram_en0 = 1'd0;
wire sdram_max_time0;
reg [4:0] sdram_time0 = 5'd0;
reg sdram_en1 = 1'd0;
wire sdram_max_time1;
reg [3:0] sdram_time1 = 4'd0;
wire sdram_go_to_refresh;
wire port_flush;
wire port_cmd_valid;
wire port_cmd_ready;
wire port_cmd_last;
wire port_cmd_payload_we;
wire [22:0] port_cmd_payload_addr;
wire port_wdata_valid;
wire port_wdata_ready;
wire [127:0] port_wdata_payload_data;
wire [15:0] port_wdata_payload_we;
wire port_rdata_valid;
wire port_rdata_ready;
wire [127:0] port_rdata_payload_data;
wire [29:0] wb_sdram_adr;
wire [31:0] wb_sdram_dat_w;
reg [31:0] wb_sdram_dat_r = 32'd0;
wire [3:0] wb_sdram_sel;
wire wb_sdram_cyc;
wire wb_sdram_stb;
reg wb_sdram_ack = 1'd0;
wire wb_sdram_we;
wire [2:0] wb_sdram_cti;
wire [1:0] wb_sdram_bte;
reg wb_sdram_err = 1'd0;
wire [29:0] interface_adr;
wire [127:0] interface_dat_w;
wire [127:0] interface_dat_r;
wire [15:0] interface_sel;
reg interface_cyc = 1'd0;
reg interface_stb = 1'd0;
wire interface_ack;
reg interface_we = 1'd0;
wire [8:0] data_port_adr;
wire [127:0] data_port_dat_r;
reg [15:0] data_port_we = 16'd0;
reg [127:0] data_port_dat_w = 128'd0;
reg write_from_slave = 1'd0;
reg [1:0] adr_offset_r = 2'd0;
wire [8:0] tag_port_adr;
wire [23:0] tag_port_dat_r;
reg tag_port_we = 1'd0;
wire [23:0] tag_port_dat_w;
wire [22:0] tag_do_tag;
wire tag_do_dirty;
wire [22:0] tag_di_tag;
reg tag_di_dirty = 1'd0;
reg word_clr = 1'd0;
reg word_inc = 1'd0;
reg cmd_consumed = 1'd0;
reg wdata_consumed = 1'd0;
wire ack_cmd;
wire ack_wdata;
wire ack_rdata;
reg [7:0] r_storage = 8'd255;
reg r_re = 1'd0;
reg [7:0] g_storage = 8'd0;
reg g_re = 1'd0;
reg [7:0] b_storage = 8'd0;
reg b_re = 1'd0;
reg [31:0] div_m_storage = 32'd0;
reg div_m_re = 1'd0;
wire breath;
wire rainbow;
reg [1:0] config_storage = 2'd0;
reg config_re = 1'd0;
reg [31:0] div_m_counter = 32'd0;
wire strobe;
wire [7:0] pdm_r_level;
wire [15:0] pdm_r_level_corr;
wire pdm_r_out;
wire [7:0] pdm_r_adr;
wire [15:0] pdm_r_dat_r;
reg [16:0] pdm_r_sigma = 17'd0;
wire [7:0] pdm_g_level;
wire [15:0] pdm_g_level_corr;
wire pdm_g_out;
wire [7:0] pdm_g_adr;
wire [15:0] pdm_g_dat_r;
reg [16:0] pdm_g_sigma = 17'd0;
wire [7:0] pdm_b_level;
wire [15:0] pdm_b_level_corr;
wire pdm_b_out;
wire [7:0] pdm_b_adr;
wire [15:0] pdm_b_dat_r;
reg [16:0] pdm_b_sigma = 17'd0;
wire pwm0_out;
reg [15:0] pwm0_pwm_counter = 16'd0;
reg [7:0] pwm0_counter_value = 8'd0;
wire [15:0] pwm0_counter;
wire [7:0] pwm0_adr;
wire [15:0] pwm0_dat_r;
wire modulate;
reg io0 = 1'd0;
reg io1 = 1'd0;
reg io5 = 1'd0;
reg io6 = 1'd0;
reg io9 = 1'd0;
reg io10 = 1'd0;
reg io11 = 1'd0;
reg io12 = 1'd0;
reg io13 = 1'd0;
reg io18 = 1'd0;
reg io19 = 1'd0;
reg io20 = 1'd0;
reg io21 = 1'd0;
reg [21:0] oe_storage = 22'd0;
reg oe_re = 1'd0;
reg [21:0] in_status = 22'd0;
wire in_we;
wire in_re;
reg [21:0] out_storage = 22'd0;
reg out_re = 1'd0;
wire [7:0] alt0;
reg record0_i = 1'd0;
wire record0_o;
wire record0_oe;
wire [7:0] alt1;
reg record1_i = 1'd0;
wire record1_o;
wire record1_oe;
wire [7:0] alt2;
reg record2_i = 1'd0;
wire record2_o;
wire record2_oe;
wire [7:0] alt3;
reg record3_i = 1'd0;
wire record3_o;
wire record3_oe;
wire [7:0] alt4;
reg record4_i = 1'd0;
wire record4_o;
wire record4_oe;
wire [7:0] alt5;
reg record5_i = 1'd0;
wire record5_o;
wire record5_oe;
wire [7:0] alt6;
reg record6_i = 1'd0;
wire record6_o;
wire record6_oe;
wire [7:0] alt7;
reg record7_i = 1'd0;
wire record7_o;
wire record7_oe;
wire [7:0] alt8;
reg record8_i = 1'd0;
wire record8_o;
wire record8_oe;
wire [7:0] alt9;
reg record9_i = 1'd0;
wire record9_o;
wire record9_oe;
wire [7:0] alt10;
reg record10_i = 1'd0;
wire record10_o;
wire record10_oe;
wire [7:0] alt11;
reg record11_i = 1'd0;
wire record11_o;
wire record11_oe;
wire [7:0] alt12;
reg record12_i = 1'd0;
wire record12_o;
wire record12_oe;
wire status;
wire we;
wire re;
reg lxspi_spiflashdualquad_clk = 1'd0;
wire [29:0] lxspi_bus_adr;
wire [31:0] lxspi_bus_dat_w;
wire [31:0] lxspi_bus_dat_r;
wire [3:0] lxspi_bus_sel;
wire lxspi_bus_cyc;
wire lxspi_bus_stb;
reg lxspi_bus_ack = 1'd0;
wire lxspi_bus_we;
wire [2:0] lxspi_bus_cti;
wire [1:0] lxspi_bus_bte;
reg lxspi_bus_err = 1'd0;
wire lxspi_csrfield_mosi;
wire lxspi_csrfield_clk;
wire lxspi_csrfield_cs_n;
wire lxspi_csrfield_dir;
reg [3:0] lxspi_bitbang_storage = 4'd0;
reg lxspi_bitbang_re = 1'd0;
reg lxspi_miso_status = 1'd0;
wire lxspi_miso_we;
wire lxspi_miso_re;
reg lxspi_bitbang_en_storage = 1'd0;
reg lxspi_bitbang_en_re = 1'd0;
reg lxspi_cs_n = 1'd1;
reg lxspi_clk = 1'd0;
reg lxspi_dq_oe = 1'd0;
reg [3:0] lxspi_o = 4'd0;
reg lxspi_oe = 1'd0;
wire [3:0] lxspi_i0;
reg [31:0] lxspi_sr = 32'd0;
reg lxspi_i1 = 1'd0;
reg [3:0] lxspi_dqi = 4'd0;
reg [5:0] lxspi_counter = 6'd0;
wire usb_iobuf_usb_tx_en;
wire usb_iobuf_usb_p_tx;
wire usb_iobuf_usb_n_tx;
reg usb_iobuf_usb_p_rx = 1'd0;
reg usb_iobuf_usb_n_rx = 1'd0;
wire usb_iobuf_usb_p_t_o;
wire usb_iobuf_usb_p_t_oe;
wire usb_iobuf_usb_p_t_i0;
wire usb_iobuf_usb_n_t_o;
wire usb_iobuf_usb_n_t_oe;
wire usb_iobuf_usb_n_t_i0;
wire usb_iobuf_usb_pullup;
wire usb_iobuf_usb_p_t_i1;
wire usb_iobuf_usb_n_t_i1;
wire [29:0] usb0_bus_bus_adr;
wire [31:0] usb0_bus_bus_dat_w;
wire [31:0] usb0_bus_bus_dat_r;
wire [3:0] usb0_bus_bus_sel;
wire usb0_bus_bus_cyc;
wire usb0_bus_bus_stb;
reg usb0_bus_bus_ack = 1'd0;
wire usb0_bus_bus_we;
wire [2:0] usb0_bus_bus_cti;
wire [1:0] usb0_bus_bus_bte;
reg usb0_bus_bus_err = 1'd0;
reg [13:0] usb0_bus_csr_adr = 14'd0;
reg usb0_bus_csr_we = 1'd0;
wire [7:0] usb0_bus_csr_dat_w;
reg [7:0] usb0_bus_csr_dat_r = 8'd0;
reg usb0_ack = 1'd0;
reg usb0_en = 1'd0;
wire usb0_usb_core_tx_i_bit_strobe;
reg [7:0] usb0_usb_core_tx_i_data_payload = 8'd0;
wire usb0_usb_core_tx_o_data_strobe;
reg usb0_usb_core_tx_i_oe = 1'd0;
wire usb0_usb_core_tx_o_usbp;
wire usb0_usb_core_tx_o_usbn;
wire usb0_usb_core_tx_o_oe;
wire [7:0] usb0_usb_core_tx_shifter_i_data;
reg usb0_usb_core_tx_shifter_o_get = 1'd0;
wire usb0_usb_core_tx_shifter_o_empty;
wire usb0_usb_core_tx_shifter_o_data;
reg [7:0] usb0_usb_core_tx_shifter_shifter = 8'd0;
reg [7:0] usb0_usb_core_tx_shifter_pos = 8'd1;
wire usb0_usb_core_tx_shifter_empty;
wire usb0_usb_core_tx_shifter_ce;
wire usb0_usb_core_tx_shifter_reset;
wire usb0_usb_core_tx_bitstuff_i_data;
wire usb0_usb_core_tx_bitstuff_o_stall;
reg usb0_usb_core_tx_bitstuff_o_will_stall = 1'd0;
reg usb0_usb_core_tx_bitstuff_o_data = 1'd0;
reg usb0_usb_core_tx_bitstuff_stuff_bit = 1'd0;
wire usb0_usb_core_tx_bitstuff_reset;
wire usb0_usb_core_tx_nrzi_i_valid;
wire usb0_usb_core_tx_nrzi_i_oe;
wire usb0_usb_core_tx_nrzi_i_data;
reg usb0_usb_core_tx_nrzi_usbp = 1'd0;
reg usb0_usb_core_tx_nrzi_usbn = 1'd0;
reg usb0_usb_core_tx_nrzi_oe0 = 1'd0;
reg usb0_usb_core_tx_nrzi_o_usbp = 1'd0;
reg usb0_usb_core_tx_nrzi_o_usbn = 1'd0;
reg usb0_usb_core_tx_nrzi_o_oe = 1'd0;
reg [7:0] usb0_usb_core_tx_sync_pulse = 8'd0;
wire usb0_usb_core_tx_fit_dat;
wire usb0_usb_core_tx_fit_oe;
reg usb0_usb_core_tx_da_reset_shifter = 1'd0;
reg usb0_usb_core_tx_da_reset_bitstuff = 1'd0;
wire usb0_usb_core_tx_stall;
wire usb0_usb_core_tx_sp_reset_bitstuff;
wire usb0_usb_core_tx_sp_reset_shifter;
wire usb0_usb_core_tx_sp_bit;
wire usb0_usb_core_tx_sp_o_data_strobe;
reg usb0_usb_core_tx_bitstuff_valid_data = 1'd0;
reg [1:0] usb0_usb_core_tx_state_gray = 2'd0;
wire usb0_usb_core_tx_state_data;
wire usb0_usb_core_tx_state_sync;
wire usb0_usb_core_tx_nrzi_dat;
wire usb0_usb_core_tx_nrzi_oe1;
reg usb0_usb_core_txstate_i_pkt_start = 1'd0;
reg usb0_usb_core_txstate_o_pkt_end = 1'd0;
reg [3:0] usb0_usb_core_txstate_i_pid = 4'd0;
wire [7:0] usb0_usb_core_txstate_i_data_payload0;
wire usb0_usb_core_txstate_i_data_ready;
reg usb0_usb_core_txstate_o_data_ack = 1'd0;
wire usb0_usb_core_txstate_o_oe12;
reg [3:0] usb0_usb_core_txstate_pid = 4'd0;
wire [7:0] usb0_usb_core_txstate_i_data_payload1;
reg usb0_usb_core_txstate_i_data_strobe = 1'd0;
wire [15:0] usb0_usb_core_txstate_o_crc;
wire [7:0] usb0_usb_core_txstate_crc_dat;
reg [15:0] usb0_usb_core_txstate_crc_cur = 16'd65535;
reg [15:0] usb0_usb_core_txstate_crc_next = 16'd64770;
wire usb0_usb_core_txstate_reset;
reg usb0_usb_core_txstate_is_ongoing0 = 1'd0;
reg usb0_usb_core_txstate_is_ongoing1 = 1'd0;
reg usb0_usb_core_rx_reset0 = 1'd0;
wire usb0_usb_core_rx_o_bit_strobe;
wire usb0_usb_core_rx_i_usbp;
wire usb0_usb_core_rx_i_usbn;
wire usb0_usb_core_rx_o_data_strobe;
wire [7:0] usb0_usb_core_rx_o_data_payload;
wire usb0_usb_core_rx_o_pkt_start;
reg usb0_usb_core_rx_o_pkt_in_progress = 1'd0;
wire usb0_usb_core_rx_o_pkt_end;
wire [1:0] usb0_usb_core_rx_dpair;
reg usb0_usb_core_rx_line_state_dt = 1'd0;
reg usb0_usb_core_rx_line_state_dj0 = 1'd0;
reg usb0_usb_core_rx_line_state_dk0 = 1'd0;
reg usb0_usb_core_rx_line_state_se00 = 1'd0;
reg usb0_usb_core_rx_line_state_se10 = 1'd0;
reg [1:0] usb0_usb_core_rx_line_state_phase = 2'd0;
reg usb0_usb_core_rx_line_state_valid = 1'd0;
reg usb0_usb_core_rx_line_state_dj1 = 1'd0;
reg usb0_usb_core_rx_line_state_dk1 = 1'd0;
reg usb0_usb_core_rx_line_state_se01 = 1'd0;
reg usb0_usb_core_rx_line_state_se11 = 1'd0;
wire usb0_usb_core_rx_o_reset;
reg [6:0] usb0_usb_core_rx_reset_counter = 7'd0;
wire usb0_usb_core_rx_nrzi_i_valid;
wire usb0_usb_core_rx_nrzi_i_dj;
wire usb0_usb_core_rx_nrzi_i_dk;
wire usb0_usb_core_rx_nrzi_i_se0;
reg usb0_usb_core_rx_nrzi_o_valid = 1'd0;
reg usb0_usb_core_rx_nrzi_o_data = 1'd0;
reg usb0_usb_core_rx_nrzi_o_se0 = 1'd0;
reg usb0_usb_core_rx_nrzi_last_data = 1'd0;
wire usb0_usb_core_rx_reset1;
wire usb0_usb_core_rx_detect_i_valid;
wire usb0_usb_core_rx_detect_i_data;
wire usb0_usb_core_rx_detect_i_se0;
reg usb0_usb_core_rx_detect_pkt_start = 1'd0;
reg usb0_usb_core_rx_detect_pkt_active = 1'd0;
reg usb0_usb_core_rx_detect_pkt_end = 1'd0;
wire usb0_usb_core_rx_detect_o_pkt_start;
wire usb0_usb_core_rx_detect_o_pkt_active;
wire usb0_usb_core_rx_detect_o_pkt_end;
wire usb0_usb_core_rx_detect_reset;
wire usb0_usb_core_rx_bitstuff_i_valid;
wire usb0_usb_core_rx_bitstuff_i_data;
reg usb0_usb_core_rx_bitstuff_drop_bit = 1'd0;
reg usb0_usb_core_rx_bitstuff_o_data = 1'd0;
reg usb0_usb_core_rx_bitstuff_o_error = 1'd0;
reg usb0_usb_core_rx_bitstuff_o_stall = 1'd1;
wire usb0_usb_core_rx_bitstuff_reset;
reg usb0_usb_core_rx_last_reset = 1'd0;
wire usb0_usb_core_rx_shifter_i_valid;
wire usb0_usb_core_rx_shifter_i_data;
wire [7:0] usb0_usb_core_rx_shifter_o_data;
reg usb0_usb_core_rx_shifter_o_put = 1'd0;
reg [8:0] usb0_usb_core_rx_shifter_shift_reg = 9'd1;
wire usb0_usb_core_rx_shifter_reset;
wire usb0_usb_core_rx_flag_start;
wire usb0_usb_core_rx_flag_end;
wire usb0_usb_core_rx_flag_valid;
wire usb0_usb_core_rx_payloadFifo_asyncfifo_we;
wire usb0_usb_core_rx_payloadFifo_asyncfifo_writable;
wire usb0_usb_core_rx_payloadFifo_asyncfifo_re;
wire usb0_usb_core_rx_payloadFifo_asyncfifo_readable;
wire [7:0] usb0_usb_core_rx_payloadFifo_asyncfifo_din;
wire [7:0] usb0_usb_core_rx_payloadFifo_asyncfifo_dout;
wire usb0_usb_core_rx_payloadFifo_graycounter0_ce;
reg [1:0] usb0_usb_core_rx_payloadFifo_graycounter0_q = 2'd0;
wire [1:0] usb0_usb_core_rx_payloadFifo_graycounter0_q_next;
reg [1:0] usb0_usb_core_rx_payloadFifo_graycounter0_q_binary = 2'd0;
reg [1:0] usb0_usb_core_rx_payloadFifo_graycounter0_q_next_binary = 2'd0;
wire usb0_usb_core_rx_payloadFifo_graycounter1_ce;
reg [1:0] usb0_usb_core_rx_payloadFifo_graycounter1_q = 2'd0;
wire [1:0] usb0_usb_core_rx_payloadFifo_graycounter1_q_next;
reg [1:0] usb0_usb_core_rx_payloadFifo_graycounter1_q_binary = 2'd0;
reg [1:0] usb0_usb_core_rx_payloadFifo_graycounter1_q_next_binary = 2'd0;
wire [1:0] usb0_usb_core_rx_payloadFifo_produce_rdomain;
wire [1:0] usb0_usb_core_rx_payloadFifo_consume_wdomain;
wire usb0_usb_core_rx_payloadFifo_wrport_adr;
wire [7:0] usb0_usb_core_rx_payloadFifo_wrport_dat_r;
wire usb0_usb_core_rx_payloadFifo_wrport_we;
wire [7:0] usb0_usb_core_rx_payloadFifo_wrport_dat_w;
wire usb0_usb_core_rx_payloadFifo_rdport_adr;
wire [7:0] usb0_usb_core_rx_payloadFifo_rdport_dat_r;
wire usb0_usb_core_rx_flagsFifo_asyncfifo_we;
wire usb0_usb_core_rx_flagsFifo_asyncfifo_writable;
wire usb0_usb_core_rx_flagsFifo_asyncfifo_re;
wire usb0_usb_core_rx_flagsFifo_asyncfifo_readable;
reg [1:0] usb0_usb_core_rx_flagsFifo_asyncfifo_din = 2'd0;
wire [1:0] usb0_usb_core_rx_flagsFifo_asyncfifo_dout;
wire usb0_usb_core_rx_flagsFifo_graycounter0_ce;
reg [1:0] usb0_usb_core_rx_flagsFifo_graycounter0_q = 2'd0;
wire [1:0] usb0_usb_core_rx_flagsFifo_graycounter0_q_next;
reg [1:0] usb0_usb_core_rx_flagsFifo_graycounter0_q_binary = 2'd0;
reg [1:0] usb0_usb_core_rx_flagsFifo_graycounter0_q_next_binary = 2'd0;
wire usb0_usb_core_rx_flagsFifo_graycounter1_ce;
reg [1:0] usb0_usb_core_rx_flagsFifo_graycounter1_q = 2'd0;
wire [1:0] usb0_usb_core_rx_flagsFifo_graycounter1_q_next;
reg [1:0] usb0_usb_core_rx_flagsFifo_graycounter1_q_binary = 2'd0;
reg [1:0] usb0_usb_core_rx_flagsFifo_graycounter1_q_next_binary = 2'd0;
wire [1:0] usb0_usb_core_rx_flagsFifo_produce_rdomain;
wire [1:0] usb0_usb_core_rx_flagsFifo_consume_wdomain;
wire usb0_usb_core_rx_flagsFifo_wrport_adr;
wire [1:0] usb0_usb_core_rx_flagsFifo_wrport_dat_r;
wire usb0_usb_core_rx_flagsFifo_wrport_we;
wire [1:0] usb0_usb_core_rx_flagsFifo_wrport_dat_w;
wire usb0_usb_core_rx_flagsFifo_rdport_adr;
wire [1:0] usb0_usb_core_rx_flagsFifo_rdport_dat_r;
reg [3:0] usb0_usb_core_o_pid = 4'd0;
reg [6:0] usb0_usb_core_o_addr = 7'd0;
reg usb0_usb_core_endp4 = 1'd0;
reg [3:0] usb0_usb_core_o_endp = 4'd0;
reg [4:0] usb0_usb_core_crc5 = 5'd0;
reg usb0_usb_core_o_decoded = 1'd0;
wire usb0_usb_core_reset0;
wire usb0_usb_core_usb_reset;
reg usb0_usb_core_data_recv_put = 1'd0;
wire [7:0] usb0_usb_core_data_recv_payload;
reg usb0_usb_core_data_send_get = 1'd0;
reg usb0_usb_core_data_send_have = 1'd0;
reg [7:0] usb0_usb_core_data_send_payload = 8'd0;
reg usb0_usb_core_rdy = 1'd1;
wire usb0_usb_core_dtb;
reg usb0_usb_core_arm = 1'd0;
reg usb0_usb_core_sta = 1'd0;
reg [6:0] usb0_usb_core_addr = 7'd0;
reg [3:0] usb0_usb_core_tok = 4'd0;
reg [3:0] usb0_usb_core_endp = 4'd0;
reg usb0_usb_core_idle = 1'd0;
reg usb0_usb_core_start = 1'd0;
reg usb0_usb_core_poll = 1'd0;
reg usb0_usb_core_setup = 1'd0;
reg usb0_usb_core_commit = 1'd0;
reg usb0_usb_core_retry = 1'd0;
reg usb0_usb_core_abort = 1'd0;
wire usb0_usb_core_end;
reg usb0_usb_core_data_end = 1'd0;
reg usb0_usb_core_error = 1'd0;
wire usb0_usb_core_transfer_reset;
reg [3:0] usb0_usb_core_response_pid = 4'd0;
wire usb0_usb_core_is_el0;
wire usb0_usb_core_is_el1;
reg usb0_pullup_storage = 1'd0;
reg usb0_pullup_re = 1'd0;
reg usb0_debug_packet_detected = 1'd0;
wire [6:0] usb0_csrfield_addr;
reg [6:0] usb0_csrstorage_storage = 7'd0;
reg usb0_csrstorage_re = 1'd0;
wire usb0_address_reset;
reg usb0_csrfield_in = 1'd0;
reg usb0_csrfield_out = 1'd0;
reg usb0_csrfield_setup = 1'd0;
reg usb0_csrfield_reset = 1'd0;
reg [3:0] usb0_next_ev_status = 4'd0;
wire usb0_next_ev_we;
wire usb0_next_ev_re;
reg usb0_setuphandler_reset = 1'd0;
reg usb0_setuphandler_begin = 1'd0;
reg usb0_setuphandler_epno = 1'd0;
wire usb0_setuphandler_usb_reset;
wire [7:0] usb0_setuphandler_csrfield_data0;
wire [7:0] usb0_setuphandler_data_status;
wire usb0_setuphandler_data_we;
wire usb0_setuphandler_data_re;
reg usb0_setuphandler_csrfield_reset = 1'd0;
reg [5:0] usb0_setuphandler_ctrl_storage = 6'd0;
reg usb0_setuphandler_ctrl_re = 1'd0;
wire [3:0] usb0_setuphandler_csrfield_epno;
wire usb0_setuphandler_csrfield_have;
wire usb0_setuphandler_csrfield_pend;
wire usb0_setuphandler_csrfield_is_in;
wire usb0_setuphandler_csrfield_data1;
reg [7:0] usb0_setuphandler_status_status = 8'd0;
wire usb0_setuphandler_status_we;
wire usb0_setuphandler_status_re;
wire usb0_setuphandler_irq;
wire usb0_setuphandler_packet_status;
reg usb0_setuphandler_packet_pending = 1'd0;
wire usb0_setuphandler_packet_trigger;
reg usb0_setuphandler_packet_clear = 1'd0;
wire usb0_setuphandler_reset_status;
reg usb0_setuphandler_reset_pending = 1'd0;
wire usb0_setuphandler_reset_trigger;
reg usb0_setuphandler_reset_clear = 1'd0;
reg usb0_setuphandler_reset_old_trigger = 1'd0;
wire usb0_setuphandler_eventmanager_status_re;
wire [1:0] usb0_setuphandler_eventmanager_status_r;
wire usb0_setuphandler_eventmanager_status_we;
reg [1:0] usb0_setuphandler_eventmanager_status_w = 2'd0;
wire usb0_setuphandler_eventmanager_pending_re;
wire [1:0] usb0_setuphandler_eventmanager_pending_r;
wire usb0_setuphandler_eventmanager_pending_we;
reg [1:0] usb0_setuphandler_eventmanager_pending_w = 2'd0;
reg [1:0] usb0_setuphandler_eventmanager_storage = 2'd0;
reg usb0_setuphandler_eventmanager_re = 1'd0;
reg [7:0] usb0_setuphandler_data_recv_payload = 8'd0;
reg usb0_setuphandler_data_recv_put = 1'd0;
wire usb0_setuphandler_setuphandlerinner_re;
reg usb0_setuphandler_setuphandlerinner_readable = 1'd0;
reg usb0_setuphandler_setuphandlerinner_syncfifo_we = 1'd0;
wire usb0_setuphandler_setuphandlerinner_syncfifo_writable;
wire usb0_setuphandler_setuphandlerinner_syncfifo_re;
wire usb0_setuphandler_setuphandlerinner_syncfifo_readable;
reg [7:0] usb0_setuphandler_setuphandlerinner_syncfifo_din = 8'd0;
wire [7:0] usb0_setuphandler_setuphandlerinner_syncfifo_dout;
reg [3:0] usb0_setuphandler_setuphandlerinner_level0 = 4'd0;
reg usb0_setuphandler_setuphandlerinner_replace = 1'd0;
reg [3:0] usb0_setuphandler_setuphandlerinner_produce = 4'd0;
reg [3:0] usb0_setuphandler_setuphandlerinner_consume = 4'd0;
reg [3:0] usb0_setuphandler_setuphandlerinner_wrport_adr = 4'd0;
wire [7:0] usb0_setuphandler_setuphandlerinner_wrport_dat_r;
wire usb0_setuphandler_setuphandlerinner_wrport_we;
wire [7:0] usb0_setuphandler_setuphandlerinner_wrport_dat_w;
wire usb0_setuphandler_setuphandlerinner_do_read;
wire [3:0] usb0_setuphandler_setuphandlerinner_rdport_adr;
wire [7:0] usb0_setuphandler_setuphandlerinner_rdport_dat_r;
wire usb0_setuphandler_setuphandlerinner_rdport_re;
wire [3:0] usb0_setuphandler_setuphandlerinner_level1;
reg [3:0] usb0_setuphandler_setuphandlerinner_data_byte = 4'd0;
reg usb0_setuphandler_setuphandlerinner_have_data_stage = 1'd0;
reg usb0_setuphandler_setuphandlerinner_is_in = 1'd0;
wire usb0_setuphandler_setuphandlerinner_empty;
wire usb0_setuphandler_inner_reset;
wire usb0_inhandler_dtb;
reg [15:0] usb0_inhandler_dtbs = 16'd1;
reg [15:0] usb0_inhandler_stall_status = 16'd0;
wire usb0_inhandler_syncfifobuffered_re;
reg usb0_inhandler_syncfifobuffered_readable = 1'd0;
wire usb0_inhandler_syncfifobuffered_syncfifo_we;
wire usb0_inhandler_syncfifobuffered_syncfifo_writable;
wire usb0_inhandler_syncfifobuffered_syncfifo_re;
wire usb0_inhandler_syncfifobuffered_syncfifo_readable;
wire [7:0] usb0_inhandler_syncfifobuffered_syncfifo_din;
wire [7:0] usb0_inhandler_syncfifobuffered_syncfifo_dout;
reg [6:0] usb0_inhandler_syncfifobuffered_level0 = 7'd0;
reg usb0_inhandler_syncfifobuffered_replace = 1'd0;
reg [5:0] usb0_inhandler_syncfifobuffered_produce = 6'd0;
reg [5:0] usb0_inhandler_syncfifobuffered_consume = 6'd0;
reg [5:0] usb0_inhandler_syncfifobuffered_wrport_adr = 6'd0;
wire [7:0] usb0_inhandler_syncfifobuffered_wrport_dat_r;
wire usb0_inhandler_syncfifobuffered_wrport_we;
wire [7:0] usb0_inhandler_syncfifobuffered_wrport_dat_w;
wire usb0_inhandler_syncfifobuffered_do_read;
wire [5:0] usb0_inhandler_syncfifobuffered_rdport_adr;
wire [7:0] usb0_inhandler_syncfifobuffered_rdport_dat_r;
wire usb0_inhandler_syncfifobuffered_rdport_re;
wire [6:0] usb0_inhandler_syncfifobuffered_level1;
wire usb0_inhandler_data_buf_reset;
wire [7:0] usb0_inhandler_csrfield_data;
reg [7:0] usb0_inhandler_data_storage = 8'd0;
reg usb0_inhandler_data_re = 1'd0;
wire [3:0] usb0_inhandler_csrfield_epno;
reg usb0_inhandler_csrfield_reset = 1'd0;
reg usb0_inhandler_csrfield_stall = 1'd0;
reg [6:0] usb0_inhandler_ctrl_storage = 7'd0;
reg usb0_inhandler_ctrl_re = 1'd0;
wire usb0_inhandler_csrfield_idle;
wire usb0_inhandler_csrfield_have;
wire usb0_inhandler_csrfield_pend;
reg [5:0] usb0_inhandler_status_status = 6'd0;
wire usb0_inhandler_status_we;
wire usb0_inhandler_status_re;
wire usb0_inhandler_irq;
wire usb0_inhandler_packet_status;
reg usb0_inhandler_packet_pending = 1'd0;
wire usb0_inhandler_packet_trigger;
reg usb0_inhandler_packet_clear = 1'd0;
wire usb0_inhandler_eventmanager_status_re;
wire usb0_inhandler_eventmanager_status_r;
wire usb0_inhandler_eventmanager_status_we;
wire usb0_inhandler_eventmanager_status_w;
wire usb0_inhandler_eventmanager_pending_re;
wire usb0_inhandler_eventmanager_pending_r;
wire usb0_inhandler_eventmanager_pending_we;
wire usb0_inhandler_eventmanager_pending_w;
reg usb0_inhandler_eventmanager_storage = 1'd0;
reg usb0_inhandler_eventmanager_re = 1'd0;
wire [15:0] usb0_inhandler_ep_stall_mask;
wire usb0_inhandler_stalled;
wire usb0_inhandler_response;
reg usb0_inhandler_queued = 1'd0;
reg usb0_inhandler_was_queued = 1'd0;
reg usb0_inhandler_transmitted = 1'd0;
reg usb0_inhandler_dtb_reset = 1'd0;
wire [7:0] usb0_inhandler_data_out;
wire usb0_inhandler_data_out_have;
reg usb0_inhandler_data_out_advance = 1'd0;
wire usb0_inhandler_is_our_packet;
wire usb0_inhandler_is_in_packet;
wire usb0_outhandler_syncfifobuffered_re;
reg usb0_outhandler_syncfifobuffered_readable = 1'd0;
wire usb0_outhandler_syncfifobuffered_syncfifo_we;
wire usb0_outhandler_syncfifobuffered_syncfifo_writable;
wire usb0_outhandler_syncfifobuffered_syncfifo_re;
wire usb0_outhandler_syncfifobuffered_syncfifo_readable;
wire [7:0] usb0_outhandler_syncfifobuffered_syncfifo_din;
wire [7:0] usb0_outhandler_syncfifobuffered_syncfifo_dout;
reg [6:0] usb0_outhandler_syncfifobuffered_level0 = 7'd0;
reg usb0_outhandler_syncfifobuffered_replace = 1'd0;
reg [6:0] usb0_outhandler_syncfifobuffered_produce = 7'd0;
reg [6:0] usb0_outhandler_syncfifobuffered_consume = 7'd0;
reg [6:0] usb0_outhandler_syncfifobuffered_wrport_adr = 7'd0;
wire [7:0] usb0_outhandler_syncfifobuffered_wrport_dat_r;
wire usb0_outhandler_syncfifobuffered_wrport_we;
wire [7:0] usb0_outhandler_syncfifobuffered_wrport_dat_w;
wire usb0_outhandler_syncfifobuffered_do_read;
wire [6:0] usb0_outhandler_syncfifobuffered_rdport_adr;
wire [7:0] usb0_outhandler_syncfifobuffered_rdport_dat_r;
wire usb0_outhandler_syncfifobuffered_rdport_re;
wire [6:0] usb0_outhandler_syncfifobuffered_level1;
wire usb0_outhandler_data_buf_reset;
wire [7:0] usb0_outhandler_csrfield_data;
wire [7:0] usb0_outhandler_data_status;
wire usb0_outhandler_data_we;
wire usb0_outhandler_data_re;
wire [3:0] usb0_outhandler_csrfield_epno0;
wire usb0_outhandler_csrfield_enable;
reg usb0_outhandler_csrfield_reset = 1'd0;
wire usb0_outhandler_csrfield_stall;
reg [6:0] usb0_outhandler_ctrl_storage = 7'd0;
reg usb0_outhandler_ctrl_re = 1'd0;
wire [3:0] usb0_outhandler_csrfield_epno1;
wire usb0_outhandler_csrfield_have;
wire usb0_outhandler_csrfield_pend;
reg [5:0] usb0_outhandler_status_status = 6'd0;
wire usb0_outhandler_status_we;
wire usb0_outhandler_status_re;
wire usb0_outhandler_irq;
wire usb0_outhandler_packet_status;
reg usb0_outhandler_packet_pending = 1'd0;
wire usb0_outhandler_packet_trigger;
reg usb0_outhandler_packet_clear = 1'd0;
wire usb0_outhandler_eventmanager_status_re;
wire usb0_outhandler_eventmanager_status_r;
wire usb0_outhandler_eventmanager_status_we;
wire usb0_outhandler_eventmanager_status_w;
wire usb0_outhandler_eventmanager_pending_re;
wire usb0_outhandler_eventmanager_pending_r;
wire usb0_outhandler_eventmanager_pending_we;
wire usb0_outhandler_eventmanager_pending_w;
reg usb0_outhandler_eventmanager_storage = 1'd0;
reg usb0_outhandler_eventmanager_re = 1'd0;
reg usb0_outhandler_usb_reset = 1'd0;
wire usb0_outhandler_stalled;
wire usb0_outhandler_enabled;
reg [15:0] usb0_outhandler_stall_status = 16'd0;
reg [15:0] usb0_outhandler_enable_status = 16'd0;
reg [15:0] usb0_outhandler_ep_mask = 16'd1;
reg [3:0] usb0_outhandler_epno = 4'd0;
wire usb0_outhandler_response;
reg usb0_outhandler_responding = 1'd0;
wire usb0_outhandler_is_out_packet;
reg [7:0] usb0_outhandler_data_recv_payload = 8'd0;
reg usb0_outhandler_data_recv_put = 1'd0;
wire usb0_ev_irq;
reg usb0_in_next = 1'd0;
reg usb0_out_next = 1'd0;
reg usb0_usb_core_reset1 = 1'd0;
wire usb0_resetinserter_reset;
reg [13:0] usb0_csrbank_bus_adr = 14'd0;
reg usb0_csrbank_bus_we = 1'd0;
reg [7:0] usb0_csrbank_bus_dat_w = 8'd0;
reg [7:0] usb0_csrbank_bus_dat_r = 8'd0;
wire usb0_csrbank_pullup_out0_re;
wire usb0_csrbank_pullup_out0_r;
wire usb0_csrbank_pullup_out0_we;
wire usb0_csrbank_pullup_out0_w;
wire usb0_csrbank_address0_re;
wire [6:0] usb0_csrbank_address0_r;
wire usb0_csrbank_address0_we;
wire [6:0] usb0_csrbank_address0_w;
wire usb0_csrbank_next_ev_re;
wire [3:0] usb0_csrbank_next_ev_r;
wire usb0_csrbank_next_ev_we;
wire [3:0] usb0_csrbank_next_ev_w;
wire usb0_csrbank_setup_data_re;
wire [7:0] usb0_csrbank_setup_data_r;
wire usb0_csrbank_setup_data_we;
wire [7:0] usb0_csrbank_setup_data_w;
wire usb0_csrbank_setup_ctrl0_re;
wire [5:0] usb0_csrbank_setup_ctrl0_r;
wire usb0_csrbank_setup_ctrl0_we;
wire [5:0] usb0_csrbank_setup_ctrl0_w;
wire usb0_csrbank_setup_status_re;
wire [7:0] usb0_csrbank_setup_status_r;
wire usb0_csrbank_setup_status_we;
wire [7:0] usb0_csrbank_setup_status_w;
wire usb0_csrbank_setup_ev_enable0_re;
wire [1:0] usb0_csrbank_setup_ev_enable0_r;
wire usb0_csrbank_setup_ev_enable0_we;
wire [1:0] usb0_csrbank_setup_ev_enable0_w;
wire usb0_csrbank_in_data0_re;
wire [7:0] usb0_csrbank_in_data0_r;
wire usb0_csrbank_in_data0_we;
wire [7:0] usb0_csrbank_in_data0_w;
wire usb0_csrbank_in_ctrl0_re;
wire [6:0] usb0_csrbank_in_ctrl0_r;
wire usb0_csrbank_in_ctrl0_we;
wire [6:0] usb0_csrbank_in_ctrl0_w;
wire usb0_csrbank_in_status_re;
wire [5:0] usb0_csrbank_in_status_r;
wire usb0_csrbank_in_status_we;
wire [5:0] usb0_csrbank_in_status_w;
wire usb0_csrbank_in_ev_enable0_re;
wire usb0_csrbank_in_ev_enable0_r;
wire usb0_csrbank_in_ev_enable0_we;
wire usb0_csrbank_in_ev_enable0_w;
wire usb0_csrbank_out_data_re;
wire [7:0] usb0_csrbank_out_data_r;
wire usb0_csrbank_out_data_we;
wire [7:0] usb0_csrbank_out_data_w;
wire usb0_csrbank_out_ctrl0_re;
wire [6:0] usb0_csrbank_out_ctrl0_r;
wire usb0_csrbank_out_ctrl0_we;
wire [6:0] usb0_csrbank_out_ctrl0_w;
wire usb0_csrbank_out_status_re;
wire [5:0] usb0_csrbank_out_status_r;
wire usb0_csrbank_out_status_we;
wire [5:0] usb0_csrbank_out_status_w;
wire usb0_csrbank_out_ev_enable0_re;
wire usb0_csrbank_out_ev_enable0_r;
wire usb0_csrbank_out_ev_enable0_we;
wire usb0_csrbank_out_ev_enable0_w;
wire usb0_csrbank_sel;
wire usb0_asyncfifo0_sink_valid;
wire usb0_asyncfifo0_sink_ready;
reg usb0_asyncfifo0_sink_first = 1'd0;
reg usb0_asyncfifo0_sink_last = 1'd0;
wire [31:0] usb0_asyncfifo0_sink_payload_adr;
wire [31:0] usb0_asyncfifo0_sink_payload_dat_w;
wire usb0_asyncfifo0_sink_payload_we;
wire usb0_asyncfifo0_source_valid;
wire usb0_asyncfifo0_source_ready;
wire usb0_asyncfifo0_source_first;
wire usb0_asyncfifo0_source_last;
wire [31:0] usb0_asyncfifo0_source_payload_adr;
wire [31:0] usb0_asyncfifo0_source_payload_dat_w;
wire usb0_asyncfifo0_source_payload_we;
wire usb0_asyncfifo0_asyncfifo0_we;
wire usb0_asyncfifo0_asyncfifo0_writable;
wire usb0_asyncfifo0_asyncfifo0_re;
wire usb0_asyncfifo0_asyncfifo0_readable;
wire [66:0] usb0_asyncfifo0_asyncfifo0_din;
wire [66:0] usb0_asyncfifo0_asyncfifo0_dout;
wire usb0_asyncfifo0_graycounter0_ce;
reg [6:0] usb0_asyncfifo0_graycounter0_q = 7'd0;
wire [6:0] usb0_asyncfifo0_graycounter0_q_next;
reg [6:0] usb0_asyncfifo0_graycounter0_q_binary = 7'd0;
reg [6:0] usb0_asyncfifo0_graycounter0_q_next_binary = 7'd0;
wire usb0_asyncfifo0_graycounter1_ce;
reg [6:0] usb0_asyncfifo0_graycounter1_q = 7'd0;
wire [6:0] usb0_asyncfifo0_graycounter1_q_next;
reg [6:0] usb0_asyncfifo0_graycounter1_q_binary = 7'd0;
reg [6:0] usb0_asyncfifo0_graycounter1_q_next_binary = 7'd0;
wire [6:0] usb0_asyncfifo0_produce_rdomain;
wire [6:0] usb0_asyncfifo0_consume_wdomain;
wire [5:0] usb0_asyncfifo0_wrport_adr;
wire [66:0] usb0_asyncfifo0_wrport_dat_r;
wire usb0_asyncfifo0_wrport_we;
wire [66:0] usb0_asyncfifo0_wrport_dat_w;
wire [5:0] usb0_asyncfifo0_rdport_adr;
wire [66:0] usb0_asyncfifo0_rdport_dat_r;
wire [31:0] usb0_asyncfifo0_fifo_in_payload_adr;
wire [31:0] usb0_asyncfifo0_fifo_in_payload_dat_w;
wire usb0_asyncfifo0_fifo_in_payload_we;
wire usb0_asyncfifo0_fifo_in_first;
wire usb0_asyncfifo0_fifo_in_last;
wire [31:0] usb0_asyncfifo0_fifo_out_payload_adr;
wire [31:0] usb0_asyncfifo0_fifo_out_payload_dat_w;
wire usb0_asyncfifo0_fifo_out_payload_we;
wire usb0_asyncfifo0_fifo_out_first;
wire usb0_asyncfifo0_fifo_out_last;
reg [31:0] usb0_bus_adr = 32'd0;
wire usb0_asyncfifo1_sink_valid;
wire usb0_asyncfifo1_sink_ready;
reg usb0_asyncfifo1_sink_first = 1'd0;
reg usb0_asyncfifo1_sink_last = 1'd0;
wire [31:0] usb0_asyncfifo1_sink_payload_adr;
wire [31:0] usb0_asyncfifo1_sink_payload_dat_r;
wire usb0_asyncfifo1_source_valid;
wire usb0_asyncfifo1_source_ready;
wire usb0_asyncfifo1_source_first;
wire usb0_asyncfifo1_source_last;
wire [31:0] usb0_asyncfifo1_source_payload_adr;
wire [31:0] usb0_asyncfifo1_source_payload_dat_r;
wire usb0_asyncfifo1_asyncfifo1_we;
wire usb0_asyncfifo1_asyncfifo1_writable;
wire usb0_asyncfifo1_asyncfifo1_re;
wire usb0_asyncfifo1_asyncfifo1_readable;
wire [65:0] usb0_asyncfifo1_asyncfifo1_din;
wire [65:0] usb0_asyncfifo1_asyncfifo1_dout;
wire usb0_asyncfifo1_graycounter2_ce;
reg [6:0] usb0_asyncfifo1_graycounter2_q = 7'd0;
wire [6:0] usb0_asyncfifo1_graycounter2_q_next;
reg [6:0] usb0_asyncfifo1_graycounter2_q_binary = 7'd0;
reg [6:0] usb0_asyncfifo1_graycounter2_q_next_binary = 7'd0;
wire usb0_asyncfifo1_graycounter3_ce;
reg [6:0] usb0_asyncfifo1_graycounter3_q = 7'd0;
wire [6:0] usb0_asyncfifo1_graycounter3_q_next;
reg [6:0] usb0_asyncfifo1_graycounter3_q_binary = 7'd0;
reg [6:0] usb0_asyncfifo1_graycounter3_q_next_binary = 7'd0;
wire [6:0] usb0_asyncfifo1_produce_rdomain;
wire [6:0] usb0_asyncfifo1_consume_wdomain;
wire [5:0] usb0_asyncfifo1_wrport_adr;
wire [65:0] usb0_asyncfifo1_wrport_dat_r;
wire usb0_asyncfifo1_wrport_we;
wire [65:0] usb0_asyncfifo1_wrport_dat_w;
wire [5:0] usb0_asyncfifo1_rdport_adr;
wire [65:0] usb0_asyncfifo1_rdport_dat_r;
wire [31:0] usb0_asyncfifo1_fifo_in_payload_adr;
wire [31:0] usb0_asyncfifo1_fifo_in_payload_dat_r;
wire usb0_asyncfifo1_fifo_in_first;
wire usb0_asyncfifo1_fifo_in_last;
wire [31:0] usb0_asyncfifo1_fifo_out_payload_adr;
wire [31:0] usb0_asyncfifo1_fifo_out_payload_dat_r;
wire usb0_asyncfifo1_fifo_out_first;
wire usb0_asyncfifo1_fifo_out_last;
reg usb0_valid = 1'd0;
reg [31:0] usb0_source_adr = 32'd0;
wire usb0_irq;
reg [1:0] subfragments_refresher_state = 2'd0;
reg [1:0] subfragments_refresher_next_state = 2'd0;
reg [2:0] subfragments_bankmachine0_state = 3'd0;
reg [2:0] subfragments_bankmachine0_next_state = 3'd0;
reg [2:0] subfragments_bankmachine1_state = 3'd0;
reg [2:0] subfragments_bankmachine1_next_state = 3'd0;
reg [2:0] subfragments_bankmachine2_state = 3'd0;
reg [2:0] subfragments_bankmachine2_next_state = 3'd0;
reg [2:0] subfragments_bankmachine3_state = 3'd0;
reg [2:0] subfragments_bankmachine3_next_state = 3'd0;
reg [2:0] subfragments_bankmachine4_state = 3'd0;
reg [2:0] subfragments_bankmachine4_next_state = 3'd0;
reg [2:0] subfragments_bankmachine5_state = 3'd0;
reg [2:0] subfragments_bankmachine5_next_state = 3'd0;
reg [2:0] subfragments_bankmachine6_state = 3'd0;
reg [2:0] subfragments_bankmachine6_next_state = 3'd0;
reg [2:0] subfragments_bankmachine7_state = 3'd0;
reg [2:0] subfragments_bankmachine7_next_state = 3'd0;
reg [3:0] subfragments_multiplexer_state = 4'd0;
reg [3:0] subfragments_multiplexer_next_state = 4'd0;
wire subfragments_roundrobin0_request;
wire subfragments_roundrobin0_grant;
wire subfragments_roundrobin0_ce;
wire subfragments_roundrobin1_request;
wire subfragments_roundrobin1_grant;
wire subfragments_roundrobin1_ce;
wire subfragments_roundrobin2_request;
wire subfragments_roundrobin2_grant;
wire subfragments_roundrobin2_ce;
wire subfragments_roundrobin3_request;
wire subfragments_roundrobin3_grant;
wire subfragments_roundrobin3_ce;
wire subfragments_roundrobin4_request;
wire subfragments_roundrobin4_grant;
wire subfragments_roundrobin4_ce;
wire subfragments_roundrobin5_request;
wire subfragments_roundrobin5_grant;
wire subfragments_roundrobin5_ce;
wire subfragments_roundrobin6_request;
wire subfragments_roundrobin6_grant;
wire subfragments_roundrobin6_ce;
wire subfragments_roundrobin7_request;
wire subfragments_roundrobin7_grant;
wire subfragments_roundrobin7_ce;
reg subfragments_locked0 = 1'd0;
reg subfragments_locked1 = 1'd0;
reg subfragments_locked2 = 1'd0;
reg subfragments_locked3 = 1'd0;
reg subfragments_locked4 = 1'd0;
reg subfragments_locked5 = 1'd0;
reg subfragments_locked6 = 1'd0;
reg subfragments_locked7 = 1'd0;
reg subfragments_new_master_wdata_ready0 = 1'd0;
reg subfragments_new_master_wdata_ready1 = 1'd0;
reg subfragments_new_master_wdata_ready2 = 1'd0;
reg subfragments_new_master_wdata_ready3 = 1'd0;
reg subfragments_new_master_rdata_valid0 = 1'd0;
reg subfragments_new_master_rdata_valid1 = 1'd0;
reg subfragments_new_master_rdata_valid2 = 1'd0;
reg subfragments_new_master_rdata_valid3 = 1'd0;
reg subfragments_new_master_rdata_valid4 = 1'd0;
reg subfragments_new_master_rdata_valid5 = 1'd0;
reg subfragments_new_master_rdata_valid6 = 1'd0;
reg subfragments_new_master_rdata_valid7 = 1'd0;
reg subfragments_new_master_rdata_valid8 = 1'd0;
reg subfragments_new_master_rdata_valid9 = 1'd0;
reg subfragments_new_master_rdata_valid10 = 1'd0;
reg subfragments_new_master_rdata_valid11 = 1'd0;
reg subfragments_new_master_rdata_valid12 = 1'd0;
reg subfragments_new_master_rdata_valid13 = 1'd0;
reg [1:0] subfragments_state = 2'd0;
reg [1:0] subfragments_next_state = 2'd0;
reg [7:0] subfragments_ctrl = 8'd0;
reg [7:0] subfragments_csrstorage0_storage = 8'd0;
reg subfragments_csrstorage0_re = 1'd0;
reg [7:0] subfragments_csrstorage1_storage = 8'd0;
reg subfragments_csrstorage1_re = 1'd0;
reg [7:0] subfragments_csrstorage2_storage = 8'd0;
reg subfragments_csrstorage2_re = 1'd0;
reg [7:0] subfragments_csrstorage3_storage = 8'd0;
reg subfragments_csrstorage3_re = 1'd0;
reg [7:0] subfragments_csrstorage4_storage = 8'd0;
reg subfragments_csrstorage4_re = 1'd0;
reg [7:0] subfragments_csrstorage5_storage = 8'd0;
reg subfragments_csrstorage5_re = 1'd0;
reg [7:0] subfragments_csrstorage6_storage = 8'd0;
reg subfragments_csrstorage6_re = 1'd0;
reg [7:0] subfragments_csrstorage7_storage = 8'd0;
reg subfragments_csrstorage7_re = 1'd0;
reg [7:0] subfragments_csrstorage8_storage = 8'd0;
reg subfragments_csrstorage8_re = 1'd0;
reg [7:0] subfragments_csrstorage9_storage = 8'd0;
reg subfragments_csrstorage9_re = 1'd0;
reg [7:0] subfragments_csrstorage10_storage = 8'd0;
reg subfragments_csrstorage10_re = 1'd0;
reg [7:0] subfragments_csrstorage11_storage = 8'd0;
reg subfragments_csrstorage11_re = 1'd0;
reg [7:0] subfragments_csrstorage12_storage = 8'd0;
reg subfragments_csrstorage12_re = 1'd0;
reg subfragments_wb2csr_state = 1'd0;
reg subfragments_wb2csr_next_state = 1'd0;
reg [1:0] subfragments_clockdomainsrenamer_fsm_state = 2'd0;
reg [1:0] subfragments_clockdomainsrenamer_fsm_next_state = 2'd0;
reg [7:0] usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value0 = 8'd0;
reg usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value_ce0 = 1'd0;
reg [1:0] usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1 = 2'd0;
reg usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1 = 1'd0;
reg [2:0] subfragments_clockdomainsrenamer_resetinserter_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_resetinserter_next_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_txnrziencoder_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_txnrziencoder_next_state = 3'd0;
reg [3:0] subfragments_clockdomainsrenamer_txpacketsend_state = 4'd0;
reg [3:0] subfragments_clockdomainsrenamer_txpacketsend_next_state = 4'd0;
reg usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value0 = 1'd0;
reg usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value_ce0 = 1'd0;
reg [3:0] usb0_usb_core_txstate_pid_subfragments_txpacketsend_next_value1 = 4'd0;
reg usb0_usb_core_txstate_pid_subfragments_txpacketsend_next_value_ce1 = 1'd0;
reg [2:0] subfragments_clockdomainsrenamer_rxpipeline_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_rxpipeline_next_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_packetheaderdecode_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_packetheaderdecode_next_state = 3'd0;
reg [3:0] usb0_usb_core_o_pid_subfragments_packetheaderdecode_next_value0 = 4'd0;
reg usb0_usb_core_o_pid_subfragments_packetheaderdecode_next_value_ce0 = 1'd0;
reg [6:0] subfragments_clockdomainsrenamer_packetheaderdecode_next_value = 7'd0;
reg subfragments_clockdomainsrenamer_packetheaderdecode_next_value_ce = 1'd0;
reg usb0_usb_core_endp4_subfragments_packetheaderdecode_next_value1 = 1'd0;
reg usb0_usb_core_endp4_subfragments_packetheaderdecode_next_value_ce1 = 1'd0;
reg [3:0] usb0_usb_core_o_endp_subfragments_packetheaderdecode_next_value2 = 4'd0;
reg usb0_usb_core_o_endp_subfragments_packetheaderdecode_next_value_ce2 = 1'd0;
reg [4:0] usb0_usb_core_crc5_subfragments_packetheaderdecode_next_value3 = 5'd0;
reg usb0_usb_core_crc5_subfragments_packetheaderdecode_next_value_ce3 = 1'd0;
reg [3:0] subfragments_clockdomainsrenamer_clockdomainsrenamer_state = 4'd1;
reg [3:0] subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state = 4'd0;
reg [3:0] usb0_usb_core_tok_subfragments_f_next_value0 = 4'd0;
reg usb0_usb_core_tok_subfragments_f_next_value_ce0 = 1'd0;
reg [3:0] usb0_usb_core_endp_subfragments_f_next_value1 = 4'd0;
reg usb0_usb_core_endp_subfragments_f_next_value_ce1 = 1'd0;
reg [3:0] usb0_usb_core_response_pid_subfragments_t_next_value = 4'd0;
reg usb0_usb_core_response_pid_subfragments_t_next_value_ce = 1'd0;
reg [2:0] subfragments_clockdomainsrenamer_state = 3'd0;
reg [2:0] subfragments_clockdomainsrenamer_next_state = 3'd0;
reg [6:0] usb0_usb_core_addr_subfragments_next_value = 7'd0;
reg usb0_usb_core_addr_subfragments_next_value_ce = 1'd0;
reg [13:0] basesoc_basesoc_adr = 14'd0;
reg basesoc_basesoc_we = 1'd0;
reg [31:0] basesoc_basesoc_dat_w = 32'd0;
wire [31:0] basesoc_basesoc_dat_r;
wire [29:0] basesoc_basesoc_wishbone_adr;
wire [31:0] basesoc_basesoc_wishbone_dat_w;
reg [31:0] basesoc_basesoc_wishbone_dat_r = 32'd0;
wire [3:0] basesoc_basesoc_wishbone_sel;
wire basesoc_basesoc_wishbone_cyc;
wire basesoc_basesoc_wishbone_stb;
reg basesoc_basesoc_wishbone_ack = 1'd0;
wire basesoc_basesoc_wishbone_we;
wire [2:0] basesoc_basesoc_wishbone_cti;
wire [1:0] basesoc_basesoc_wishbone_bte;
reg basesoc_basesoc_wishbone_err = 1'd0;
wire [29:0] basesoc_shared_adr;
wire [31:0] basesoc_shared_dat_w;
reg [31:0] basesoc_shared_dat_r = 32'd0;
wire [3:0] basesoc_shared_sel;
wire basesoc_shared_cyc;
wire basesoc_shared_stb;
reg basesoc_shared_ack = 1'd0;
wire basesoc_shared_we;
wire [2:0] basesoc_shared_cti;
wire [1:0] basesoc_shared_bte;
wire basesoc_shared_err;
wire [1:0] basesoc_request;
reg basesoc_grant = 1'd0;
reg [5:0] basesoc_slave_sel = 6'd0;
reg [5:0] basesoc_slave_sel_r = 6'd0;
reg basesoc_error = 1'd0;
wire basesoc_wait;
wire basesoc_done;
reg [19:0] basesoc_count = 20'd1000000;
wire [13:0] basesoc_interface0_bank_bus_adr;
wire basesoc_interface0_bank_bus_we;
wire [31:0] basesoc_interface0_bank_bus_dat_w;
reg [31:0] basesoc_interface0_bank_bus_dat_r = 32'd0;
wire basesoc_csrbank0_in_re;
wire basesoc_csrbank0_in_r;
wire basesoc_csrbank0_in_we;
wire basesoc_csrbank0_in_w;
wire basesoc_csrbank0_sel;
wire [13:0] basesoc_interface1_bank_bus_adr;
wire basesoc_interface1_bank_bus_we;
wire [31:0] basesoc_interface1_bank_bus_dat_w;
reg [31:0] basesoc_interface1_bank_bus_dat_r = 32'd0;
wire basesoc_csrbank1_reset0_re;
wire basesoc_csrbank1_reset0_r;
wire basesoc_csrbank1_reset0_we;
wire basesoc_csrbank1_reset0_w;
wire basesoc_csrbank1_scratch0_re;
wire [31:0] basesoc_csrbank1_scratch0_r;
wire basesoc_csrbank1_scratch0_we;
wire [31:0] basesoc_csrbank1_scratch0_w;
wire basesoc_csrbank1_bus_errors_re;
wire [31:0] basesoc_csrbank1_bus_errors_r;
wire basesoc_csrbank1_bus_errors_we;
wire [31:0] basesoc_csrbank1_bus_errors_w;
wire basesoc_csrbank1_sel;
wire [13:0] basesoc_interface2_bank_bus_adr;
wire basesoc_interface2_bank_bus_we;
wire [31:0] basesoc_interface2_bank_bus_dat_w;
reg [31:0] basesoc_interface2_bank_bus_dat_r = 32'd0;
wire basesoc_csrbank2_dly_sel0_re;
wire [1:0] basesoc_csrbank2_dly_sel0_r;
wire basesoc_csrbank2_dly_sel0_we;
wire [1:0] basesoc_csrbank2_dly_sel0_w;
wire basesoc_csrbank2_burstdet_seen_re;
wire [1:0] basesoc_csrbank2_burstdet_seen_r;
wire basesoc_csrbank2_burstdet_seen_we;
wire [1:0] basesoc_csrbank2_burstdet_seen_w;
wire basesoc_csrbank2_sel;
wire [13:0] basesoc_interface3_bank_bus_adr;
wire basesoc_interface3_bank_bus_we;
wire [31:0] basesoc_interface3_bank_bus_dat_w;
reg [31:0] basesoc_interface3_bank_bus_dat_r = 32'd0;
wire basesoc_csrbank3_oe0_re;
wire [21:0] basesoc_csrbank3_oe0_r;
wire basesoc_csrbank3_oe0_we;
wire [21:0] basesoc_csrbank3_oe0_w;
wire basesoc_csrbank3_in_re;
wire [21:0] basesoc_csrbank3_in_r;
wire basesoc_csrbank3_in_we;
wire [21:0] basesoc_csrbank3_in_w;
wire basesoc_csrbank3_out0_re;
wire [21:0] basesoc_csrbank3_out0_r;
wire basesoc_csrbank3_out0_we;
wire [21:0] basesoc_csrbank3_out0_w;
wire basesoc_csrbank3_alt00_re;
wire [7:0] basesoc_csrbank3_alt00_r;
wire basesoc_csrbank3_alt00_we;
wire [7:0] basesoc_csrbank3_alt00_w;
wire basesoc_csrbank3_alt10_re;
wire [7:0] basesoc_csrbank3_alt10_r;
wire basesoc_csrbank3_alt10_we;
wire [7:0] basesoc_csrbank3_alt10_w;
wire basesoc_csrbank3_alt50_re;
wire [7:0] basesoc_csrbank3_alt50_r;
wire basesoc_csrbank3_alt50_we;
wire [7:0] basesoc_csrbank3_alt50_w;
wire basesoc_csrbank3_alt60_re;
wire [7:0] basesoc_csrbank3_alt60_r;
wire basesoc_csrbank3_alt60_we;
wire [7:0] basesoc_csrbank3_alt60_w;
wire basesoc_csrbank3_alt90_re;
wire [7:0] basesoc_csrbank3_alt90_r;
wire basesoc_csrbank3_alt90_we;
wire [7:0] basesoc_csrbank3_alt90_w;
wire basesoc_csrbank3_alt100_re;
wire [7:0] basesoc_csrbank3_alt100_r;
wire basesoc_csrbank3_alt100_we;
wire [7:0] basesoc_csrbank3_alt100_w;
wire basesoc_csrbank3_alt110_re;
wire [7:0] basesoc_csrbank3_alt110_r;
wire basesoc_csrbank3_alt110_we;
wire [7:0] basesoc_csrbank3_alt110_w;
wire basesoc_csrbank3_alt120_re;
wire [7:0] basesoc_csrbank3_alt120_r;
wire basesoc_csrbank3_alt120_we;
wire [7:0] basesoc_csrbank3_alt120_w;
wire basesoc_csrbank3_alt130_re;
wire [7:0] basesoc_csrbank3_alt130_r;
wire basesoc_csrbank3_alt130_we;
wire [7:0] basesoc_csrbank3_alt130_w;
wire basesoc_csrbank3_alt180_re;
wire [7:0] basesoc_csrbank3_alt180_r;
wire basesoc_csrbank3_alt180_we;
wire [7:0] basesoc_csrbank3_alt180_w;
wire basesoc_csrbank3_alt190_re;
wire [7:0] basesoc_csrbank3_alt190_r;
wire basesoc_csrbank3_alt190_we;
wire [7:0] basesoc_csrbank3_alt190_w;
wire basesoc_csrbank3_alt200_re;
wire [7:0] basesoc_csrbank3_alt200_r;
wire basesoc_csrbank3_alt200_we;
wire [7:0] basesoc_csrbank3_alt200_w;
wire basesoc_csrbank3_alt210_re;
wire [7:0] basesoc_csrbank3_alt210_r;
wire basesoc_csrbank3_alt210_we;
wire [7:0] basesoc_csrbank3_alt210_w;
wire basesoc_csrbank3_sel;
wire [13:0] basesoc_interface4_bank_bus_adr;
wire basesoc_interface4_bank_bus_we;
wire [31:0] basesoc_interface4_bank_bus_dat_w;
reg [31:0] basesoc_interface4_bank_bus_dat_r = 32'd0;
wire basesoc_csrbank4_bitbang0_re;
wire [3:0] basesoc_csrbank4_bitbang0_r;
wire basesoc_csrbank4_bitbang0_we;
wire [3:0] basesoc_csrbank4_bitbang0_w;
wire basesoc_csrbank4_miso_re;
wire basesoc_csrbank4_miso_r;
wire basesoc_csrbank4_miso_we;
wire basesoc_csrbank4_miso_w;
wire basesoc_csrbank4_bitbang_en0_re;
wire basesoc_csrbank4_bitbang_en0_r;
wire basesoc_csrbank4_bitbang_en0_we;
wire basesoc_csrbank4_bitbang_en0_w;
wire basesoc_csrbank4_sel;
wire [13:0] basesoc_interface5_bank_bus_adr;
wire basesoc_interface5_bank_bus_we;
wire [31:0] basesoc_interface5_bank_bus_dat_w;
reg [31:0] basesoc_interface5_bank_bus_dat_r = 32'd0;
wire basesoc_csrbank5_r0_re;
wire [7:0] basesoc_csrbank5_r0_r;
wire basesoc_csrbank5_r0_we;
wire [7:0] basesoc_csrbank5_r0_w;
wire basesoc_csrbank5_g0_re;
wire [7:0] basesoc_csrbank5_g0_r;
wire basesoc_csrbank5_g0_we;
wire [7:0] basesoc_csrbank5_g0_w;
wire basesoc_csrbank5_b0_re;
wire [7:0] basesoc_csrbank5_b0_r;
wire basesoc_csrbank5_b0_we;
wire [7:0] basesoc_csrbank5_b0_w;
wire basesoc_csrbank5_div_m0_re;
wire [31:0] basesoc_csrbank5_div_m0_r;
wire basesoc_csrbank5_div_m0_we;
wire [31:0] basesoc_csrbank5_div_m0_w;
wire basesoc_csrbank5_config0_re;
wire [1:0] basesoc_csrbank5_config0_r;
wire basesoc_csrbank5_config0_we;
wire [1:0] basesoc_csrbank5_config0_w;
wire basesoc_csrbank5_sel;
wire [13:0] basesoc_interface6_bank_bus_adr;
wire basesoc_interface6_bank_bus_we;
wire [31:0] basesoc_interface6_bank_bus_dat_w;
reg [31:0] basesoc_interface6_bank_bus_dat_r = 32'd0;
wire basesoc_csrbank6_dfii_control0_re;
wire [3:0] basesoc_csrbank6_dfii_control0_r;
wire basesoc_csrbank6_dfii_control0_we;
wire [3:0] basesoc_csrbank6_dfii_control0_w;
wire basesoc_csrbank6_dfii_pi0_command0_re;
wire [5:0] basesoc_csrbank6_dfii_pi0_command0_r;
wire basesoc_csrbank6_dfii_pi0_command0_we;
wire [5:0] basesoc_csrbank6_dfii_pi0_command0_w;
wire basesoc_csrbank6_dfii_pi0_address0_re;
wire [12:0] basesoc_csrbank6_dfii_pi0_address0_r;
wire basesoc_csrbank6_dfii_pi0_address0_we;
wire [12:0] basesoc_csrbank6_dfii_pi0_address0_w;
wire basesoc_csrbank6_dfii_pi0_baddress0_re;
wire [2:0] basesoc_csrbank6_dfii_pi0_baddress0_r;
wire basesoc_csrbank6_dfii_pi0_baddress0_we;
wire [2:0] basesoc_csrbank6_dfii_pi0_baddress0_w;
wire basesoc_csrbank6_dfii_pi0_wrdata1_re;
wire [31:0] basesoc_csrbank6_dfii_pi0_wrdata1_r;
wire basesoc_csrbank6_dfii_pi0_wrdata1_we;
wire [31:0] basesoc_csrbank6_dfii_pi0_wrdata1_w;
wire basesoc_csrbank6_dfii_pi0_wrdata0_re;
wire [31:0] basesoc_csrbank6_dfii_pi0_wrdata0_r;
wire basesoc_csrbank6_dfii_pi0_wrdata0_we;
wire [31:0] basesoc_csrbank6_dfii_pi0_wrdata0_w;
wire basesoc_csrbank6_dfii_pi0_rddata1_re;
wire [31:0] basesoc_csrbank6_dfii_pi0_rddata1_r;
wire basesoc_csrbank6_dfii_pi0_rddata1_we;
wire [31:0] basesoc_csrbank6_dfii_pi0_rddata1_w;
wire basesoc_csrbank6_dfii_pi0_rddata0_re;
wire [31:0] basesoc_csrbank6_dfii_pi0_rddata0_r;
wire basesoc_csrbank6_dfii_pi0_rddata0_we;
wire [31:0] basesoc_csrbank6_dfii_pi0_rddata0_w;
wire basesoc_csrbank6_dfii_pi1_command0_re;
wire [5:0] basesoc_csrbank6_dfii_pi1_command0_r;
wire basesoc_csrbank6_dfii_pi1_command0_we;
wire [5:0] basesoc_csrbank6_dfii_pi1_command0_w;
wire basesoc_csrbank6_dfii_pi1_address0_re;
wire [12:0] basesoc_csrbank6_dfii_pi1_address0_r;
wire basesoc_csrbank6_dfii_pi1_address0_we;
wire [12:0] basesoc_csrbank6_dfii_pi1_address0_w;
wire basesoc_csrbank6_dfii_pi1_baddress0_re;
wire [2:0] basesoc_csrbank6_dfii_pi1_baddress0_r;
wire basesoc_csrbank6_dfii_pi1_baddress0_we;
wire [2:0] basesoc_csrbank6_dfii_pi1_baddress0_w;
wire basesoc_csrbank6_dfii_pi1_wrdata1_re;
wire [31:0] basesoc_csrbank6_dfii_pi1_wrdata1_r;
wire basesoc_csrbank6_dfii_pi1_wrdata1_we;
wire [31:0] basesoc_csrbank6_dfii_pi1_wrdata1_w;
wire basesoc_csrbank6_dfii_pi1_wrdata0_re;
wire [31:0] basesoc_csrbank6_dfii_pi1_wrdata0_r;
wire basesoc_csrbank6_dfii_pi1_wrdata0_we;
wire [31:0] basesoc_csrbank6_dfii_pi1_wrdata0_w;
wire basesoc_csrbank6_dfii_pi1_rddata1_re;
wire [31:0] basesoc_csrbank6_dfii_pi1_rddata1_r;
wire basesoc_csrbank6_dfii_pi1_rddata1_we;
wire [31:0] basesoc_csrbank6_dfii_pi1_rddata1_w;
wire basesoc_csrbank6_dfii_pi1_rddata0_re;
wire [31:0] basesoc_csrbank6_dfii_pi1_rddata0_r;
wire basesoc_csrbank6_dfii_pi1_rddata0_we;
wire [31:0] basesoc_csrbank6_dfii_pi1_rddata0_w;
wire basesoc_csrbank6_sel;
wire [13:0] basesoc_interface7_bank_bus_adr;
wire basesoc_interface7_bank_bus_we;
wire [31:0] basesoc_interface7_bank_bus_dat_w;
reg [31:0] basesoc_interface7_bank_bus_dat_r = 32'd0;
wire basesoc_csrbank7_load0_re;
wire [31:0] basesoc_csrbank7_load0_r;
wire basesoc_csrbank7_load0_we;
wire [31:0] basesoc_csrbank7_load0_w;
wire basesoc_csrbank7_reload0_re;
wire [31:0] basesoc_csrbank7_reload0_r;
wire basesoc_csrbank7_reload0_we;
wire [31:0] basesoc_csrbank7_reload0_w;
wire basesoc_csrbank7_en0_re;
wire basesoc_csrbank7_en0_r;
wire basesoc_csrbank7_en0_we;
wire basesoc_csrbank7_en0_w;
wire basesoc_csrbank7_update_value0_re;
wire basesoc_csrbank7_update_value0_r;
wire basesoc_csrbank7_update_value0_we;
wire basesoc_csrbank7_update_value0_w;
wire basesoc_csrbank7_value_re;
wire [31:0] basesoc_csrbank7_value_r;
wire basesoc_csrbank7_value_we;
wire [31:0] basesoc_csrbank7_value_w;
wire basesoc_csrbank7_ev_enable0_re;
wire basesoc_csrbank7_ev_enable0_r;
wire basesoc_csrbank7_ev_enable0_we;
wire basesoc_csrbank7_ev_enable0_w;
wire basesoc_csrbank7_sel;
wire [13:0] basesoc_interface8_bank_bus_adr;
wire basesoc_interface8_bank_bus_we;
wire [31:0] basesoc_interface8_bank_bus_dat_w;
reg [31:0] basesoc_interface8_bank_bus_dat_r = 32'd0;
wire basesoc_csrbank8_txfull_re;
wire basesoc_csrbank8_txfull_r;
wire basesoc_csrbank8_txfull_we;
wire basesoc_csrbank8_txfull_w;
wire basesoc_csrbank8_rxempty_re;
wire basesoc_csrbank8_rxempty_r;
wire basesoc_csrbank8_rxempty_we;
wire basesoc_csrbank8_rxempty_w;
wire basesoc_csrbank8_ev_enable0_re;
wire [1:0] basesoc_csrbank8_ev_enable0_r;
wire basesoc_csrbank8_ev_enable0_we;
wire [1:0] basesoc_csrbank8_ev_enable0_w;
wire basesoc_csrbank8_txempty_re;
wire basesoc_csrbank8_txempty_r;
wire basesoc_csrbank8_txempty_we;
wire basesoc_csrbank8_txempty_w;
wire basesoc_csrbank8_rxfull_re;
wire basesoc_csrbank8_rxfull_r;
wire basesoc_csrbank8_rxfull_we;
wire basesoc_csrbank8_rxfull_w;
wire basesoc_csrbank8_sel;
wire [13:0] basesoc_csr_interconnect_adr;
wire basesoc_csr_interconnect_we;
wire [31:0] basesoc_csr_interconnect_dat_w;
wire [31:0] basesoc_csr_interconnect_dat_r;
reg [1:0] basesoc_state = 2'd0;
reg [1:0] basesoc_next_state = 2'd0;
reg [31:0] basesoc_basesoc_dat_w_basesoc_next_value0 = 32'd0;
reg basesoc_basesoc_dat_w_basesoc_next_value_ce0 = 1'd0;
reg [13:0] basesoc_basesoc_adr_basesoc_next_value1 = 14'd0;
reg basesoc_basesoc_adr_basesoc_next_value_ce1 = 1'd0;
reg basesoc_basesoc_we_basesoc_next_value2 = 1'd0;
reg basesoc_basesoc_we_basesoc_next_value_ce2 = 1'd0;
wire [8:0] slice_proxy;
reg rhs_array_muxed0 = 1'd0;
reg [12:0] rhs_array_muxed1 = 13'd0;
reg [2:0] rhs_array_muxed2 = 3'd0;
reg rhs_array_muxed3 = 1'd0;
reg rhs_array_muxed4 = 1'd0;
reg rhs_array_muxed5 = 1'd0;
reg t_array_muxed0 = 1'd0;
reg t_array_muxed1 = 1'd0;
reg t_array_muxed2 = 1'd0;
reg rhs_array_muxed6 = 1'd0;
reg [12:0] rhs_array_muxed7 = 13'd0;
reg [2:0] rhs_array_muxed8 = 3'd0;
reg rhs_array_muxed9 = 1'd0;
reg rhs_array_muxed10 = 1'd0;
reg rhs_array_muxed11 = 1'd0;
reg t_array_muxed3 = 1'd0;
reg t_array_muxed4 = 1'd0;
reg t_array_muxed5 = 1'd0;
reg [19:0] rhs_array_muxed12 = 20'd0;
reg rhs_array_muxed13 = 1'd0;
reg rhs_array_muxed14 = 1'd0;
reg [19:0] rhs_array_muxed15 = 20'd0;
reg rhs_array_muxed16 = 1'd0;
reg rhs_array_muxed17 = 1'd0;
reg [19:0] rhs_array_muxed18 = 20'd0;
reg rhs_array_muxed19 = 1'd0;
reg rhs_array_muxed20 = 1'd0;
reg [19:0] rhs_array_muxed21 = 20'd0;
reg rhs_array_muxed22 = 1'd0;
reg rhs_array_muxed23 = 1'd0;
reg [19:0] rhs_array_muxed24 = 20'd0;
reg rhs_array_muxed25 = 1'd0;
reg rhs_array_muxed26 = 1'd0;
reg [19:0] rhs_array_muxed27 = 20'd0;
reg rhs_array_muxed28 = 1'd0;
reg rhs_array_muxed29 = 1'd0;
reg [19:0] rhs_array_muxed30 = 20'd0;
reg rhs_array_muxed31 = 1'd0;
reg rhs_array_muxed32 = 1'd0;
reg [19:0] rhs_array_muxed33 = 20'd0;
reg rhs_array_muxed34 = 1'd0;
reg rhs_array_muxed35 = 1'd0;
reg [29:0] rhs_array_muxed36 = 30'd0;
reg [31:0] rhs_array_muxed37 = 32'd0;
reg [3:0] rhs_array_muxed38 = 4'd0;
reg rhs_array_muxed39 = 1'd0;
reg rhs_array_muxed40 = 1'd0;
reg rhs_array_muxed41 = 1'd0;
reg [2:0] rhs_array_muxed42 = 3'd0;
reg [1:0] rhs_array_muxed43 = 2'd0;
reg [2:0] array_muxed0 = 3'd0;
reg [12:0] array_muxed1 = 13'd0;
reg array_muxed2 = 1'd0;
reg array_muxed3 = 1'd0;
reg array_muxed4 = 1'd0;
reg array_muxed5 = 1'd0;
reg array_muxed6 = 1'd0;
reg [2:0] array_muxed7 = 3'd0;
reg [12:0] array_muxed8 = 13'd0;
reg array_muxed9 = 1'd0;
reg array_muxed10 = 1'd0;
reg array_muxed11 = 1'd0;
reg array_muxed12 = 1'd0;
reg array_muxed13 = 1'd0;
wire rst10;
wire rst11;
wire rst12;
wire rst13;
reg multiregimpl0_regs0 = 1'd0;
reg multiregimpl0_regs1 = 1'd0;
reg multiregimpl1_regs0 = 1'd0;
reg multiregimpl1_regs1 = 1'd0;
reg multiregimpl2_regs0 = 1'd0;
reg multiregimpl2_regs1 = 1'd0;
reg multiregimpl3_regs0 = 1'd0;
reg multiregimpl3_regs1 = 1'd0;
reg multiregimpl4_regs0 = 1'd0;
reg multiregimpl4_regs1 = 1'd0;
reg multiregimpl4_regs2 = 1'd0;
reg multiregimpl5_regs0 = 1'd0;
reg multiregimpl5_regs1 = 1'd0;
reg multiregimpl5_regs2 = 1'd0;
reg multiregimpl6_regs = 1'd0;
reg [1:0] multiregimpl7_regs0 = 2'd0;
reg [1:0] multiregimpl7_regs1 = 2'd0;
reg [1:0] multiregimpl8_regs0 = 2'd0;
reg [1:0] multiregimpl8_regs1 = 2'd0;
reg [1:0] multiregimpl9_regs0 = 2'd0;
reg [1:0] multiregimpl9_regs1 = 2'd0;
reg [1:0] multiregimpl10_regs0 = 2'd0;
reg [1:0] multiregimpl10_regs1 = 2'd0;
reg [6:0] multiregimpl11_regs0 = 7'd0;
reg [6:0] multiregimpl11_regs1 = 7'd0;
reg [6:0] multiregimpl12_regs0 = 7'd0;
reg [6:0] multiregimpl12_regs1 = 7'd0;
reg [6:0] multiregimpl13_regs0 = 7'd0;
reg [6:0] multiregimpl13_regs1 = 7'd0;
reg [6:0] multiregimpl14_regs0 = 7'd0;
reg [6:0] multiregimpl14_regs1 = 7'd0;
reg multiregimpl15_regs0 = 1'd0;
reg multiregimpl15_regs1 = 1'd0;

assign cpu_reset = soccontroller_reset;
assign uart_uart_source_ready = 1'd1;
assign ddram_vccio = 6'd63;
assign ddram_gnd = 1'd0;
assign crg_stop = ddrphy_stop0;
assign crg_reset = ddrphy_reset0;
assign rst_n = 1'd1;
assign soccontroller_bus_error = basesoc_error;
always @(*) begin
	cpu_interrupt <= 32'd0;
	cpu_interrupt[3] <= usb0_irq;
	cpu_interrupt[2] <= timer_irq;
	cpu_interrupt[0] <= uart_irq;
end
assign soccontroller_reset = soccontroller_reset_re;
assign soccontroller_bus_errors_status = soccontroller_bus_errors;
assign basesoc_adr = basesoc_ram_bus_adr[12:0];
assign basesoc_ram_bus_dat_r = basesoc_dat_r;
always @(*) begin
	ram_we <= 4'd0;
	ram_we[0] <= (((ram_bus_ram_bus_cyc & ram_bus_ram_bus_stb) & ram_bus_ram_bus_we) & ram_bus_ram_bus_sel[0]);
	ram_we[1] <= (((ram_bus_ram_bus_cyc & ram_bus_ram_bus_stb) & ram_bus_ram_bus_we) & ram_bus_ram_bus_sel[1]);
	ram_we[2] <= (((ram_bus_ram_bus_cyc & ram_bus_ram_bus_stb) & ram_bus_ram_bus_we) & ram_bus_ram_bus_sel[2]);
	ram_we[3] <= (((ram_bus_ram_bus_cyc & ram_bus_ram_bus_stb) & ram_bus_ram_bus_we) & ram_bus_ram_bus_sel[3]);
end
assign ram_adr = ram_bus_ram_bus_adr[10:0];
assign ram_bus_ram_bus_dat_r = ram_dat_r;
assign ram_dat_w = ram_bus_ram_bus_dat_w;
assign uart_tx_fifo_sink_valid = uart_rxtx_re;
assign uart_tx_fifo_sink_payload_data = uart_rxtx_r;
assign uart_txfull_status = (~uart_tx_fifo_sink_ready);
assign uart_txempty_status = (~uart_tx_fifo_source_valid);
assign uart_uart_source_valid = uart_tx_fifo_source_valid;
assign uart_tx_fifo_source_ready = uart_uart_source_ready;
assign uart_uart_source_first = uart_tx_fifo_source_first;
assign uart_uart_source_last = uart_tx_fifo_source_last;
assign uart_uart_source_payload_data = uart_tx_fifo_source_payload_data;
assign uart_tx_trigger = (~uart_tx_fifo_sink_ready);
assign uart_rx_fifo_sink_valid = uart_uart_sink_valid;
assign uart_uart_sink_ready = uart_rx_fifo_sink_ready;
assign uart_rx_fifo_sink_first = uart_uart_sink_first;
assign uart_rx_fifo_sink_last = uart_uart_sink_last;
assign uart_rx_fifo_sink_payload_data = uart_uart_sink_payload_data;
assign uart_rxempty_status = (~uart_rx_fifo_source_valid);
assign uart_rxfull_status = (~uart_rx_fifo_sink_ready);
assign uart_rxtx_w = uart_rx_fifo_source_payload_data;
assign uart_rx_fifo_source_ready = (uart_rx_clear | (1'd0 & uart_rxtx_we));
assign uart_rx_trigger = (~uart_rx_fifo_source_valid);
always @(*) begin
	uart_tx_clear <= 1'd0;
	if ((uart_eventmanager_pending_re & uart_eventmanager_pending_r[0])) begin
		uart_tx_clear <= 1'd1;
	end
end
always @(*) begin
	uart_eventmanager_status_w <= 2'd0;
	uart_eventmanager_status_w[0] <= uart_tx_status;
	uart_eventmanager_status_w[1] <= uart_rx_status;
end
always @(*) begin
	uart_rx_clear <= 1'd0;
	if ((uart_eventmanager_pending_re & uart_eventmanager_pending_r[1])) begin
		uart_rx_clear <= 1'd1;
	end
end
always @(*) begin
	uart_eventmanager_pending_w <= 2'd0;
	uart_eventmanager_pending_w[0] <= uart_tx_pending;
	uart_eventmanager_pending_w[1] <= uart_rx_pending;
end
assign uart_irq = ((uart_eventmanager_pending_w[0] & uart_eventmanager_storage[0]) | (uart_eventmanager_pending_w[1] & uart_eventmanager_storage[1]));
assign uart_tx_status = uart_tx_trigger;
assign uart_rx_status = uart_rx_trigger;
assign uart_tx_fifo_source_valid = uart_tx_fifo_sink_valid;
assign uart_tx_fifo_sink_ready = uart_tx_fifo_source_ready;
assign uart_tx_fifo_source_first = uart_tx_fifo_sink_first;
assign uart_tx_fifo_source_last = uart_tx_fifo_sink_last;
assign uart_tx_fifo_source_payload_data = uart_tx_fifo_sink_payload_data;
assign uart_rx_fifo_source_valid = uart_rx_fifo_sink_valid;
assign uart_rx_fifo_sink_ready = uart_rx_fifo_source_ready;
assign uart_rx_fifo_source_first = uart_rx_fifo_sink_first;
assign uart_rx_fifo_source_last = uart_rx_fifo_sink_last;
assign uart_rx_fifo_source_payload_data = uart_rx_fifo_sink_payload_data;
assign timer_zero_trigger = (timer_value != 1'd0);
assign timer_eventmanager_status_w = timer_zero_status;
always @(*) begin
	timer_zero_clear <= 1'd0;
	if ((timer_eventmanager_pending_re & timer_eventmanager_pending_r)) begin
		timer_zero_clear <= 1'd1;
	end
end
assign timer_eventmanager_pending_w = timer_zero_pending;
assign timer_irq = (timer_eventmanager_pending_w & timer_eventmanager_storage);
assign timer_zero_status = timer_zero_trigger;
assign por_clk = crg_osc_g;
assign crg_por_done = (crg_por_count == 1'd0);
assign init_clk = crg_osc_g;
assign crg_pll_reset = (~crg_por_done);
assign crg_usb_pll_reset = (~crg_por_done);
assign crg_ecp5pll0_clkin = clk48;
assign sys2x_i_clk = crg_ecp5pll0_clkout;
assign crg_ecp5pll1_clkin = clk48;
assign usb_48_clk = crg_ecp5pll1_clkout0;
assign usb_12_clk = crg_ecp5pll1_clkout1;
always @(*) begin
	ddrphy_dm_o_data0 <= 8'd0;
	ddrphy_dm_o_data0[0] <= ddrphy_dfi_p0_wrdata_mask[0];
	ddrphy_dm_o_data0[1] <= ddrphy_dfi_p0_wrdata_mask[2];
	ddrphy_dm_o_data0[2] <= ddrphy_dfi_p0_wrdata_mask[4];
	ddrphy_dm_o_data0[3] <= ddrphy_dfi_p0_wrdata_mask[6];
	ddrphy_dm_o_data0[4] <= ddrphy_dfi_p1_wrdata_mask[0];
	ddrphy_dm_o_data0[5] <= ddrphy_dfi_p1_wrdata_mask[2];
	ddrphy_dm_o_data0[6] <= ddrphy_dfi_p1_wrdata_mask[4];
	ddrphy_dm_o_data0[7] <= ddrphy_dfi_p1_wrdata_mask[6];
end
always @(*) begin
	ddrphy_dq_o_data0 <= 8'd0;
	ddrphy_dq_o_data0[0] <= ddrphy_dfi_p0_wrdata[0];
	ddrphy_dq_o_data0[1] <= ddrphy_dfi_p0_wrdata[16];
	ddrphy_dq_o_data0[2] <= ddrphy_dfi_p0_wrdata[32];
	ddrphy_dq_o_data0[3] <= ddrphy_dfi_p0_wrdata[48];
	ddrphy_dq_o_data0[4] <= ddrphy_dfi_p1_wrdata[0];
	ddrphy_dq_o_data0[5] <= ddrphy_dfi_p1_wrdata[16];
	ddrphy_dq_o_data0[6] <= ddrphy_dfi_p1_wrdata[32];
	ddrphy_dq_o_data0[7] <= ddrphy_dfi_p1_wrdata[48];
end
assign ddrphy_dq_i_data0 = {ddrphy_bitslip0_o, ddrphy_dq_i_bitslip_o_d0};
always @(*) begin
	ddrphy_dq_o_data1 <= 8'd0;
	ddrphy_dq_o_data1[0] <= ddrphy_dfi_p0_wrdata[1];
	ddrphy_dq_o_data1[1] <= ddrphy_dfi_p0_wrdata[17];
	ddrphy_dq_o_data1[2] <= ddrphy_dfi_p0_wrdata[33];
	ddrphy_dq_o_data1[3] <= ddrphy_dfi_p0_wrdata[49];
	ddrphy_dq_o_data1[4] <= ddrphy_dfi_p1_wrdata[1];
	ddrphy_dq_o_data1[5] <= ddrphy_dfi_p1_wrdata[17];
	ddrphy_dq_o_data1[6] <= ddrphy_dfi_p1_wrdata[33];
	ddrphy_dq_o_data1[7] <= ddrphy_dfi_p1_wrdata[49];
end
assign ddrphy_dq_i_data1 = {ddrphy_bitslip1_o, ddrphy_dq_i_bitslip_o_d1};
always @(*) begin
	ddrphy_dq_o_data2 <= 8'd0;
	ddrphy_dq_o_data2[0] <= ddrphy_dfi_p0_wrdata[2];
	ddrphy_dq_o_data2[1] <= ddrphy_dfi_p0_wrdata[18];
	ddrphy_dq_o_data2[2] <= ddrphy_dfi_p0_wrdata[34];
	ddrphy_dq_o_data2[3] <= ddrphy_dfi_p0_wrdata[50];
	ddrphy_dq_o_data2[4] <= ddrphy_dfi_p1_wrdata[2];
	ddrphy_dq_o_data2[5] <= ddrphy_dfi_p1_wrdata[18];
	ddrphy_dq_o_data2[6] <= ddrphy_dfi_p1_wrdata[34];
	ddrphy_dq_o_data2[7] <= ddrphy_dfi_p1_wrdata[50];
end
assign ddrphy_dq_i_data2 = {ddrphy_bitslip2_o, ddrphy_dq_i_bitslip_o_d2};
always @(*) begin
	ddrphy_dq_o_data3 <= 8'd0;
	ddrphy_dq_o_data3[0] <= ddrphy_dfi_p0_wrdata[3];
	ddrphy_dq_o_data3[1] <= ddrphy_dfi_p0_wrdata[19];
	ddrphy_dq_o_data3[2] <= ddrphy_dfi_p0_wrdata[35];
	ddrphy_dq_o_data3[3] <= ddrphy_dfi_p0_wrdata[51];
	ddrphy_dq_o_data3[4] <= ddrphy_dfi_p1_wrdata[3];
	ddrphy_dq_o_data3[5] <= ddrphy_dfi_p1_wrdata[19];
	ddrphy_dq_o_data3[6] <= ddrphy_dfi_p1_wrdata[35];
	ddrphy_dq_o_data3[7] <= ddrphy_dfi_p1_wrdata[51];
end
assign ddrphy_dq_i_data3 = {ddrphy_bitslip3_o, ddrphy_dq_i_bitslip_o_d3};
always @(*) begin
	ddrphy_dq_o_data4 <= 8'd0;
	ddrphy_dq_o_data4[0] <= ddrphy_dfi_p0_wrdata[4];
	ddrphy_dq_o_data4[1] <= ddrphy_dfi_p0_wrdata[20];
	ddrphy_dq_o_data4[2] <= ddrphy_dfi_p0_wrdata[36];
	ddrphy_dq_o_data4[3] <= ddrphy_dfi_p0_wrdata[52];
	ddrphy_dq_o_data4[4] <= ddrphy_dfi_p1_wrdata[4];
	ddrphy_dq_o_data4[5] <= ddrphy_dfi_p1_wrdata[20];
	ddrphy_dq_o_data4[6] <= ddrphy_dfi_p1_wrdata[36];
	ddrphy_dq_o_data4[7] <= ddrphy_dfi_p1_wrdata[52];
end
assign ddrphy_dq_i_data4 = {ddrphy_bitslip4_o, ddrphy_dq_i_bitslip_o_d4};
always @(*) begin
	ddrphy_dq_o_data5 <= 8'd0;
	ddrphy_dq_o_data5[0] <= ddrphy_dfi_p0_wrdata[5];
	ddrphy_dq_o_data5[1] <= ddrphy_dfi_p0_wrdata[21];
	ddrphy_dq_o_data5[2] <= ddrphy_dfi_p0_wrdata[37];
	ddrphy_dq_o_data5[3] <= ddrphy_dfi_p0_wrdata[53];
	ddrphy_dq_o_data5[4] <= ddrphy_dfi_p1_wrdata[5];
	ddrphy_dq_o_data5[5] <= ddrphy_dfi_p1_wrdata[21];
	ddrphy_dq_o_data5[6] <= ddrphy_dfi_p1_wrdata[37];
	ddrphy_dq_o_data5[7] <= ddrphy_dfi_p1_wrdata[53];
end
assign ddrphy_dq_i_data5 = {ddrphy_bitslip5_o, ddrphy_dq_i_bitslip_o_d5};
always @(*) begin
	ddrphy_dq_o_data6 <= 8'd0;
	ddrphy_dq_o_data6[0] <= ddrphy_dfi_p0_wrdata[6];
	ddrphy_dq_o_data6[1] <= ddrphy_dfi_p0_wrdata[22];
	ddrphy_dq_o_data6[2] <= ddrphy_dfi_p0_wrdata[38];
	ddrphy_dq_o_data6[3] <= ddrphy_dfi_p0_wrdata[54];
	ddrphy_dq_o_data6[4] <= ddrphy_dfi_p1_wrdata[6];
	ddrphy_dq_o_data6[5] <= ddrphy_dfi_p1_wrdata[22];
	ddrphy_dq_o_data6[6] <= ddrphy_dfi_p1_wrdata[38];
	ddrphy_dq_o_data6[7] <= ddrphy_dfi_p1_wrdata[54];
end
assign ddrphy_dq_i_data6 = {ddrphy_bitslip6_o, ddrphy_dq_i_bitslip_o_d6};
always @(*) begin
	ddrphy_dq_o_data7 <= 8'd0;
	ddrphy_dq_o_data7[0] <= ddrphy_dfi_p0_wrdata[7];
	ddrphy_dq_o_data7[1] <= ddrphy_dfi_p0_wrdata[23];
	ddrphy_dq_o_data7[2] <= ddrphy_dfi_p0_wrdata[39];
	ddrphy_dq_o_data7[3] <= ddrphy_dfi_p0_wrdata[55];
	ddrphy_dq_o_data7[4] <= ddrphy_dfi_p1_wrdata[7];
	ddrphy_dq_o_data7[5] <= ddrphy_dfi_p1_wrdata[23];
	ddrphy_dq_o_data7[6] <= ddrphy_dfi_p1_wrdata[39];
	ddrphy_dq_o_data7[7] <= ddrphy_dfi_p1_wrdata[55];
end
assign ddrphy_dq_i_data7 = {ddrphy_bitslip7_o, ddrphy_dq_i_bitslip_o_d7};
always @(*) begin
	ddrphy_dm_o_data1 <= 8'd0;
	ddrphy_dm_o_data1[0] <= ddrphy_dfi_p0_wrdata_mask[1];
	ddrphy_dm_o_data1[1] <= ddrphy_dfi_p0_wrdata_mask[3];
	ddrphy_dm_o_data1[2] <= ddrphy_dfi_p0_wrdata_mask[5];
	ddrphy_dm_o_data1[3] <= ddrphy_dfi_p0_wrdata_mask[7];
	ddrphy_dm_o_data1[4] <= ddrphy_dfi_p1_wrdata_mask[1];
	ddrphy_dm_o_data1[5] <= ddrphy_dfi_p1_wrdata_mask[3];
	ddrphy_dm_o_data1[6] <= ddrphy_dfi_p1_wrdata_mask[5];
	ddrphy_dm_o_data1[7] <= ddrphy_dfi_p1_wrdata_mask[7];
end
always @(*) begin
	ddrphy_dq_o_data8 <= 8'd0;
	ddrphy_dq_o_data8[0] <= ddrphy_dfi_p0_wrdata[8];
	ddrphy_dq_o_data8[1] <= ddrphy_dfi_p0_wrdata[24];
	ddrphy_dq_o_data8[2] <= ddrphy_dfi_p0_wrdata[40];
	ddrphy_dq_o_data8[3] <= ddrphy_dfi_p0_wrdata[56];
	ddrphy_dq_o_data8[4] <= ddrphy_dfi_p1_wrdata[8];
	ddrphy_dq_o_data8[5] <= ddrphy_dfi_p1_wrdata[24];
	ddrphy_dq_o_data8[6] <= ddrphy_dfi_p1_wrdata[40];
	ddrphy_dq_o_data8[7] <= ddrphy_dfi_p1_wrdata[56];
end
assign ddrphy_dq_i_data8 = {ddrphy_bitslip8_o, ddrphy_dq_i_bitslip_o_d8};
always @(*) begin
	ddrphy_dq_o_data9 <= 8'd0;
	ddrphy_dq_o_data9[0] <= ddrphy_dfi_p0_wrdata[9];
	ddrphy_dq_o_data9[1] <= ddrphy_dfi_p0_wrdata[25];
	ddrphy_dq_o_data9[2] <= ddrphy_dfi_p0_wrdata[41];
	ddrphy_dq_o_data9[3] <= ddrphy_dfi_p0_wrdata[57];
	ddrphy_dq_o_data9[4] <= ddrphy_dfi_p1_wrdata[9];
	ddrphy_dq_o_data9[5] <= ddrphy_dfi_p1_wrdata[25];
	ddrphy_dq_o_data9[6] <= ddrphy_dfi_p1_wrdata[41];
	ddrphy_dq_o_data9[7] <= ddrphy_dfi_p1_wrdata[57];
end
assign ddrphy_dq_i_data9 = {ddrphy_bitslip9_o, ddrphy_dq_i_bitslip_o_d9};
always @(*) begin
	ddrphy_dq_o_data10 <= 8'd0;
	ddrphy_dq_o_data10[0] <= ddrphy_dfi_p0_wrdata[10];
	ddrphy_dq_o_data10[1] <= ddrphy_dfi_p0_wrdata[26];
	ddrphy_dq_o_data10[2] <= ddrphy_dfi_p0_wrdata[42];
	ddrphy_dq_o_data10[3] <= ddrphy_dfi_p0_wrdata[58];
	ddrphy_dq_o_data10[4] <= ddrphy_dfi_p1_wrdata[10];
	ddrphy_dq_o_data10[5] <= ddrphy_dfi_p1_wrdata[26];
	ddrphy_dq_o_data10[6] <= ddrphy_dfi_p1_wrdata[42];
	ddrphy_dq_o_data10[7] <= ddrphy_dfi_p1_wrdata[58];
end
assign ddrphy_dq_i_data10 = {ddrphy_bitslip10_o, ddrphy_dq_i_bitslip_o_d10};
always @(*) begin
	ddrphy_dq_o_data11 <= 8'd0;
	ddrphy_dq_o_data11[0] <= ddrphy_dfi_p0_wrdata[11];
	ddrphy_dq_o_data11[1] <= ddrphy_dfi_p0_wrdata[27];
	ddrphy_dq_o_data11[2] <= ddrphy_dfi_p0_wrdata[43];
	ddrphy_dq_o_data11[3] <= ddrphy_dfi_p0_wrdata[59];
	ddrphy_dq_o_data11[4] <= ddrphy_dfi_p1_wrdata[11];
	ddrphy_dq_o_data11[5] <= ddrphy_dfi_p1_wrdata[27];
	ddrphy_dq_o_data11[6] <= ddrphy_dfi_p1_wrdata[43];
	ddrphy_dq_o_data11[7] <= ddrphy_dfi_p1_wrdata[59];
end
assign ddrphy_dq_i_data11 = {ddrphy_bitslip11_o, ddrphy_dq_i_bitslip_o_d11};
always @(*) begin
	ddrphy_dq_o_data12 <= 8'd0;
	ddrphy_dq_o_data12[0] <= ddrphy_dfi_p0_wrdata[12];
	ddrphy_dq_o_data12[1] <= ddrphy_dfi_p0_wrdata[28];
	ddrphy_dq_o_data12[2] <= ddrphy_dfi_p0_wrdata[44];
	ddrphy_dq_o_data12[3] <= ddrphy_dfi_p0_wrdata[60];
	ddrphy_dq_o_data12[4] <= ddrphy_dfi_p1_wrdata[12];
	ddrphy_dq_o_data12[5] <= ddrphy_dfi_p1_wrdata[28];
	ddrphy_dq_o_data12[6] <= ddrphy_dfi_p1_wrdata[44];
	ddrphy_dq_o_data12[7] <= ddrphy_dfi_p1_wrdata[60];
end
assign ddrphy_dq_i_data12 = {ddrphy_bitslip12_o, ddrphy_dq_i_bitslip_o_d12};
always @(*) begin
	ddrphy_dq_o_data13 <= 8'd0;
	ddrphy_dq_o_data13[0] <= ddrphy_dfi_p0_wrdata[13];
	ddrphy_dq_o_data13[1] <= ddrphy_dfi_p0_wrdata[29];
	ddrphy_dq_o_data13[2] <= ddrphy_dfi_p0_wrdata[45];
	ddrphy_dq_o_data13[3] <= ddrphy_dfi_p0_wrdata[61];
	ddrphy_dq_o_data13[4] <= ddrphy_dfi_p1_wrdata[13];
	ddrphy_dq_o_data13[5] <= ddrphy_dfi_p1_wrdata[29];
	ddrphy_dq_o_data13[6] <= ddrphy_dfi_p1_wrdata[45];
	ddrphy_dq_o_data13[7] <= ddrphy_dfi_p1_wrdata[61];
end
assign ddrphy_dq_i_data13 = {ddrphy_bitslip13_o, ddrphy_dq_i_bitslip_o_d13};
always @(*) begin
	ddrphy_dq_o_data14 <= 8'd0;
	ddrphy_dq_o_data14[0] <= ddrphy_dfi_p0_wrdata[14];
	ddrphy_dq_o_data14[1] <= ddrphy_dfi_p0_wrdata[30];
	ddrphy_dq_o_data14[2] <= ddrphy_dfi_p0_wrdata[46];
	ddrphy_dq_o_data14[3] <= ddrphy_dfi_p0_wrdata[62];
	ddrphy_dq_o_data14[4] <= ddrphy_dfi_p1_wrdata[14];
	ddrphy_dq_o_data14[5] <= ddrphy_dfi_p1_wrdata[30];
	ddrphy_dq_o_data14[6] <= ddrphy_dfi_p1_wrdata[46];
	ddrphy_dq_o_data14[7] <= ddrphy_dfi_p1_wrdata[62];
end
assign ddrphy_dq_i_data14 = {ddrphy_bitslip14_o, ddrphy_dq_i_bitslip_o_d14};
always @(*) begin
	ddrphy_dq_o_data15 <= 8'd0;
	ddrphy_dq_o_data15[0] <= ddrphy_dfi_p0_wrdata[15];
	ddrphy_dq_o_data15[1] <= ddrphy_dfi_p0_wrdata[31];
	ddrphy_dq_o_data15[2] <= ddrphy_dfi_p0_wrdata[47];
	ddrphy_dq_o_data15[3] <= ddrphy_dfi_p0_wrdata[63];
	ddrphy_dq_o_data15[4] <= ddrphy_dfi_p1_wrdata[15];
	ddrphy_dq_o_data15[5] <= ddrphy_dfi_p1_wrdata[31];
	ddrphy_dq_o_data15[6] <= ddrphy_dfi_p1_wrdata[47];
	ddrphy_dq_o_data15[7] <= ddrphy_dfi_p1_wrdata[63];
end
assign ddrphy_dq_i_data15 = {ddrphy_bitslip15_o, ddrphy_dq_i_bitslip_o_d15};
always @(*) begin
	ddrphy_dfi_p0_rddata <= 64'd0;
	ddrphy_dfi_p0_rddata[0] <= ddrphy_dq_i_data0[0];
	ddrphy_dfi_p0_rddata[16] <= ddrphy_dq_i_data0[1];
	ddrphy_dfi_p0_rddata[32] <= ddrphy_dq_i_data0[2];
	ddrphy_dfi_p0_rddata[48] <= ddrphy_dq_i_data0[3];
	ddrphy_dfi_p0_rddata[1] <= ddrphy_dq_i_data1[0];
	ddrphy_dfi_p0_rddata[17] <= ddrphy_dq_i_data1[1];
	ddrphy_dfi_p0_rddata[33] <= ddrphy_dq_i_data1[2];
	ddrphy_dfi_p0_rddata[49] <= ddrphy_dq_i_data1[3];
	ddrphy_dfi_p0_rddata[2] <= ddrphy_dq_i_data2[0];
	ddrphy_dfi_p0_rddata[18] <= ddrphy_dq_i_data2[1];
	ddrphy_dfi_p0_rddata[34] <= ddrphy_dq_i_data2[2];
	ddrphy_dfi_p0_rddata[50] <= ddrphy_dq_i_data2[3];
	ddrphy_dfi_p0_rddata[3] <= ddrphy_dq_i_data3[0];
	ddrphy_dfi_p0_rddata[19] <= ddrphy_dq_i_data3[1];
	ddrphy_dfi_p0_rddata[35] <= ddrphy_dq_i_data3[2];
	ddrphy_dfi_p0_rddata[51] <= ddrphy_dq_i_data3[3];
	ddrphy_dfi_p0_rddata[4] <= ddrphy_dq_i_data4[0];
	ddrphy_dfi_p0_rddata[20] <= ddrphy_dq_i_data4[1];
	ddrphy_dfi_p0_rddata[36] <= ddrphy_dq_i_data4[2];
	ddrphy_dfi_p0_rddata[52] <= ddrphy_dq_i_data4[3];
	ddrphy_dfi_p0_rddata[5] <= ddrphy_dq_i_data5[0];
	ddrphy_dfi_p0_rddata[21] <= ddrphy_dq_i_data5[1];
	ddrphy_dfi_p0_rddata[37] <= ddrphy_dq_i_data5[2];
	ddrphy_dfi_p0_rddata[53] <= ddrphy_dq_i_data5[3];
	ddrphy_dfi_p0_rddata[6] <= ddrphy_dq_i_data6[0];
	ddrphy_dfi_p0_rddata[22] <= ddrphy_dq_i_data6[1];
	ddrphy_dfi_p0_rddata[38] <= ddrphy_dq_i_data6[2];
	ddrphy_dfi_p0_rddata[54] <= ddrphy_dq_i_data6[3];
	ddrphy_dfi_p0_rddata[7] <= ddrphy_dq_i_data7[0];
	ddrphy_dfi_p0_rddata[23] <= ddrphy_dq_i_data7[1];
	ddrphy_dfi_p0_rddata[39] <= ddrphy_dq_i_data7[2];
	ddrphy_dfi_p0_rddata[55] <= ddrphy_dq_i_data7[3];
	ddrphy_dfi_p0_rddata[8] <= ddrphy_dq_i_data8[0];
	ddrphy_dfi_p0_rddata[24] <= ddrphy_dq_i_data8[1];
	ddrphy_dfi_p0_rddata[40] <= ddrphy_dq_i_data8[2];
	ddrphy_dfi_p0_rddata[56] <= ddrphy_dq_i_data8[3];
	ddrphy_dfi_p0_rddata[9] <= ddrphy_dq_i_data9[0];
	ddrphy_dfi_p0_rddata[25] <= ddrphy_dq_i_data9[1];
	ddrphy_dfi_p0_rddata[41] <= ddrphy_dq_i_data9[2];
	ddrphy_dfi_p0_rddata[57] <= ddrphy_dq_i_data9[3];
	ddrphy_dfi_p0_rddata[10] <= ddrphy_dq_i_data10[0];
	ddrphy_dfi_p0_rddata[26] <= ddrphy_dq_i_data10[1];
	ddrphy_dfi_p0_rddata[42] <= ddrphy_dq_i_data10[2];
	ddrphy_dfi_p0_rddata[58] <= ddrphy_dq_i_data10[3];
	ddrphy_dfi_p0_rddata[11] <= ddrphy_dq_i_data11[0];
	ddrphy_dfi_p0_rddata[27] <= ddrphy_dq_i_data11[1];
	ddrphy_dfi_p0_rddata[43] <= ddrphy_dq_i_data11[2];
	ddrphy_dfi_p0_rddata[59] <= ddrphy_dq_i_data11[3];
	ddrphy_dfi_p0_rddata[12] <= ddrphy_dq_i_data12[0];
	ddrphy_dfi_p0_rddata[28] <= ddrphy_dq_i_data12[1];
	ddrphy_dfi_p0_rddata[44] <= ddrphy_dq_i_data12[2];
	ddrphy_dfi_p0_rddata[60] <= ddrphy_dq_i_data12[3];
	ddrphy_dfi_p0_rddata[13] <= ddrphy_dq_i_data13[0];
	ddrphy_dfi_p0_rddata[29] <= ddrphy_dq_i_data13[1];
	ddrphy_dfi_p0_rddata[45] <= ddrphy_dq_i_data13[2];
	ddrphy_dfi_p0_rddata[61] <= ddrphy_dq_i_data13[3];
	ddrphy_dfi_p0_rddata[14] <= ddrphy_dq_i_data14[0];
	ddrphy_dfi_p0_rddata[30] <= ddrphy_dq_i_data14[1];
	ddrphy_dfi_p0_rddata[46] <= ddrphy_dq_i_data14[2];
	ddrphy_dfi_p0_rddata[62] <= ddrphy_dq_i_data14[3];
	ddrphy_dfi_p0_rddata[15] <= ddrphy_dq_i_data15[0];
	ddrphy_dfi_p0_rddata[31] <= ddrphy_dq_i_data15[1];
	ddrphy_dfi_p0_rddata[47] <= ddrphy_dq_i_data15[2];
	ddrphy_dfi_p0_rddata[63] <= ddrphy_dq_i_data15[3];
end
always @(*) begin
	ddrphy_dfi_p1_rddata <= 64'd0;
	ddrphy_dfi_p1_rddata[0] <= ddrphy_dq_i_data0[4];
	ddrphy_dfi_p1_rddata[16] <= ddrphy_dq_i_data0[5];
	ddrphy_dfi_p1_rddata[32] <= ddrphy_dq_i_data0[6];
	ddrphy_dfi_p1_rddata[48] <= ddrphy_dq_i_data0[7];
	ddrphy_dfi_p1_rddata[1] <= ddrphy_dq_i_data1[4];
	ddrphy_dfi_p1_rddata[17] <= ddrphy_dq_i_data1[5];
	ddrphy_dfi_p1_rddata[33] <= ddrphy_dq_i_data1[6];
	ddrphy_dfi_p1_rddata[49] <= ddrphy_dq_i_data1[7];
	ddrphy_dfi_p1_rddata[2] <= ddrphy_dq_i_data2[4];
	ddrphy_dfi_p1_rddata[18] <= ddrphy_dq_i_data2[5];
	ddrphy_dfi_p1_rddata[34] <= ddrphy_dq_i_data2[6];
	ddrphy_dfi_p1_rddata[50] <= ddrphy_dq_i_data2[7];
	ddrphy_dfi_p1_rddata[3] <= ddrphy_dq_i_data3[4];
	ddrphy_dfi_p1_rddata[19] <= ddrphy_dq_i_data3[5];
	ddrphy_dfi_p1_rddata[35] <= ddrphy_dq_i_data3[6];
	ddrphy_dfi_p1_rddata[51] <= ddrphy_dq_i_data3[7];
	ddrphy_dfi_p1_rddata[4] <= ddrphy_dq_i_data4[4];
	ddrphy_dfi_p1_rddata[20] <= ddrphy_dq_i_data4[5];
	ddrphy_dfi_p1_rddata[36] <= ddrphy_dq_i_data4[6];
	ddrphy_dfi_p1_rddata[52] <= ddrphy_dq_i_data4[7];
	ddrphy_dfi_p1_rddata[5] <= ddrphy_dq_i_data5[4];
	ddrphy_dfi_p1_rddata[21] <= ddrphy_dq_i_data5[5];
	ddrphy_dfi_p1_rddata[37] <= ddrphy_dq_i_data5[6];
	ddrphy_dfi_p1_rddata[53] <= ddrphy_dq_i_data5[7];
	ddrphy_dfi_p1_rddata[6] <= ddrphy_dq_i_data6[4];
	ddrphy_dfi_p1_rddata[22] <= ddrphy_dq_i_data6[5];
	ddrphy_dfi_p1_rddata[38] <= ddrphy_dq_i_data6[6];
	ddrphy_dfi_p1_rddata[54] <= ddrphy_dq_i_data6[7];
	ddrphy_dfi_p1_rddata[7] <= ddrphy_dq_i_data7[4];
	ddrphy_dfi_p1_rddata[23] <= ddrphy_dq_i_data7[5];
	ddrphy_dfi_p1_rddata[39] <= ddrphy_dq_i_data7[6];
	ddrphy_dfi_p1_rddata[55] <= ddrphy_dq_i_data7[7];
	ddrphy_dfi_p1_rddata[8] <= ddrphy_dq_i_data8[4];
	ddrphy_dfi_p1_rddata[24] <= ddrphy_dq_i_data8[5];
	ddrphy_dfi_p1_rddata[40] <= ddrphy_dq_i_data8[6];
	ddrphy_dfi_p1_rddata[56] <= ddrphy_dq_i_data8[7];
	ddrphy_dfi_p1_rddata[9] <= ddrphy_dq_i_data9[4];
	ddrphy_dfi_p1_rddata[25] <= ddrphy_dq_i_data9[5];
	ddrphy_dfi_p1_rddata[41] <= ddrphy_dq_i_data9[6];
	ddrphy_dfi_p1_rddata[57] <= ddrphy_dq_i_data9[7];
	ddrphy_dfi_p1_rddata[10] <= ddrphy_dq_i_data10[4];
	ddrphy_dfi_p1_rddata[26] <= ddrphy_dq_i_data10[5];
	ddrphy_dfi_p1_rddata[42] <= ddrphy_dq_i_data10[6];
	ddrphy_dfi_p1_rddata[58] <= ddrphy_dq_i_data10[7];
	ddrphy_dfi_p1_rddata[11] <= ddrphy_dq_i_data11[4];
	ddrphy_dfi_p1_rddata[27] <= ddrphy_dq_i_data11[5];
	ddrphy_dfi_p1_rddata[43] <= ddrphy_dq_i_data11[6];
	ddrphy_dfi_p1_rddata[59] <= ddrphy_dq_i_data11[7];
	ddrphy_dfi_p1_rddata[12] <= ddrphy_dq_i_data12[4];
	ddrphy_dfi_p1_rddata[28] <= ddrphy_dq_i_data12[5];
	ddrphy_dfi_p1_rddata[44] <= ddrphy_dq_i_data12[6];
	ddrphy_dfi_p1_rddata[60] <= ddrphy_dq_i_data12[7];
	ddrphy_dfi_p1_rddata[13] <= ddrphy_dq_i_data13[4];
	ddrphy_dfi_p1_rddata[29] <= ddrphy_dq_i_data13[5];
	ddrphy_dfi_p1_rddata[45] <= ddrphy_dq_i_data13[6];
	ddrphy_dfi_p1_rddata[61] <= ddrphy_dq_i_data13[7];
	ddrphy_dfi_p1_rddata[14] <= ddrphy_dq_i_data14[4];
	ddrphy_dfi_p1_rddata[30] <= ddrphy_dq_i_data14[5];
	ddrphy_dfi_p1_rddata[46] <= ddrphy_dq_i_data14[6];
	ddrphy_dfi_p1_rddata[62] <= ddrphy_dq_i_data14[7];
	ddrphy_dfi_p1_rddata[15] <= ddrphy_dq_i_data15[4];
	ddrphy_dfi_p1_rddata[31] <= ddrphy_dq_i_data15[5];
	ddrphy_dfi_p1_rddata[47] <= ddrphy_dq_i_data15[6];
	ddrphy_dfi_p1_rddata[63] <= ddrphy_dq_i_data15[7];
end
assign ddrphy_dfi_p0_rddata_valid = ddrphy_rddata_en_tappeddelayline12;
assign ddrphy_dfi_p1_rddata_valid = ddrphy_rddata_en_tappeddelayline12;
assign ddrphy_dfi_p2_rddata_valid = ddrphy_rddata_en_tappeddelayline12;
assign ddrphy_dfi_p3_rddata_valid = ddrphy_rddata_en_tappeddelayline12;
assign ddrphy_dqs_re = (ddrphy_rddata_en_tappeddelayline3 | ddrphy_rddata_en_tappeddelayline4);
assign ddrphy_dq_oe = (ddrphy_wrdata_en_tappeddelayline3 | ddrphy_wrdata_en_tappeddelayline4);
assign ddrphy_bl8_chunk = ddrphy_wrdata_en_tappeddelayline3;
assign ddrphy_dqs_oe = ddrphy_dq_oe;
assign ddrphy_dqs_preamble = (ddrphy_wrdata_en_tappeddelayline2 & (~ddrphy_wrdata_en_tappeddelayline3));
assign ddrphy_dqs_postamble = (ddrphy_wrdata_en_tappeddelayline5 & (~ddrphy_wrdata_en_tappeddelayline4));
assign ddrphy_new_lock = (ddrphy_lock1 & (~ddrphy_lock_d));
assign ddrphy_pause0 = ddrphy_pause1;
assign ddrphy_stop0 = ddrphy_stop1;
assign ddrphy_delay0 = ddrphy_delay1;
assign ddrphy_reset0 = ddrphy_reset1;
always @(*) begin
	ddrphy_bitslip0_o <= 4'd0;
	case (ddrphy_bitslip0_value)
		1'd0: begin
			ddrphy_bitslip0_o <= ddrphy_bitslip0_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip0_o <= ddrphy_bitslip0_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip0_o <= ddrphy_bitslip0_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip0_o <= ddrphy_bitslip0_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip1_o <= 4'd0;
	case (ddrphy_bitslip1_value)
		1'd0: begin
			ddrphy_bitslip1_o <= ddrphy_bitslip1_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip1_o <= ddrphy_bitslip1_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip1_o <= ddrphy_bitslip1_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip1_o <= ddrphy_bitslip1_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip2_o <= 4'd0;
	case (ddrphy_bitslip2_value)
		1'd0: begin
			ddrphy_bitslip2_o <= ddrphy_bitslip2_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip2_o <= ddrphy_bitslip2_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip2_o <= ddrphy_bitslip2_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip2_o <= ddrphy_bitslip2_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip3_o <= 4'd0;
	case (ddrphy_bitslip3_value)
		1'd0: begin
			ddrphy_bitslip3_o <= ddrphy_bitslip3_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip3_o <= ddrphy_bitslip3_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip3_o <= ddrphy_bitslip3_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip3_o <= ddrphy_bitslip3_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip4_o <= 4'd0;
	case (ddrphy_bitslip4_value)
		1'd0: begin
			ddrphy_bitslip4_o <= ddrphy_bitslip4_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip4_o <= ddrphy_bitslip4_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip4_o <= ddrphy_bitslip4_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip4_o <= ddrphy_bitslip4_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip5_o <= 4'd0;
	case (ddrphy_bitslip5_value)
		1'd0: begin
			ddrphy_bitslip5_o <= ddrphy_bitslip5_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip5_o <= ddrphy_bitslip5_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip5_o <= ddrphy_bitslip5_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip5_o <= ddrphy_bitslip5_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip6_o <= 4'd0;
	case (ddrphy_bitslip6_value)
		1'd0: begin
			ddrphy_bitslip6_o <= ddrphy_bitslip6_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip6_o <= ddrphy_bitslip6_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip6_o <= ddrphy_bitslip6_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip6_o <= ddrphy_bitslip6_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip7_o <= 4'd0;
	case (ddrphy_bitslip7_value)
		1'd0: begin
			ddrphy_bitslip7_o <= ddrphy_bitslip7_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip7_o <= ddrphy_bitslip7_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip7_o <= ddrphy_bitslip7_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip7_o <= ddrphy_bitslip7_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip8_o <= 4'd0;
	case (ddrphy_bitslip8_value)
		1'd0: begin
			ddrphy_bitslip8_o <= ddrphy_bitslip8_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip8_o <= ddrphy_bitslip8_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip8_o <= ddrphy_bitslip8_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip8_o <= ddrphy_bitslip8_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip9_o <= 4'd0;
	case (ddrphy_bitslip9_value)
		1'd0: begin
			ddrphy_bitslip9_o <= ddrphy_bitslip9_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip9_o <= ddrphy_bitslip9_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip9_o <= ddrphy_bitslip9_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip9_o <= ddrphy_bitslip9_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip10_o <= 4'd0;
	case (ddrphy_bitslip10_value)
		1'd0: begin
			ddrphy_bitslip10_o <= ddrphy_bitslip10_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip10_o <= ddrphy_bitslip10_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip10_o <= ddrphy_bitslip10_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip10_o <= ddrphy_bitslip10_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip11_o <= 4'd0;
	case (ddrphy_bitslip11_value)
		1'd0: begin
			ddrphy_bitslip11_o <= ddrphy_bitslip11_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip11_o <= ddrphy_bitslip11_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip11_o <= ddrphy_bitslip11_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip11_o <= ddrphy_bitslip11_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip12_o <= 4'd0;
	case (ddrphy_bitslip12_value)
		1'd0: begin
			ddrphy_bitslip12_o <= ddrphy_bitslip12_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip12_o <= ddrphy_bitslip12_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip12_o <= ddrphy_bitslip12_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip12_o <= ddrphy_bitslip12_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip13_o <= 4'd0;
	case (ddrphy_bitslip13_value)
		1'd0: begin
			ddrphy_bitslip13_o <= ddrphy_bitslip13_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip13_o <= ddrphy_bitslip13_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip13_o <= ddrphy_bitslip13_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip13_o <= ddrphy_bitslip13_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip14_o <= 4'd0;
	case (ddrphy_bitslip14_value)
		1'd0: begin
			ddrphy_bitslip14_o <= ddrphy_bitslip14_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip14_o <= ddrphy_bitslip14_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip14_o <= ddrphy_bitslip14_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip14_o <= ddrphy_bitslip14_r[6:3];
		end
	endcase
end
always @(*) begin
	ddrphy_bitslip15_o <= 4'd0;
	case (ddrphy_bitslip15_value)
		1'd0: begin
			ddrphy_bitslip15_o <= ddrphy_bitslip15_r[3:0];
		end
		1'd1: begin
			ddrphy_bitslip15_o <= ddrphy_bitslip15_r[4:1];
		end
		2'd2: begin
			ddrphy_bitslip15_o <= ddrphy_bitslip15_r[5:2];
		end
		2'd3: begin
			ddrphy_bitslip15_o <= ddrphy_bitslip15_r[6:3];
		end
	endcase
end
assign ddrphy_dfi_p0_address = sdram_master_p0_address;
assign ddrphy_dfi_p0_bank = sdram_master_p0_bank;
assign ddrphy_dfi_p0_cas_n = sdram_master_p0_cas_n;
assign ddrphy_dfi_p0_cs_n = sdram_master_p0_cs_n;
assign ddrphy_dfi_p0_ras_n = sdram_master_p0_ras_n;
assign ddrphy_dfi_p0_we_n = sdram_master_p0_we_n;
assign ddrphy_dfi_p0_cke = sdram_master_p0_cke;
assign ddrphy_dfi_p0_odt = sdram_master_p0_odt;
assign ddrphy_dfi_p0_reset_n = sdram_master_p0_reset_n;
assign ddrphy_dfi_p0_act_n = sdram_master_p0_act_n;
assign ddrphy_dfi_p0_wrdata = sdram_master_p0_wrdata;
assign ddrphy_dfi_p0_wrdata_en = sdram_master_p0_wrdata_en;
assign ddrphy_dfi_p0_wrdata_mask = sdram_master_p0_wrdata_mask;
assign ddrphy_dfi_p0_rddata_en = sdram_master_p0_rddata_en;
assign sdram_master_p0_rddata = ddrphy_dfi_p0_rddata;
assign sdram_master_p0_rddata_valid = ddrphy_dfi_p0_rddata_valid;
assign ddrphy_dfi_p1_address = sdram_master_p1_address;
assign ddrphy_dfi_p1_bank = sdram_master_p1_bank;
assign ddrphy_dfi_p1_cas_n = sdram_master_p1_cas_n;
assign ddrphy_dfi_p1_cs_n = sdram_master_p1_cs_n;
assign ddrphy_dfi_p1_ras_n = sdram_master_p1_ras_n;
assign ddrphy_dfi_p1_we_n = sdram_master_p1_we_n;
assign ddrphy_dfi_p1_cke = sdram_master_p1_cke;
assign ddrphy_dfi_p1_odt = sdram_master_p1_odt;
assign ddrphy_dfi_p1_reset_n = sdram_master_p1_reset_n;
assign ddrphy_dfi_p1_act_n = sdram_master_p1_act_n;
assign ddrphy_dfi_p1_wrdata = sdram_master_p1_wrdata;
assign ddrphy_dfi_p1_wrdata_en = sdram_master_p1_wrdata_en;
assign ddrphy_dfi_p1_wrdata_mask = sdram_master_p1_wrdata_mask;
assign ddrphy_dfi_p1_rddata_en = sdram_master_p1_rddata_en;
assign sdram_master_p1_rddata = ddrphy_dfi_p1_rddata;
assign sdram_master_p1_rddata_valid = ddrphy_dfi_p1_rddata_valid;
assign sdram_slave_p0_address = sdram_dfi_p0_address;
assign sdram_slave_p0_bank = sdram_dfi_p0_bank;
assign sdram_slave_p0_cas_n = sdram_dfi_p0_cas_n;
assign sdram_slave_p0_cs_n = sdram_dfi_p0_cs_n;
assign sdram_slave_p0_ras_n = sdram_dfi_p0_ras_n;
assign sdram_slave_p0_we_n = sdram_dfi_p0_we_n;
assign sdram_slave_p0_cke = sdram_dfi_p0_cke;
assign sdram_slave_p0_odt = sdram_dfi_p0_odt;
assign sdram_slave_p0_reset_n = sdram_dfi_p0_reset_n;
assign sdram_slave_p0_act_n = sdram_dfi_p0_act_n;
assign sdram_slave_p0_wrdata = sdram_dfi_p0_wrdata;
assign sdram_slave_p0_wrdata_en = sdram_dfi_p0_wrdata_en;
assign sdram_slave_p0_wrdata_mask = sdram_dfi_p0_wrdata_mask;
assign sdram_slave_p0_rddata_en = sdram_dfi_p0_rddata_en;
assign sdram_dfi_p0_rddata = sdram_slave_p0_rddata;
assign sdram_dfi_p0_rddata_valid = sdram_slave_p0_rddata_valid;
assign sdram_slave_p1_address = sdram_dfi_p1_address;
assign sdram_slave_p1_bank = sdram_dfi_p1_bank;
assign sdram_slave_p1_cas_n = sdram_dfi_p1_cas_n;
assign sdram_slave_p1_cs_n = sdram_dfi_p1_cs_n;
assign sdram_slave_p1_ras_n = sdram_dfi_p1_ras_n;
assign sdram_slave_p1_we_n = sdram_dfi_p1_we_n;
assign sdram_slave_p1_cke = sdram_dfi_p1_cke;
assign sdram_slave_p1_odt = sdram_dfi_p1_odt;
assign sdram_slave_p1_reset_n = sdram_dfi_p1_reset_n;
assign sdram_slave_p1_act_n = sdram_dfi_p1_act_n;
assign sdram_slave_p1_wrdata = sdram_dfi_p1_wrdata;
assign sdram_slave_p1_wrdata_en = sdram_dfi_p1_wrdata_en;
assign sdram_slave_p1_wrdata_mask = sdram_dfi_p1_wrdata_mask;
assign sdram_slave_p1_rddata_en = sdram_dfi_p1_rddata_en;
assign sdram_dfi_p1_rddata = sdram_slave_p1_rddata;
assign sdram_dfi_p1_rddata_valid = sdram_slave_p1_rddata_valid;
always @(*) begin
	sdram_slave_p1_rddata <= 64'd0;
	sdram_slave_p1_rddata_valid <= 1'd0;
	sdram_master_p0_address <= 13'd0;
	sdram_master_p0_bank <= 3'd0;
	sdram_master_p0_cas_n <= 1'd1;
	sdram_master_p0_cs_n <= 1'd1;
	sdram_master_p0_ras_n <= 1'd1;
	sdram_inti_p0_rddata <= 64'd0;
	sdram_master_p0_we_n <= 1'd1;
	sdram_inti_p0_rddata_valid <= 1'd0;
	sdram_master_p0_cke <= 1'd0;
	sdram_master_p0_odt <= 1'd0;
	sdram_master_p0_reset_n <= 1'd0;
	sdram_master_p0_act_n <= 1'd1;
	sdram_master_p0_wrdata <= 64'd0;
	sdram_master_p0_wrdata_en <= 1'd0;
	sdram_master_p0_wrdata_mask <= 8'd0;
	sdram_master_p0_rddata_en <= 1'd0;
	sdram_master_p1_address <= 13'd0;
	sdram_master_p1_bank <= 3'd0;
	sdram_master_p1_cas_n <= 1'd1;
	sdram_master_p1_cs_n <= 1'd1;
	sdram_master_p1_ras_n <= 1'd1;
	sdram_inti_p1_rddata <= 64'd0;
	sdram_master_p1_we_n <= 1'd1;
	sdram_inti_p1_rddata_valid <= 1'd0;
	sdram_master_p1_cke <= 1'd0;
	sdram_master_p1_odt <= 1'd0;
	sdram_master_p1_reset_n <= 1'd0;
	sdram_master_p1_act_n <= 1'd1;
	sdram_master_p1_wrdata <= 64'd0;
	sdram_master_p1_wrdata_en <= 1'd0;
	sdram_master_p1_wrdata_mask <= 8'd0;
	sdram_master_p1_rddata_en <= 1'd0;
	sdram_slave_p0_rddata <= 64'd0;
	sdram_slave_p0_rddata_valid <= 1'd0;
	if (sdram_sel) begin
		sdram_master_p0_address <= sdram_slave_p0_address;
		sdram_master_p0_bank <= sdram_slave_p0_bank;
		sdram_master_p0_cas_n <= sdram_slave_p0_cas_n;
		sdram_master_p0_cs_n <= sdram_slave_p0_cs_n;
		sdram_master_p0_ras_n <= sdram_slave_p0_ras_n;
		sdram_master_p0_we_n <= sdram_slave_p0_we_n;
		sdram_master_p0_cke <= sdram_slave_p0_cke;
		sdram_master_p0_odt <= sdram_slave_p0_odt;
		sdram_master_p0_reset_n <= sdram_slave_p0_reset_n;
		sdram_master_p0_act_n <= sdram_slave_p0_act_n;
		sdram_master_p0_wrdata <= sdram_slave_p0_wrdata;
		sdram_master_p0_wrdata_en <= sdram_slave_p0_wrdata_en;
		sdram_master_p0_wrdata_mask <= sdram_slave_p0_wrdata_mask;
		sdram_master_p0_rddata_en <= sdram_slave_p0_rddata_en;
		sdram_slave_p0_rddata <= sdram_master_p0_rddata;
		sdram_slave_p0_rddata_valid <= sdram_master_p0_rddata_valid;
		sdram_master_p1_address <= sdram_slave_p1_address;
		sdram_master_p1_bank <= sdram_slave_p1_bank;
		sdram_master_p1_cas_n <= sdram_slave_p1_cas_n;
		sdram_master_p1_cs_n <= sdram_slave_p1_cs_n;
		sdram_master_p1_ras_n <= sdram_slave_p1_ras_n;
		sdram_master_p1_we_n <= sdram_slave_p1_we_n;
		sdram_master_p1_cke <= sdram_slave_p1_cke;
		sdram_master_p1_odt <= sdram_slave_p1_odt;
		sdram_master_p1_reset_n <= sdram_slave_p1_reset_n;
		sdram_master_p1_act_n <= sdram_slave_p1_act_n;
		sdram_master_p1_wrdata <= sdram_slave_p1_wrdata;
		sdram_master_p1_wrdata_en <= sdram_slave_p1_wrdata_en;
		sdram_master_p1_wrdata_mask <= sdram_slave_p1_wrdata_mask;
		sdram_master_p1_rddata_en <= sdram_slave_p1_rddata_en;
		sdram_slave_p1_rddata <= sdram_master_p1_rddata;
		sdram_slave_p1_rddata_valid <= sdram_master_p1_rddata_valid;
	end else begin
		sdram_master_p0_address <= sdram_inti_p0_address;
		sdram_master_p0_bank <= sdram_inti_p0_bank;
		sdram_master_p0_cas_n <= sdram_inti_p0_cas_n;
		sdram_master_p0_cs_n <= sdram_inti_p0_cs_n;
		sdram_master_p0_ras_n <= sdram_inti_p0_ras_n;
		sdram_master_p0_we_n <= sdram_inti_p0_we_n;
		sdram_master_p0_cke <= sdram_inti_p0_cke;
		sdram_master_p0_odt <= sdram_inti_p0_odt;
		sdram_master_p0_reset_n <= sdram_inti_p0_reset_n;
		sdram_master_p0_act_n <= sdram_inti_p0_act_n;
		sdram_master_p0_wrdata <= sdram_inti_p0_wrdata;
		sdram_master_p0_wrdata_en <= sdram_inti_p0_wrdata_en;
		sdram_master_p0_wrdata_mask <= sdram_inti_p0_wrdata_mask;
		sdram_master_p0_rddata_en <= sdram_inti_p0_rddata_en;
		sdram_inti_p0_rddata <= sdram_master_p0_rddata;
		sdram_inti_p0_rddata_valid <= sdram_master_p0_rddata_valid;
		sdram_master_p1_address <= sdram_inti_p1_address;
		sdram_master_p1_bank <= sdram_inti_p1_bank;
		sdram_master_p1_cas_n <= sdram_inti_p1_cas_n;
		sdram_master_p1_cs_n <= sdram_inti_p1_cs_n;
		sdram_master_p1_ras_n <= sdram_inti_p1_ras_n;
		sdram_master_p1_we_n <= sdram_inti_p1_we_n;
		sdram_master_p1_cke <= sdram_inti_p1_cke;
		sdram_master_p1_odt <= sdram_inti_p1_odt;
		sdram_master_p1_reset_n <= sdram_inti_p1_reset_n;
		sdram_master_p1_act_n <= sdram_inti_p1_act_n;
		sdram_master_p1_wrdata <= sdram_inti_p1_wrdata;
		sdram_master_p1_wrdata_en <= sdram_inti_p1_wrdata_en;
		sdram_master_p1_wrdata_mask <= sdram_inti_p1_wrdata_mask;
		sdram_master_p1_rddata_en <= sdram_inti_p1_rddata_en;
		sdram_inti_p1_rddata <= sdram_master_p1_rddata;
		sdram_inti_p1_rddata_valid <= sdram_master_p1_rddata_valid;
	end
end
assign sdram_inti_p0_cke = sdram_cke;
assign sdram_inti_p1_cke = sdram_cke;
assign sdram_inti_p0_odt = sdram_odt;
assign sdram_inti_p1_odt = sdram_odt;
assign sdram_inti_p0_reset_n = sdram_reset_n;
assign sdram_inti_p1_reset_n = sdram_reset_n;
always @(*) begin
	sdram_inti_p0_cas_n <= 1'd1;
	sdram_inti_p0_cs_n <= 1'd1;
	sdram_inti_p0_ras_n <= 1'd1;
	sdram_inti_p0_we_n <= 1'd1;
	if (sdram_phaseinjector0_command_issue_re) begin
		sdram_inti_p0_cs_n <= {1{(~sdram_phaseinjector0_command_storage[0])}};
		sdram_inti_p0_we_n <= (~sdram_phaseinjector0_command_storage[1]);
		sdram_inti_p0_cas_n <= (~sdram_phaseinjector0_command_storage[2]);
		sdram_inti_p0_ras_n <= (~sdram_phaseinjector0_command_storage[3]);
	end else begin
		sdram_inti_p0_cs_n <= {1{1'd1}};
		sdram_inti_p0_we_n <= 1'd1;
		sdram_inti_p0_cas_n <= 1'd1;
		sdram_inti_p0_ras_n <= 1'd1;
	end
end
assign sdram_inti_p0_address = sdram_phaseinjector0_address_storage;
assign sdram_inti_p0_bank = sdram_phaseinjector0_baddress_storage;
assign sdram_inti_p0_wrdata_en = (sdram_phaseinjector0_command_issue_re & sdram_phaseinjector0_command_storage[4]);
assign sdram_inti_p0_rddata_en = (sdram_phaseinjector0_command_issue_re & sdram_phaseinjector0_command_storage[5]);
assign sdram_inti_p0_wrdata = sdram_phaseinjector0_wrdata_storage;
assign sdram_inti_p0_wrdata_mask = 1'd0;
always @(*) begin
	sdram_inti_p1_cas_n <= 1'd1;
	sdram_inti_p1_cs_n <= 1'd1;
	sdram_inti_p1_ras_n <= 1'd1;
	sdram_inti_p1_we_n <= 1'd1;
	if (sdram_phaseinjector1_command_issue_re) begin
		sdram_inti_p1_cs_n <= {1{(~sdram_phaseinjector1_command_storage[0])}};
		sdram_inti_p1_we_n <= (~sdram_phaseinjector1_command_storage[1]);
		sdram_inti_p1_cas_n <= (~sdram_phaseinjector1_command_storage[2]);
		sdram_inti_p1_ras_n <= (~sdram_phaseinjector1_command_storage[3]);
	end else begin
		sdram_inti_p1_cs_n <= {1{1'd1}};
		sdram_inti_p1_we_n <= 1'd1;
		sdram_inti_p1_cas_n <= 1'd1;
		sdram_inti_p1_ras_n <= 1'd1;
	end
end
assign sdram_inti_p1_address = sdram_phaseinjector1_address_storage;
assign sdram_inti_p1_bank = sdram_phaseinjector1_baddress_storage;
assign sdram_inti_p1_wrdata_en = (sdram_phaseinjector1_command_issue_re & sdram_phaseinjector1_command_storage[4]);
assign sdram_inti_p1_rddata_en = (sdram_phaseinjector1_command_issue_re & sdram_phaseinjector1_command_storage[5]);
assign sdram_inti_p1_wrdata = sdram_phaseinjector1_wrdata_storage;
assign sdram_inti_p1_wrdata_mask = 1'd0;
assign sdram_bankmachine0_req_valid = sdram_interface_bank0_valid;
assign sdram_interface_bank0_ready = sdram_bankmachine0_req_ready;
assign sdram_bankmachine0_req_we = sdram_interface_bank0_we;
assign sdram_bankmachine0_req_addr = sdram_interface_bank0_addr;
assign sdram_interface_bank0_lock = sdram_bankmachine0_req_lock;
assign sdram_interface_bank0_wdata_ready = sdram_bankmachine0_req_wdata_ready;
assign sdram_interface_bank0_rdata_valid = sdram_bankmachine0_req_rdata_valid;
assign sdram_bankmachine1_req_valid = sdram_interface_bank1_valid;
assign sdram_interface_bank1_ready = sdram_bankmachine1_req_ready;
assign sdram_bankmachine1_req_we = sdram_interface_bank1_we;
assign sdram_bankmachine1_req_addr = sdram_interface_bank1_addr;
assign sdram_interface_bank1_lock = sdram_bankmachine1_req_lock;
assign sdram_interface_bank1_wdata_ready = sdram_bankmachine1_req_wdata_ready;
assign sdram_interface_bank1_rdata_valid = sdram_bankmachine1_req_rdata_valid;
assign sdram_bankmachine2_req_valid = sdram_interface_bank2_valid;
assign sdram_interface_bank2_ready = sdram_bankmachine2_req_ready;
assign sdram_bankmachine2_req_we = sdram_interface_bank2_we;
assign sdram_bankmachine2_req_addr = sdram_interface_bank2_addr;
assign sdram_interface_bank2_lock = sdram_bankmachine2_req_lock;
assign sdram_interface_bank2_wdata_ready = sdram_bankmachine2_req_wdata_ready;
assign sdram_interface_bank2_rdata_valid = sdram_bankmachine2_req_rdata_valid;
assign sdram_bankmachine3_req_valid = sdram_interface_bank3_valid;
assign sdram_interface_bank3_ready = sdram_bankmachine3_req_ready;
assign sdram_bankmachine3_req_we = sdram_interface_bank3_we;
assign sdram_bankmachine3_req_addr = sdram_interface_bank3_addr;
assign sdram_interface_bank3_lock = sdram_bankmachine3_req_lock;
assign sdram_interface_bank3_wdata_ready = sdram_bankmachine3_req_wdata_ready;
assign sdram_interface_bank3_rdata_valid = sdram_bankmachine3_req_rdata_valid;
assign sdram_bankmachine4_req_valid = sdram_interface_bank4_valid;
assign sdram_interface_bank4_ready = sdram_bankmachine4_req_ready;
assign sdram_bankmachine4_req_we = sdram_interface_bank4_we;
assign sdram_bankmachine4_req_addr = sdram_interface_bank4_addr;
assign sdram_interface_bank4_lock = sdram_bankmachine4_req_lock;
assign sdram_interface_bank4_wdata_ready = sdram_bankmachine4_req_wdata_ready;
assign sdram_interface_bank4_rdata_valid = sdram_bankmachine4_req_rdata_valid;
assign sdram_bankmachine5_req_valid = sdram_interface_bank5_valid;
assign sdram_interface_bank5_ready = sdram_bankmachine5_req_ready;
assign sdram_bankmachine5_req_we = sdram_interface_bank5_we;
assign sdram_bankmachine5_req_addr = sdram_interface_bank5_addr;
assign sdram_interface_bank5_lock = sdram_bankmachine5_req_lock;
assign sdram_interface_bank5_wdata_ready = sdram_bankmachine5_req_wdata_ready;
assign sdram_interface_bank5_rdata_valid = sdram_bankmachine5_req_rdata_valid;
assign sdram_bankmachine6_req_valid = sdram_interface_bank6_valid;
assign sdram_interface_bank6_ready = sdram_bankmachine6_req_ready;
assign sdram_bankmachine6_req_we = sdram_interface_bank6_we;
assign sdram_bankmachine6_req_addr = sdram_interface_bank6_addr;
assign sdram_interface_bank6_lock = sdram_bankmachine6_req_lock;
assign sdram_interface_bank6_wdata_ready = sdram_bankmachine6_req_wdata_ready;
assign sdram_interface_bank6_rdata_valid = sdram_bankmachine6_req_rdata_valid;
assign sdram_bankmachine7_req_valid = sdram_interface_bank7_valid;
assign sdram_interface_bank7_ready = sdram_bankmachine7_req_ready;
assign sdram_bankmachine7_req_we = sdram_interface_bank7_we;
assign sdram_bankmachine7_req_addr = sdram_interface_bank7_addr;
assign sdram_interface_bank7_lock = sdram_bankmachine7_req_lock;
assign sdram_interface_bank7_wdata_ready = sdram_bankmachine7_req_wdata_ready;
assign sdram_interface_bank7_rdata_valid = sdram_bankmachine7_req_rdata_valid;
assign sdram_timer_wait = (~sdram_timer_done0);
assign sdram_postponer_req_i = sdram_timer_done0;
assign sdram_wants_refresh = sdram_postponer_req_o;
assign sdram_wants_zqcs = sdram_zqcs_timer_done0;
assign sdram_zqcs_timer_wait = (~sdram_zqcs_executer_done);
assign sdram_timer_done1 = (sdram_timer_count1 == 1'd0);
assign sdram_timer_done0 = sdram_timer_done1;
assign sdram_timer_count0 = sdram_timer_count1;
assign sdram_sequencer_start1 = (sdram_sequencer_start0 | (sdram_sequencer_count != 1'd0));
assign sdram_sequencer_done0 = (sdram_sequencer_done1 & (sdram_sequencer_count == 1'd0));
assign sdram_zqcs_timer_done1 = (sdram_zqcs_timer_count1 == 1'd0);
assign sdram_zqcs_timer_done0 = sdram_zqcs_timer_done1;
assign sdram_zqcs_timer_count0 = sdram_zqcs_timer_count1;
always @(*) begin
	sdram_cmd_valid <= 1'd0;
	sdram_cmd_last <= 1'd0;
	sdram_zqcs_executer_start <= 1'd0;
	subfragments_refresher_next_state <= 2'd0;
	sdram_sequencer_start0 <= 1'd0;
	subfragments_refresher_next_state <= subfragments_refresher_state;
	case (subfragments_refresher_state)
		1'd1: begin
			sdram_cmd_valid <= 1'd1;
			if (sdram_cmd_ready) begin
				sdram_sequencer_start0 <= 1'd1;
				subfragments_refresher_next_state <= 2'd2;
			end
		end
		2'd2: begin
			sdram_cmd_valid <= 1'd1;
			if (sdram_sequencer_done0) begin
				if (sdram_wants_zqcs) begin
					sdram_zqcs_executer_start <= 1'd1;
					subfragments_refresher_next_state <= 2'd3;
				end else begin
					sdram_cmd_valid <= 1'd0;
					sdram_cmd_last <= 1'd1;
					subfragments_refresher_next_state <= 1'd0;
				end
			end
		end
		2'd3: begin
			sdram_cmd_valid <= 1'd1;
			if (sdram_zqcs_executer_done) begin
				sdram_cmd_valid <= 1'd0;
				sdram_cmd_last <= 1'd1;
				subfragments_refresher_next_state <= 1'd0;
			end
		end
		default: begin
			if (1'd1) begin
				if (sdram_wants_refresh) begin
					subfragments_refresher_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign sdram_bankmachine0_cmd_buffer_lookahead_sink_valid = sdram_bankmachine0_req_valid;
assign sdram_bankmachine0_req_ready = sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine0_req_we;
assign sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine0_req_addr;
assign sdram_bankmachine0_cmd_buffer_sink_valid = sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_ready = sdram_bankmachine0_cmd_buffer_sink_ready;
assign sdram_bankmachine0_cmd_buffer_sink_first = sdram_bankmachine0_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine0_cmd_buffer_sink_last = sdram_bankmachine0_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine0_cmd_buffer_sink_payload_we = sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine0_cmd_buffer_sink_payload_addr = sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine0_cmd_buffer_source_ready = (sdram_bankmachine0_req_wdata_ready | sdram_bankmachine0_req_rdata_valid);
assign sdram_bankmachine0_req_lock = (sdram_bankmachine0_cmd_buffer_lookahead_source_valid | sdram_bankmachine0_cmd_buffer_source_valid);
assign sdram_bankmachine0_row_hit = (sdram_bankmachine0_row == sdram_bankmachine0_cmd_buffer_source_payload_addr[19:7]);
assign sdram_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
	sdram_bankmachine0_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine0_row_col_n_addr_sel) begin
		sdram_bankmachine0_cmd_payload_a <= sdram_bankmachine0_cmd_buffer_source_payload_addr[19:7];
	end else begin
		sdram_bankmachine0_cmd_payload_a <= ((sdram_bankmachine0_auto_precharge <<< 4'd10) | {sdram_bankmachine0_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign sdram_bankmachine0_twtpcon_valid = ((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_ready) & sdram_bankmachine0_cmd_payload_is_write);
assign sdram_bankmachine0_trccon_valid = ((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_ready) & sdram_bankmachine0_row_open);
assign sdram_bankmachine0_trascon_valid = ((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_ready) & sdram_bankmachine0_row_open);
always @(*) begin
	sdram_bankmachine0_auto_precharge <= 1'd0;
	if ((sdram_bankmachine0_cmd_buffer_lookahead_source_valid & sdram_bankmachine0_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr[19:7] != sdram_bankmachine0_cmd_buffer_source_payload_addr[19:7])) begin
			sdram_bankmachine0_auto_precharge <= (sdram_bankmachine0_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din = {sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
assign sdram_bankmachine0_cmd_buffer_lookahead_sink_ready = sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we = sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine0_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine0_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_valid = sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_first = sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_last = sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re = sdram_bankmachine0_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine0_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine0_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine0_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
assign sdram_bankmachine0_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & (sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable | sdram_bankmachine0_cmd_buffer_lookahead_replace));
assign sdram_bankmachine0_cmd_buffer_lookahead_do_read = (sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable & sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re);
assign sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine0_cmd_buffer_lookahead_consume;
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout = sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable = (sdram_bankmachine0_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable = (sdram_bankmachine0_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine0_cmd_buffer_sink_ready = ((~sdram_bankmachine0_cmd_buffer_source_valid) | sdram_bankmachine0_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine0_row_open <= 1'd0;
	sdram_bankmachine0_row_close <= 1'd0;
	sdram_bankmachine0_cmd_payload_cas <= 1'd0;
	sdram_bankmachine0_cmd_payload_ras <= 1'd0;
	sdram_bankmachine0_cmd_payload_we <= 1'd0;
	sdram_bankmachine0_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine0_cmd_payload_is_cmd <= 1'd0;
	sdram_bankmachine0_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine0_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine0_req_wdata_ready <= 1'd0;
	sdram_bankmachine0_req_rdata_valid <= 1'd0;
	sdram_bankmachine0_refresh_gnt <= 1'd0;
	sdram_bankmachine0_cmd_valid <= 1'd0;
	subfragments_bankmachine0_next_state <= 3'd0;
	subfragments_bankmachine0_next_state <= subfragments_bankmachine0_state;
	case (subfragments_bankmachine0_state)
		1'd1: begin
			if ((sdram_bankmachine0_twtpcon_ready & sdram_bankmachine0_trascon_ready)) begin
				sdram_bankmachine0_cmd_valid <= 1'd1;
				if (sdram_bankmachine0_cmd_ready) begin
					subfragments_bankmachine0_next_state <= 3'd5;
				end
				sdram_bankmachine0_cmd_payload_ras <= 1'd1;
				sdram_bankmachine0_cmd_payload_we <= 1'd1;
				sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine0_twtpcon_ready & sdram_bankmachine0_trascon_ready)) begin
				subfragments_bankmachine0_next_state <= 3'd5;
			end
			sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine0_trccon_ready) begin
				sdram_bankmachine0_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine0_row_open <= 1'd1;
				sdram_bankmachine0_cmd_valid <= 1'd1;
				sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine0_cmd_ready) begin
					subfragments_bankmachine0_next_state <= 3'd6;
				end
				sdram_bankmachine0_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine0_twtpcon_ready) begin
				sdram_bankmachine0_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine0_row_close <= 1'd1;
			sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine0_refresh_req)) begin
				subfragments_bankmachine0_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine0_next_state <= 2'd3;
		end
		3'd6: begin
			subfragments_bankmachine0_next_state <= 1'd0;
		end
		default: begin
			if (sdram_bankmachine0_refresh_req) begin
				subfragments_bankmachine0_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (sdram_bankmachine0_row_opened) begin
						if (sdram_bankmachine0_row_hit) begin
							sdram_bankmachine0_cmd_valid <= 1'd1;
							if (sdram_bankmachine0_cmd_buffer_source_payload_we) begin
								sdram_bankmachine0_req_wdata_ready <= sdram_bankmachine0_cmd_ready;
								sdram_bankmachine0_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine0_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine0_req_rdata_valid <= sdram_bankmachine0_cmd_ready;
								sdram_bankmachine0_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine0_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine0_cmd_ready & sdram_bankmachine0_auto_precharge)) begin
								subfragments_bankmachine0_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine0_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine0_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine1_cmd_buffer_lookahead_sink_valid = sdram_bankmachine1_req_valid;
assign sdram_bankmachine1_req_ready = sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine1_req_we;
assign sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine1_req_addr;
assign sdram_bankmachine1_cmd_buffer_sink_valid = sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_ready = sdram_bankmachine1_cmd_buffer_sink_ready;
assign sdram_bankmachine1_cmd_buffer_sink_first = sdram_bankmachine1_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine1_cmd_buffer_sink_last = sdram_bankmachine1_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine1_cmd_buffer_sink_payload_we = sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine1_cmd_buffer_sink_payload_addr = sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine1_cmd_buffer_source_ready = (sdram_bankmachine1_req_wdata_ready | sdram_bankmachine1_req_rdata_valid);
assign sdram_bankmachine1_req_lock = (sdram_bankmachine1_cmd_buffer_lookahead_source_valid | sdram_bankmachine1_cmd_buffer_source_valid);
assign sdram_bankmachine1_row_hit = (sdram_bankmachine1_row == sdram_bankmachine1_cmd_buffer_source_payload_addr[19:7]);
assign sdram_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
	sdram_bankmachine1_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine1_row_col_n_addr_sel) begin
		sdram_bankmachine1_cmd_payload_a <= sdram_bankmachine1_cmd_buffer_source_payload_addr[19:7];
	end else begin
		sdram_bankmachine1_cmd_payload_a <= ((sdram_bankmachine1_auto_precharge <<< 4'd10) | {sdram_bankmachine1_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign sdram_bankmachine1_twtpcon_valid = ((sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_ready) & sdram_bankmachine1_cmd_payload_is_write);
assign sdram_bankmachine1_trccon_valid = ((sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_ready) & sdram_bankmachine1_row_open);
assign sdram_bankmachine1_trascon_valid = ((sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_ready) & sdram_bankmachine1_row_open);
always @(*) begin
	sdram_bankmachine1_auto_precharge <= 1'd0;
	if ((sdram_bankmachine1_cmd_buffer_lookahead_source_valid & sdram_bankmachine1_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr[19:7] != sdram_bankmachine1_cmd_buffer_source_payload_addr[19:7])) begin
			sdram_bankmachine1_auto_precharge <= (sdram_bankmachine1_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din = {sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
assign sdram_bankmachine1_cmd_buffer_lookahead_sink_ready = sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we = sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine1_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine1_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_valid = sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_first = sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_last = sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re = sdram_bankmachine1_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine1_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine1_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine1_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
assign sdram_bankmachine1_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & (sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable | sdram_bankmachine1_cmd_buffer_lookahead_replace));
assign sdram_bankmachine1_cmd_buffer_lookahead_do_read = (sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable & sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re);
assign sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine1_cmd_buffer_lookahead_consume;
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout = sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable = (sdram_bankmachine1_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable = (sdram_bankmachine1_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine1_cmd_buffer_sink_ready = ((~sdram_bankmachine1_cmd_buffer_source_valid) | sdram_bankmachine1_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine1_row_open <= 1'd0;
	sdram_bankmachine1_row_close <= 1'd0;
	sdram_bankmachine1_cmd_payload_cas <= 1'd0;
	sdram_bankmachine1_cmd_payload_ras <= 1'd0;
	sdram_bankmachine1_cmd_payload_we <= 1'd0;
	sdram_bankmachine1_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine1_cmd_payload_is_cmd <= 1'd0;
	sdram_bankmachine1_refresh_gnt <= 1'd0;
	sdram_bankmachine1_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine1_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine1_req_wdata_ready <= 1'd0;
	sdram_bankmachine1_req_rdata_valid <= 1'd0;
	subfragments_bankmachine1_next_state <= 3'd0;
	sdram_bankmachine1_cmd_valid <= 1'd0;
	subfragments_bankmachine1_next_state <= subfragments_bankmachine1_state;
	case (subfragments_bankmachine1_state)
		1'd1: begin
			if ((sdram_bankmachine1_twtpcon_ready & sdram_bankmachine1_trascon_ready)) begin
				sdram_bankmachine1_cmd_valid <= 1'd1;
				if (sdram_bankmachine1_cmd_ready) begin
					subfragments_bankmachine1_next_state <= 3'd5;
				end
				sdram_bankmachine1_cmd_payload_ras <= 1'd1;
				sdram_bankmachine1_cmd_payload_we <= 1'd1;
				sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine1_twtpcon_ready & sdram_bankmachine1_trascon_ready)) begin
				subfragments_bankmachine1_next_state <= 3'd5;
			end
			sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine1_trccon_ready) begin
				sdram_bankmachine1_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine1_row_open <= 1'd1;
				sdram_bankmachine1_cmd_valid <= 1'd1;
				sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine1_cmd_ready) begin
					subfragments_bankmachine1_next_state <= 3'd6;
				end
				sdram_bankmachine1_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine1_twtpcon_ready) begin
				sdram_bankmachine1_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine1_row_close <= 1'd1;
			sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine1_refresh_req)) begin
				subfragments_bankmachine1_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine1_next_state <= 2'd3;
		end
		3'd6: begin
			subfragments_bankmachine1_next_state <= 1'd0;
		end
		default: begin
			if (sdram_bankmachine1_refresh_req) begin
				subfragments_bankmachine1_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (sdram_bankmachine1_row_opened) begin
						if (sdram_bankmachine1_row_hit) begin
							sdram_bankmachine1_cmd_valid <= 1'd1;
							if (sdram_bankmachine1_cmd_buffer_source_payload_we) begin
								sdram_bankmachine1_req_wdata_ready <= sdram_bankmachine1_cmd_ready;
								sdram_bankmachine1_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine1_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine1_req_rdata_valid <= sdram_bankmachine1_cmd_ready;
								sdram_bankmachine1_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine1_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine1_cmd_ready & sdram_bankmachine1_auto_precharge)) begin
								subfragments_bankmachine1_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine1_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine1_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine2_cmd_buffer_lookahead_sink_valid = sdram_bankmachine2_req_valid;
assign sdram_bankmachine2_req_ready = sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine2_req_we;
assign sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine2_req_addr;
assign sdram_bankmachine2_cmd_buffer_sink_valid = sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_ready = sdram_bankmachine2_cmd_buffer_sink_ready;
assign sdram_bankmachine2_cmd_buffer_sink_first = sdram_bankmachine2_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine2_cmd_buffer_sink_last = sdram_bankmachine2_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine2_cmd_buffer_sink_payload_we = sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine2_cmd_buffer_sink_payload_addr = sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine2_cmd_buffer_source_ready = (sdram_bankmachine2_req_wdata_ready | sdram_bankmachine2_req_rdata_valid);
assign sdram_bankmachine2_req_lock = (sdram_bankmachine2_cmd_buffer_lookahead_source_valid | sdram_bankmachine2_cmd_buffer_source_valid);
assign sdram_bankmachine2_row_hit = (sdram_bankmachine2_row == sdram_bankmachine2_cmd_buffer_source_payload_addr[19:7]);
assign sdram_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
	sdram_bankmachine2_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine2_row_col_n_addr_sel) begin
		sdram_bankmachine2_cmd_payload_a <= sdram_bankmachine2_cmd_buffer_source_payload_addr[19:7];
	end else begin
		sdram_bankmachine2_cmd_payload_a <= ((sdram_bankmachine2_auto_precharge <<< 4'd10) | {sdram_bankmachine2_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign sdram_bankmachine2_twtpcon_valid = ((sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_ready) & sdram_bankmachine2_cmd_payload_is_write);
assign sdram_bankmachine2_trccon_valid = ((sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_ready) & sdram_bankmachine2_row_open);
assign sdram_bankmachine2_trascon_valid = ((sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_ready) & sdram_bankmachine2_row_open);
always @(*) begin
	sdram_bankmachine2_auto_precharge <= 1'd0;
	if ((sdram_bankmachine2_cmd_buffer_lookahead_source_valid & sdram_bankmachine2_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr[19:7] != sdram_bankmachine2_cmd_buffer_source_payload_addr[19:7])) begin
			sdram_bankmachine2_auto_precharge <= (sdram_bankmachine2_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din = {sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
assign sdram_bankmachine2_cmd_buffer_lookahead_sink_ready = sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we = sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine2_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine2_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_valid = sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_first = sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_last = sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re = sdram_bankmachine2_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine2_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine2_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine2_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
assign sdram_bankmachine2_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & (sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable | sdram_bankmachine2_cmd_buffer_lookahead_replace));
assign sdram_bankmachine2_cmd_buffer_lookahead_do_read = (sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable & sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re);
assign sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine2_cmd_buffer_lookahead_consume;
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout = sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable = (sdram_bankmachine2_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable = (sdram_bankmachine2_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine2_cmd_buffer_sink_ready = ((~sdram_bankmachine2_cmd_buffer_source_valid) | sdram_bankmachine2_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine2_row_open <= 1'd0;
	sdram_bankmachine2_row_close <= 1'd0;
	sdram_bankmachine2_cmd_payload_cas <= 1'd0;
	sdram_bankmachine2_cmd_payload_ras <= 1'd0;
	sdram_bankmachine2_cmd_payload_we <= 1'd0;
	sdram_bankmachine2_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine2_cmd_payload_is_cmd <= 1'd0;
	sdram_bankmachine2_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine2_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine2_req_wdata_ready <= 1'd0;
	subfragments_bankmachine2_next_state <= 3'd0;
	sdram_bankmachine2_req_rdata_valid <= 1'd0;
	sdram_bankmachine2_refresh_gnt <= 1'd0;
	sdram_bankmachine2_cmd_valid <= 1'd0;
	subfragments_bankmachine2_next_state <= subfragments_bankmachine2_state;
	case (subfragments_bankmachine2_state)
		1'd1: begin
			if ((sdram_bankmachine2_twtpcon_ready & sdram_bankmachine2_trascon_ready)) begin
				sdram_bankmachine2_cmd_valid <= 1'd1;
				if (sdram_bankmachine2_cmd_ready) begin
					subfragments_bankmachine2_next_state <= 3'd5;
				end
				sdram_bankmachine2_cmd_payload_ras <= 1'd1;
				sdram_bankmachine2_cmd_payload_we <= 1'd1;
				sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine2_twtpcon_ready & sdram_bankmachine2_trascon_ready)) begin
				subfragments_bankmachine2_next_state <= 3'd5;
			end
			sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine2_trccon_ready) begin
				sdram_bankmachine2_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine2_row_open <= 1'd1;
				sdram_bankmachine2_cmd_valid <= 1'd1;
				sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine2_cmd_ready) begin
					subfragments_bankmachine2_next_state <= 3'd6;
				end
				sdram_bankmachine2_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine2_twtpcon_ready) begin
				sdram_bankmachine2_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine2_row_close <= 1'd1;
			sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine2_refresh_req)) begin
				subfragments_bankmachine2_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine2_next_state <= 2'd3;
		end
		3'd6: begin
			subfragments_bankmachine2_next_state <= 1'd0;
		end
		default: begin
			if (sdram_bankmachine2_refresh_req) begin
				subfragments_bankmachine2_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (sdram_bankmachine2_row_opened) begin
						if (sdram_bankmachine2_row_hit) begin
							sdram_bankmachine2_cmd_valid <= 1'd1;
							if (sdram_bankmachine2_cmd_buffer_source_payload_we) begin
								sdram_bankmachine2_req_wdata_ready <= sdram_bankmachine2_cmd_ready;
								sdram_bankmachine2_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine2_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine2_req_rdata_valid <= sdram_bankmachine2_cmd_ready;
								sdram_bankmachine2_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine2_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine2_cmd_ready & sdram_bankmachine2_auto_precharge)) begin
								subfragments_bankmachine2_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine2_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine2_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine3_cmd_buffer_lookahead_sink_valid = sdram_bankmachine3_req_valid;
assign sdram_bankmachine3_req_ready = sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine3_req_we;
assign sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine3_req_addr;
assign sdram_bankmachine3_cmd_buffer_sink_valid = sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_ready = sdram_bankmachine3_cmd_buffer_sink_ready;
assign sdram_bankmachine3_cmd_buffer_sink_first = sdram_bankmachine3_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine3_cmd_buffer_sink_last = sdram_bankmachine3_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine3_cmd_buffer_sink_payload_we = sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine3_cmd_buffer_sink_payload_addr = sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine3_cmd_buffer_source_ready = (sdram_bankmachine3_req_wdata_ready | sdram_bankmachine3_req_rdata_valid);
assign sdram_bankmachine3_req_lock = (sdram_bankmachine3_cmd_buffer_lookahead_source_valid | sdram_bankmachine3_cmd_buffer_source_valid);
assign sdram_bankmachine3_row_hit = (sdram_bankmachine3_row == sdram_bankmachine3_cmd_buffer_source_payload_addr[19:7]);
assign sdram_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
	sdram_bankmachine3_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine3_row_col_n_addr_sel) begin
		sdram_bankmachine3_cmd_payload_a <= sdram_bankmachine3_cmd_buffer_source_payload_addr[19:7];
	end else begin
		sdram_bankmachine3_cmd_payload_a <= ((sdram_bankmachine3_auto_precharge <<< 4'd10) | {sdram_bankmachine3_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign sdram_bankmachine3_twtpcon_valid = ((sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_ready) & sdram_bankmachine3_cmd_payload_is_write);
assign sdram_bankmachine3_trccon_valid = ((sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_ready) & sdram_bankmachine3_row_open);
assign sdram_bankmachine3_trascon_valid = ((sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_ready) & sdram_bankmachine3_row_open);
always @(*) begin
	sdram_bankmachine3_auto_precharge <= 1'd0;
	if ((sdram_bankmachine3_cmd_buffer_lookahead_source_valid & sdram_bankmachine3_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr[19:7] != sdram_bankmachine3_cmd_buffer_source_payload_addr[19:7])) begin
			sdram_bankmachine3_auto_precharge <= (sdram_bankmachine3_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din = {sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
assign sdram_bankmachine3_cmd_buffer_lookahead_sink_ready = sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we = sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine3_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine3_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_valid = sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_first = sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_last = sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re = sdram_bankmachine3_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine3_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine3_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine3_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
assign sdram_bankmachine3_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & (sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable | sdram_bankmachine3_cmd_buffer_lookahead_replace));
assign sdram_bankmachine3_cmd_buffer_lookahead_do_read = (sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable & sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re);
assign sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine3_cmd_buffer_lookahead_consume;
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout = sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable = (sdram_bankmachine3_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable = (sdram_bankmachine3_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine3_cmd_buffer_sink_ready = ((~sdram_bankmachine3_cmd_buffer_source_valid) | sdram_bankmachine3_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine3_row_open <= 1'd0;
	sdram_bankmachine3_row_close <= 1'd0;
	sdram_bankmachine3_cmd_payload_cas <= 1'd0;
	sdram_bankmachine3_cmd_payload_ras <= 1'd0;
	sdram_bankmachine3_cmd_payload_we <= 1'd0;
	sdram_bankmachine3_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine3_cmd_payload_is_cmd <= 1'd0;
	sdram_bankmachine3_cmd_payload_is_read <= 1'd0;
	subfragments_bankmachine3_next_state <= 3'd0;
	sdram_bankmachine3_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine3_req_wdata_ready <= 1'd0;
	sdram_bankmachine3_req_rdata_valid <= 1'd0;
	sdram_bankmachine3_refresh_gnt <= 1'd0;
	sdram_bankmachine3_cmd_valid <= 1'd0;
	subfragments_bankmachine3_next_state <= subfragments_bankmachine3_state;
	case (subfragments_bankmachine3_state)
		1'd1: begin
			if ((sdram_bankmachine3_twtpcon_ready & sdram_bankmachine3_trascon_ready)) begin
				sdram_bankmachine3_cmd_valid <= 1'd1;
				if (sdram_bankmachine3_cmd_ready) begin
					subfragments_bankmachine3_next_state <= 3'd5;
				end
				sdram_bankmachine3_cmd_payload_ras <= 1'd1;
				sdram_bankmachine3_cmd_payload_we <= 1'd1;
				sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine3_twtpcon_ready & sdram_bankmachine3_trascon_ready)) begin
				subfragments_bankmachine3_next_state <= 3'd5;
			end
			sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine3_trccon_ready) begin
				sdram_bankmachine3_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine3_row_open <= 1'd1;
				sdram_bankmachine3_cmd_valid <= 1'd1;
				sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine3_cmd_ready) begin
					subfragments_bankmachine3_next_state <= 3'd6;
				end
				sdram_bankmachine3_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine3_twtpcon_ready) begin
				sdram_bankmachine3_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine3_row_close <= 1'd1;
			sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine3_refresh_req)) begin
				subfragments_bankmachine3_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine3_next_state <= 2'd3;
		end
		3'd6: begin
			subfragments_bankmachine3_next_state <= 1'd0;
		end
		default: begin
			if (sdram_bankmachine3_refresh_req) begin
				subfragments_bankmachine3_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (sdram_bankmachine3_row_opened) begin
						if (sdram_bankmachine3_row_hit) begin
							sdram_bankmachine3_cmd_valid <= 1'd1;
							if (sdram_bankmachine3_cmd_buffer_source_payload_we) begin
								sdram_bankmachine3_req_wdata_ready <= sdram_bankmachine3_cmd_ready;
								sdram_bankmachine3_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine3_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine3_req_rdata_valid <= sdram_bankmachine3_cmd_ready;
								sdram_bankmachine3_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine3_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine3_cmd_ready & sdram_bankmachine3_auto_precharge)) begin
								subfragments_bankmachine3_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine3_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine3_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine4_cmd_buffer_lookahead_sink_valid = sdram_bankmachine4_req_valid;
assign sdram_bankmachine4_req_ready = sdram_bankmachine4_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine4_req_we;
assign sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine4_req_addr;
assign sdram_bankmachine4_cmd_buffer_sink_valid = sdram_bankmachine4_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine4_cmd_buffer_lookahead_source_ready = sdram_bankmachine4_cmd_buffer_sink_ready;
assign sdram_bankmachine4_cmd_buffer_sink_first = sdram_bankmachine4_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine4_cmd_buffer_sink_last = sdram_bankmachine4_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine4_cmd_buffer_sink_payload_we = sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine4_cmd_buffer_sink_payload_addr = sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine4_cmd_buffer_source_ready = (sdram_bankmachine4_req_wdata_ready | sdram_bankmachine4_req_rdata_valid);
assign sdram_bankmachine4_req_lock = (sdram_bankmachine4_cmd_buffer_lookahead_source_valid | sdram_bankmachine4_cmd_buffer_source_valid);
assign sdram_bankmachine4_row_hit = (sdram_bankmachine4_row == sdram_bankmachine4_cmd_buffer_source_payload_addr[19:7]);
assign sdram_bankmachine4_cmd_payload_ba = 3'd4;
always @(*) begin
	sdram_bankmachine4_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine4_row_col_n_addr_sel) begin
		sdram_bankmachine4_cmd_payload_a <= sdram_bankmachine4_cmd_buffer_source_payload_addr[19:7];
	end else begin
		sdram_bankmachine4_cmd_payload_a <= ((sdram_bankmachine4_auto_precharge <<< 4'd10) | {sdram_bankmachine4_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign sdram_bankmachine4_twtpcon_valid = ((sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_ready) & sdram_bankmachine4_cmd_payload_is_write);
assign sdram_bankmachine4_trccon_valid = ((sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_ready) & sdram_bankmachine4_row_open);
assign sdram_bankmachine4_trascon_valid = ((sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_ready) & sdram_bankmachine4_row_open);
always @(*) begin
	sdram_bankmachine4_auto_precharge <= 1'd0;
	if ((sdram_bankmachine4_cmd_buffer_lookahead_source_valid & sdram_bankmachine4_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr[19:7] != sdram_bankmachine4_cmd_buffer_source_payload_addr[19:7])) begin
			sdram_bankmachine4_auto_precharge <= (sdram_bankmachine4_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din = {sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
assign sdram_bankmachine4_cmd_buffer_lookahead_sink_ready = sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable;
assign sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we = sdram_bankmachine4_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine4_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine4_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine4_cmd_buffer_lookahead_source_valid = sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable;
assign sdram_bankmachine4_cmd_buffer_lookahead_source_first = sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine4_cmd_buffer_lookahead_source_last = sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re = sdram_bankmachine4_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine4_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine4_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine4_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din;
assign sdram_bankmachine4_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & (sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable | sdram_bankmachine4_cmd_buffer_lookahead_replace));
assign sdram_bankmachine4_cmd_buffer_lookahead_do_read = (sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable & sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re);
assign sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine4_cmd_buffer_lookahead_consume;
assign sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout = sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable = (sdram_bankmachine4_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable = (sdram_bankmachine4_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine4_cmd_buffer_sink_ready = ((~sdram_bankmachine4_cmd_buffer_source_valid) | sdram_bankmachine4_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine4_row_open <= 1'd0;
	sdram_bankmachine4_row_close <= 1'd0;
	sdram_bankmachine4_cmd_payload_cas <= 1'd0;
	sdram_bankmachine4_cmd_payload_ras <= 1'd0;
	sdram_bankmachine4_cmd_payload_we <= 1'd0;
	sdram_bankmachine4_row_col_n_addr_sel <= 1'd0;
	subfragments_bankmachine4_next_state <= 3'd0;
	sdram_bankmachine4_cmd_payload_is_cmd <= 1'd0;
	sdram_bankmachine4_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine4_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine4_req_wdata_ready <= 1'd0;
	sdram_bankmachine4_req_rdata_valid <= 1'd0;
	sdram_bankmachine4_refresh_gnt <= 1'd0;
	sdram_bankmachine4_cmd_valid <= 1'd0;
	subfragments_bankmachine4_next_state <= subfragments_bankmachine4_state;
	case (subfragments_bankmachine4_state)
		1'd1: begin
			if ((sdram_bankmachine4_twtpcon_ready & sdram_bankmachine4_trascon_ready)) begin
				sdram_bankmachine4_cmd_valid <= 1'd1;
				if (sdram_bankmachine4_cmd_ready) begin
					subfragments_bankmachine4_next_state <= 3'd5;
				end
				sdram_bankmachine4_cmd_payload_ras <= 1'd1;
				sdram_bankmachine4_cmd_payload_we <= 1'd1;
				sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine4_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine4_twtpcon_ready & sdram_bankmachine4_trascon_ready)) begin
				subfragments_bankmachine4_next_state <= 3'd5;
			end
			sdram_bankmachine4_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine4_trccon_ready) begin
				sdram_bankmachine4_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine4_row_open <= 1'd1;
				sdram_bankmachine4_cmd_valid <= 1'd1;
				sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine4_cmd_ready) begin
					subfragments_bankmachine4_next_state <= 3'd6;
				end
				sdram_bankmachine4_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine4_twtpcon_ready) begin
				sdram_bankmachine4_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine4_row_close <= 1'd1;
			sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine4_refresh_req)) begin
				subfragments_bankmachine4_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine4_next_state <= 2'd3;
		end
		3'd6: begin
			subfragments_bankmachine4_next_state <= 1'd0;
		end
		default: begin
			if (sdram_bankmachine4_refresh_req) begin
				subfragments_bankmachine4_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (sdram_bankmachine4_row_opened) begin
						if (sdram_bankmachine4_row_hit) begin
							sdram_bankmachine4_cmd_valid <= 1'd1;
							if (sdram_bankmachine4_cmd_buffer_source_payload_we) begin
								sdram_bankmachine4_req_wdata_ready <= sdram_bankmachine4_cmd_ready;
								sdram_bankmachine4_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine4_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine4_req_rdata_valid <= sdram_bankmachine4_cmd_ready;
								sdram_bankmachine4_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine4_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine4_cmd_ready & sdram_bankmachine4_auto_precharge)) begin
								subfragments_bankmachine4_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine4_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine4_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine5_cmd_buffer_lookahead_sink_valid = sdram_bankmachine5_req_valid;
assign sdram_bankmachine5_req_ready = sdram_bankmachine5_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine5_req_we;
assign sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine5_req_addr;
assign sdram_bankmachine5_cmd_buffer_sink_valid = sdram_bankmachine5_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine5_cmd_buffer_lookahead_source_ready = sdram_bankmachine5_cmd_buffer_sink_ready;
assign sdram_bankmachine5_cmd_buffer_sink_first = sdram_bankmachine5_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine5_cmd_buffer_sink_last = sdram_bankmachine5_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine5_cmd_buffer_sink_payload_we = sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine5_cmd_buffer_sink_payload_addr = sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine5_cmd_buffer_source_ready = (sdram_bankmachine5_req_wdata_ready | sdram_bankmachine5_req_rdata_valid);
assign sdram_bankmachine5_req_lock = (sdram_bankmachine5_cmd_buffer_lookahead_source_valid | sdram_bankmachine5_cmd_buffer_source_valid);
assign sdram_bankmachine5_row_hit = (sdram_bankmachine5_row == sdram_bankmachine5_cmd_buffer_source_payload_addr[19:7]);
assign sdram_bankmachine5_cmd_payload_ba = 3'd5;
always @(*) begin
	sdram_bankmachine5_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine5_row_col_n_addr_sel) begin
		sdram_bankmachine5_cmd_payload_a <= sdram_bankmachine5_cmd_buffer_source_payload_addr[19:7];
	end else begin
		sdram_bankmachine5_cmd_payload_a <= ((sdram_bankmachine5_auto_precharge <<< 4'd10) | {sdram_bankmachine5_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign sdram_bankmachine5_twtpcon_valid = ((sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_ready) & sdram_bankmachine5_cmd_payload_is_write);
assign sdram_bankmachine5_trccon_valid = ((sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_ready) & sdram_bankmachine5_row_open);
assign sdram_bankmachine5_trascon_valid = ((sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_ready) & sdram_bankmachine5_row_open);
always @(*) begin
	sdram_bankmachine5_auto_precharge <= 1'd0;
	if ((sdram_bankmachine5_cmd_buffer_lookahead_source_valid & sdram_bankmachine5_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr[19:7] != sdram_bankmachine5_cmd_buffer_source_payload_addr[19:7])) begin
			sdram_bankmachine5_auto_precharge <= (sdram_bankmachine5_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din = {sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
assign sdram_bankmachine5_cmd_buffer_lookahead_sink_ready = sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable;
assign sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we = sdram_bankmachine5_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine5_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine5_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine5_cmd_buffer_lookahead_source_valid = sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable;
assign sdram_bankmachine5_cmd_buffer_lookahead_source_first = sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine5_cmd_buffer_lookahead_source_last = sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re = sdram_bankmachine5_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine5_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine5_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine5_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din;
assign sdram_bankmachine5_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & (sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable | sdram_bankmachine5_cmd_buffer_lookahead_replace));
assign sdram_bankmachine5_cmd_buffer_lookahead_do_read = (sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable & sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re);
assign sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine5_cmd_buffer_lookahead_consume;
assign sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout = sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable = (sdram_bankmachine5_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable = (sdram_bankmachine5_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine5_cmd_buffer_sink_ready = ((~sdram_bankmachine5_cmd_buffer_source_valid) | sdram_bankmachine5_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine5_row_open <= 1'd0;
	sdram_bankmachine5_row_close <= 1'd0;
	sdram_bankmachine5_cmd_payload_cas <= 1'd0;
	subfragments_bankmachine5_next_state <= 3'd0;
	sdram_bankmachine5_cmd_payload_ras <= 1'd0;
	sdram_bankmachine5_cmd_payload_we <= 1'd0;
	sdram_bankmachine5_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine5_cmd_payload_is_cmd <= 1'd0;
	sdram_bankmachine5_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine5_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine5_req_wdata_ready <= 1'd0;
	sdram_bankmachine5_req_rdata_valid <= 1'd0;
	sdram_bankmachine5_refresh_gnt <= 1'd0;
	sdram_bankmachine5_cmd_valid <= 1'd0;
	subfragments_bankmachine5_next_state <= subfragments_bankmachine5_state;
	case (subfragments_bankmachine5_state)
		1'd1: begin
			if ((sdram_bankmachine5_twtpcon_ready & sdram_bankmachine5_trascon_ready)) begin
				sdram_bankmachine5_cmd_valid <= 1'd1;
				if (sdram_bankmachine5_cmd_ready) begin
					subfragments_bankmachine5_next_state <= 3'd5;
				end
				sdram_bankmachine5_cmd_payload_ras <= 1'd1;
				sdram_bankmachine5_cmd_payload_we <= 1'd1;
				sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine5_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine5_twtpcon_ready & sdram_bankmachine5_trascon_ready)) begin
				subfragments_bankmachine5_next_state <= 3'd5;
			end
			sdram_bankmachine5_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine5_trccon_ready) begin
				sdram_bankmachine5_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine5_row_open <= 1'd1;
				sdram_bankmachine5_cmd_valid <= 1'd1;
				sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine5_cmd_ready) begin
					subfragments_bankmachine5_next_state <= 3'd6;
				end
				sdram_bankmachine5_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine5_twtpcon_ready) begin
				sdram_bankmachine5_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine5_row_close <= 1'd1;
			sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine5_refresh_req)) begin
				subfragments_bankmachine5_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine5_next_state <= 2'd3;
		end
		3'd6: begin
			subfragments_bankmachine5_next_state <= 1'd0;
		end
		default: begin
			if (sdram_bankmachine5_refresh_req) begin
				subfragments_bankmachine5_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (sdram_bankmachine5_row_opened) begin
						if (sdram_bankmachine5_row_hit) begin
							sdram_bankmachine5_cmd_valid <= 1'd1;
							if (sdram_bankmachine5_cmd_buffer_source_payload_we) begin
								sdram_bankmachine5_req_wdata_ready <= sdram_bankmachine5_cmd_ready;
								sdram_bankmachine5_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine5_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine5_req_rdata_valid <= sdram_bankmachine5_cmd_ready;
								sdram_bankmachine5_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine5_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine5_cmd_ready & sdram_bankmachine5_auto_precharge)) begin
								subfragments_bankmachine5_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine5_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine5_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine6_cmd_buffer_lookahead_sink_valid = sdram_bankmachine6_req_valid;
assign sdram_bankmachine6_req_ready = sdram_bankmachine6_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine6_req_we;
assign sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine6_req_addr;
assign sdram_bankmachine6_cmd_buffer_sink_valid = sdram_bankmachine6_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine6_cmd_buffer_lookahead_source_ready = sdram_bankmachine6_cmd_buffer_sink_ready;
assign sdram_bankmachine6_cmd_buffer_sink_first = sdram_bankmachine6_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine6_cmd_buffer_sink_last = sdram_bankmachine6_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine6_cmd_buffer_sink_payload_we = sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine6_cmd_buffer_sink_payload_addr = sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine6_cmd_buffer_source_ready = (sdram_bankmachine6_req_wdata_ready | sdram_bankmachine6_req_rdata_valid);
assign sdram_bankmachine6_req_lock = (sdram_bankmachine6_cmd_buffer_lookahead_source_valid | sdram_bankmachine6_cmd_buffer_source_valid);
assign sdram_bankmachine6_row_hit = (sdram_bankmachine6_row == sdram_bankmachine6_cmd_buffer_source_payload_addr[19:7]);
assign sdram_bankmachine6_cmd_payload_ba = 3'd6;
always @(*) begin
	sdram_bankmachine6_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine6_row_col_n_addr_sel) begin
		sdram_bankmachine6_cmd_payload_a <= sdram_bankmachine6_cmd_buffer_source_payload_addr[19:7];
	end else begin
		sdram_bankmachine6_cmd_payload_a <= ((sdram_bankmachine6_auto_precharge <<< 4'd10) | {sdram_bankmachine6_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign sdram_bankmachine6_twtpcon_valid = ((sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_ready) & sdram_bankmachine6_cmd_payload_is_write);
assign sdram_bankmachine6_trccon_valid = ((sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_ready) & sdram_bankmachine6_row_open);
assign sdram_bankmachine6_trascon_valid = ((sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_ready) & sdram_bankmachine6_row_open);
always @(*) begin
	sdram_bankmachine6_auto_precharge <= 1'd0;
	if ((sdram_bankmachine6_cmd_buffer_lookahead_source_valid & sdram_bankmachine6_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr[19:7] != sdram_bankmachine6_cmd_buffer_source_payload_addr[19:7])) begin
			sdram_bankmachine6_auto_precharge <= (sdram_bankmachine6_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din = {sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
assign sdram_bankmachine6_cmd_buffer_lookahead_sink_ready = sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable;
assign sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we = sdram_bankmachine6_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine6_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine6_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine6_cmd_buffer_lookahead_source_valid = sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable;
assign sdram_bankmachine6_cmd_buffer_lookahead_source_first = sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine6_cmd_buffer_lookahead_source_last = sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re = sdram_bankmachine6_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine6_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine6_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine6_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din;
assign sdram_bankmachine6_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & (sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable | sdram_bankmachine6_cmd_buffer_lookahead_replace));
assign sdram_bankmachine6_cmd_buffer_lookahead_do_read = (sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable & sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re);
assign sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine6_cmd_buffer_lookahead_consume;
assign sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout = sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable = (sdram_bankmachine6_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable = (sdram_bankmachine6_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine6_cmd_buffer_sink_ready = ((~sdram_bankmachine6_cmd_buffer_source_valid) | sdram_bankmachine6_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine6_row_open <= 1'd0;
	sdram_bankmachine6_row_close <= 1'd0;
	subfragments_bankmachine6_next_state <= 3'd0;
	sdram_bankmachine6_cmd_payload_cas <= 1'd0;
	sdram_bankmachine6_cmd_payload_ras <= 1'd0;
	sdram_bankmachine6_cmd_payload_we <= 1'd0;
	sdram_bankmachine6_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine6_cmd_payload_is_cmd <= 1'd0;
	sdram_bankmachine6_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine6_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine6_req_wdata_ready <= 1'd0;
	sdram_bankmachine6_req_rdata_valid <= 1'd0;
	sdram_bankmachine6_refresh_gnt <= 1'd0;
	sdram_bankmachine6_cmd_valid <= 1'd0;
	subfragments_bankmachine6_next_state <= subfragments_bankmachine6_state;
	case (subfragments_bankmachine6_state)
		1'd1: begin
			if ((sdram_bankmachine6_twtpcon_ready & sdram_bankmachine6_trascon_ready)) begin
				sdram_bankmachine6_cmd_valid <= 1'd1;
				if (sdram_bankmachine6_cmd_ready) begin
					subfragments_bankmachine6_next_state <= 3'd5;
				end
				sdram_bankmachine6_cmd_payload_ras <= 1'd1;
				sdram_bankmachine6_cmd_payload_we <= 1'd1;
				sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine6_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine6_twtpcon_ready & sdram_bankmachine6_trascon_ready)) begin
				subfragments_bankmachine6_next_state <= 3'd5;
			end
			sdram_bankmachine6_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine6_trccon_ready) begin
				sdram_bankmachine6_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine6_row_open <= 1'd1;
				sdram_bankmachine6_cmd_valid <= 1'd1;
				sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine6_cmd_ready) begin
					subfragments_bankmachine6_next_state <= 3'd6;
				end
				sdram_bankmachine6_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine6_twtpcon_ready) begin
				sdram_bankmachine6_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine6_row_close <= 1'd1;
			sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine6_refresh_req)) begin
				subfragments_bankmachine6_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine6_next_state <= 2'd3;
		end
		3'd6: begin
			subfragments_bankmachine6_next_state <= 1'd0;
		end
		default: begin
			if (sdram_bankmachine6_refresh_req) begin
				subfragments_bankmachine6_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (sdram_bankmachine6_row_opened) begin
						if (sdram_bankmachine6_row_hit) begin
							sdram_bankmachine6_cmd_valid <= 1'd1;
							if (sdram_bankmachine6_cmd_buffer_source_payload_we) begin
								sdram_bankmachine6_req_wdata_ready <= sdram_bankmachine6_cmd_ready;
								sdram_bankmachine6_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine6_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine6_req_rdata_valid <= sdram_bankmachine6_cmd_ready;
								sdram_bankmachine6_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine6_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine6_cmd_ready & sdram_bankmachine6_auto_precharge)) begin
								subfragments_bankmachine6_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine6_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine6_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine7_cmd_buffer_lookahead_sink_valid = sdram_bankmachine7_req_valid;
assign sdram_bankmachine7_req_ready = sdram_bankmachine7_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine7_req_we;
assign sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine7_req_addr;
assign sdram_bankmachine7_cmd_buffer_sink_valid = sdram_bankmachine7_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine7_cmd_buffer_lookahead_source_ready = sdram_bankmachine7_cmd_buffer_sink_ready;
assign sdram_bankmachine7_cmd_buffer_sink_first = sdram_bankmachine7_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine7_cmd_buffer_sink_last = sdram_bankmachine7_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine7_cmd_buffer_sink_payload_we = sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine7_cmd_buffer_sink_payload_addr = sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine7_cmd_buffer_source_ready = (sdram_bankmachine7_req_wdata_ready | sdram_bankmachine7_req_rdata_valid);
assign sdram_bankmachine7_req_lock = (sdram_bankmachine7_cmd_buffer_lookahead_source_valid | sdram_bankmachine7_cmd_buffer_source_valid);
assign sdram_bankmachine7_row_hit = (sdram_bankmachine7_row == sdram_bankmachine7_cmd_buffer_source_payload_addr[19:7]);
assign sdram_bankmachine7_cmd_payload_ba = 3'd7;
always @(*) begin
	sdram_bankmachine7_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine7_row_col_n_addr_sel) begin
		sdram_bankmachine7_cmd_payload_a <= sdram_bankmachine7_cmd_buffer_source_payload_addr[19:7];
	end else begin
		sdram_bankmachine7_cmd_payload_a <= ((sdram_bankmachine7_auto_precharge <<< 4'd10) | {sdram_bankmachine7_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign sdram_bankmachine7_twtpcon_valid = ((sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_ready) & sdram_bankmachine7_cmd_payload_is_write);
assign sdram_bankmachine7_trccon_valid = ((sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_ready) & sdram_bankmachine7_row_open);
assign sdram_bankmachine7_trascon_valid = ((sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_ready) & sdram_bankmachine7_row_open);
always @(*) begin
	sdram_bankmachine7_auto_precharge <= 1'd0;
	if ((sdram_bankmachine7_cmd_buffer_lookahead_source_valid & sdram_bankmachine7_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr[19:7] != sdram_bankmachine7_cmd_buffer_source_payload_addr[19:7])) begin
			sdram_bankmachine7_auto_precharge <= (sdram_bankmachine7_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din = {sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
assign sdram_bankmachine7_cmd_buffer_lookahead_sink_ready = sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable;
assign sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we = sdram_bankmachine7_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine7_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine7_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine7_cmd_buffer_lookahead_source_valid = sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable;
assign sdram_bankmachine7_cmd_buffer_lookahead_source_first = sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine7_cmd_buffer_lookahead_source_last = sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re = sdram_bankmachine7_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine7_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine7_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine7_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din;
assign sdram_bankmachine7_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & (sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable | sdram_bankmachine7_cmd_buffer_lookahead_replace));
assign sdram_bankmachine7_cmd_buffer_lookahead_do_read = (sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable & sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re);
assign sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine7_cmd_buffer_lookahead_consume;
assign sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout = sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable = (sdram_bankmachine7_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable = (sdram_bankmachine7_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine7_cmd_buffer_sink_ready = ((~sdram_bankmachine7_cmd_buffer_source_valid) | sdram_bankmachine7_cmd_buffer_source_ready);
always @(*) begin
	subfragments_bankmachine7_next_state <= 3'd0;
	sdram_bankmachine7_row_open <= 1'd0;
	sdram_bankmachine7_row_close <= 1'd0;
	sdram_bankmachine7_cmd_payload_cas <= 1'd0;
	sdram_bankmachine7_cmd_payload_ras <= 1'd0;
	sdram_bankmachine7_cmd_payload_we <= 1'd0;
	sdram_bankmachine7_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine7_cmd_payload_is_cmd <= 1'd0;
	sdram_bankmachine7_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine7_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine7_req_wdata_ready <= 1'd0;
	sdram_bankmachine7_req_rdata_valid <= 1'd0;
	sdram_bankmachine7_refresh_gnt <= 1'd0;
	sdram_bankmachine7_cmd_valid <= 1'd0;
	subfragments_bankmachine7_next_state <= subfragments_bankmachine7_state;
	case (subfragments_bankmachine7_state)
		1'd1: begin
			if ((sdram_bankmachine7_twtpcon_ready & sdram_bankmachine7_trascon_ready)) begin
				sdram_bankmachine7_cmd_valid <= 1'd1;
				if (sdram_bankmachine7_cmd_ready) begin
					subfragments_bankmachine7_next_state <= 3'd5;
				end
				sdram_bankmachine7_cmd_payload_ras <= 1'd1;
				sdram_bankmachine7_cmd_payload_we <= 1'd1;
				sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine7_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine7_twtpcon_ready & sdram_bankmachine7_trascon_ready)) begin
				subfragments_bankmachine7_next_state <= 3'd5;
			end
			sdram_bankmachine7_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine7_trccon_ready) begin
				sdram_bankmachine7_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine7_row_open <= 1'd1;
				sdram_bankmachine7_cmd_valid <= 1'd1;
				sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine7_cmd_ready) begin
					subfragments_bankmachine7_next_state <= 3'd6;
				end
				sdram_bankmachine7_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine7_twtpcon_ready) begin
				sdram_bankmachine7_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine7_row_close <= 1'd1;
			sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine7_refresh_req)) begin
				subfragments_bankmachine7_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine7_next_state <= 2'd3;
		end
		3'd6: begin
			subfragments_bankmachine7_next_state <= 1'd0;
		end
		default: begin
			if (sdram_bankmachine7_refresh_req) begin
				subfragments_bankmachine7_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (sdram_bankmachine7_row_opened) begin
						if (sdram_bankmachine7_row_hit) begin
							sdram_bankmachine7_cmd_valid <= 1'd1;
							if (sdram_bankmachine7_cmd_buffer_source_payload_we) begin
								sdram_bankmachine7_req_wdata_ready <= sdram_bankmachine7_cmd_ready;
								sdram_bankmachine7_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine7_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine7_req_rdata_valid <= sdram_bankmachine7_cmd_ready;
								sdram_bankmachine7_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine7_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine7_cmd_ready & sdram_bankmachine7_auto_precharge)) begin
								subfragments_bankmachine7_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine7_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine7_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_trrdcon_valid = ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & ((sdram_choose_cmd_cmd_payload_ras & (~sdram_choose_cmd_cmd_payload_cas)) & (~sdram_choose_cmd_cmd_payload_we)));
assign sdram_tfawcon_valid = ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & ((sdram_choose_cmd_cmd_payload_ras & (~sdram_choose_cmd_cmd_payload_cas)) & (~sdram_choose_cmd_cmd_payload_we)));
assign sdram_ras_allowed = (sdram_trrdcon_ready & sdram_tfawcon_ready);
assign sdram_tccdcon_valid = ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_cmd_payload_is_write | sdram_choose_req_cmd_payload_is_read));
assign sdram_cas_allowed = sdram_tccdcon_ready;
assign sdram_twtrcon_valid = ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_write);
assign sdram_read_available = ((((((((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_payload_is_read) | (sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_payload_is_read)) | (sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_payload_is_read)) | (sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_payload_is_read)) | (sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_payload_is_read)) | (sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_payload_is_read)) | (sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_payload_is_read)) | (sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_payload_is_read));
assign sdram_write_available = ((((((((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_payload_is_write) | (sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_payload_is_write)) | (sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_payload_is_write)) | (sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_payload_is_write)) | (sdram_bankmachine4_cmd_valid & sdram_bankmachine4_cmd_payload_is_write)) | (sdram_bankmachine5_cmd_valid & sdram_bankmachine5_cmd_payload_is_write)) | (sdram_bankmachine6_cmd_valid & sdram_bankmachine6_cmd_payload_is_write)) | (sdram_bankmachine7_cmd_valid & sdram_bankmachine7_cmd_payload_is_write));
assign sdram_max_time0 = (sdram_time0 == 1'd0);
assign sdram_max_time1 = (sdram_time1 == 1'd0);
assign sdram_bankmachine0_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine1_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine2_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine3_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine4_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine5_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine6_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine7_refresh_req = sdram_cmd_valid;
assign sdram_go_to_refresh = (((((((sdram_bankmachine0_refresh_gnt & sdram_bankmachine1_refresh_gnt) & sdram_bankmachine2_refresh_gnt) & sdram_bankmachine3_refresh_gnt) & sdram_bankmachine4_refresh_gnt) & sdram_bankmachine5_refresh_gnt) & sdram_bankmachine6_refresh_gnt) & sdram_bankmachine7_refresh_gnt);
assign sdram_interface_rdata = {sdram_dfi_p1_rddata, sdram_dfi_p0_rddata};
assign {sdram_dfi_p1_wrdata, sdram_dfi_p0_wrdata} = sdram_interface_wdata;
assign {sdram_dfi_p1_wrdata_mask, sdram_dfi_p0_wrdata_mask} = (~sdram_interface_wdata_we);
always @(*) begin
	sdram_choose_cmd_valids <= 8'd0;
	sdram_choose_cmd_valids[0] <= (sdram_bankmachine0_cmd_valid & (((sdram_bankmachine0_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine0_cmd_payload_ras & (~sdram_bankmachine0_cmd_payload_cas)) & (~sdram_bankmachine0_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine0_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine0_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[1] <= (sdram_bankmachine1_cmd_valid & (((sdram_bankmachine1_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine1_cmd_payload_ras & (~sdram_bankmachine1_cmd_payload_cas)) & (~sdram_bankmachine1_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine1_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine1_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[2] <= (sdram_bankmachine2_cmd_valid & (((sdram_bankmachine2_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine2_cmd_payload_ras & (~sdram_bankmachine2_cmd_payload_cas)) & (~sdram_bankmachine2_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine2_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine2_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[3] <= (sdram_bankmachine3_cmd_valid & (((sdram_bankmachine3_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine3_cmd_payload_ras & (~sdram_bankmachine3_cmd_payload_cas)) & (~sdram_bankmachine3_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine3_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine3_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[4] <= (sdram_bankmachine4_cmd_valid & (((sdram_bankmachine4_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine4_cmd_payload_ras & (~sdram_bankmachine4_cmd_payload_cas)) & (~sdram_bankmachine4_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine4_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine4_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[5] <= (sdram_bankmachine5_cmd_valid & (((sdram_bankmachine5_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine5_cmd_payload_ras & (~sdram_bankmachine5_cmd_payload_cas)) & (~sdram_bankmachine5_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine5_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine5_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[6] <= (sdram_bankmachine6_cmd_valid & (((sdram_bankmachine6_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine6_cmd_payload_ras & (~sdram_bankmachine6_cmd_payload_cas)) & (~sdram_bankmachine6_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine6_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine6_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[7] <= (sdram_bankmachine7_cmd_valid & (((sdram_bankmachine7_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine7_cmd_payload_ras & (~sdram_bankmachine7_cmd_payload_cas)) & (~sdram_bankmachine7_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine7_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine7_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
end
assign sdram_choose_cmd_request = sdram_choose_cmd_valids;
assign sdram_choose_cmd_cmd_valid = rhs_array_muxed0;
assign sdram_choose_cmd_cmd_payload_a = rhs_array_muxed1;
assign sdram_choose_cmd_cmd_payload_ba = rhs_array_muxed2;
assign sdram_choose_cmd_cmd_payload_is_read = rhs_array_muxed3;
assign sdram_choose_cmd_cmd_payload_is_write = rhs_array_muxed4;
assign sdram_choose_cmd_cmd_payload_is_cmd = rhs_array_muxed5;
always @(*) begin
	sdram_choose_cmd_cmd_payload_cas <= 1'd0;
	if (sdram_choose_cmd_cmd_valid) begin
		sdram_choose_cmd_cmd_payload_cas <= t_array_muxed0;
	end
end
always @(*) begin
	sdram_choose_cmd_cmd_payload_ras <= 1'd0;
	if (sdram_choose_cmd_cmd_valid) begin
		sdram_choose_cmd_cmd_payload_ras <= t_array_muxed1;
	end
end
always @(*) begin
	sdram_choose_cmd_cmd_payload_we <= 1'd0;
	if (sdram_choose_cmd_cmd_valid) begin
		sdram_choose_cmd_cmd_payload_we <= t_array_muxed2;
	end
end
assign sdram_choose_cmd_ce = (sdram_choose_cmd_cmd_ready | (~sdram_choose_cmd_cmd_valid));
always @(*) begin
	sdram_choose_req_valids <= 8'd0;
	sdram_choose_req_valids[0] <= (sdram_bankmachine0_cmd_valid & (((sdram_bankmachine0_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine0_cmd_payload_ras & (~sdram_bankmachine0_cmd_payload_cas)) & (~sdram_bankmachine0_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine0_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine0_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[1] <= (sdram_bankmachine1_cmd_valid & (((sdram_bankmachine1_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine1_cmd_payload_ras & (~sdram_bankmachine1_cmd_payload_cas)) & (~sdram_bankmachine1_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine1_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine1_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[2] <= (sdram_bankmachine2_cmd_valid & (((sdram_bankmachine2_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine2_cmd_payload_ras & (~sdram_bankmachine2_cmd_payload_cas)) & (~sdram_bankmachine2_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine2_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine2_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[3] <= (sdram_bankmachine3_cmd_valid & (((sdram_bankmachine3_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine3_cmd_payload_ras & (~sdram_bankmachine3_cmd_payload_cas)) & (~sdram_bankmachine3_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine3_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine3_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[4] <= (sdram_bankmachine4_cmd_valid & (((sdram_bankmachine4_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine4_cmd_payload_ras & (~sdram_bankmachine4_cmd_payload_cas)) & (~sdram_bankmachine4_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine4_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine4_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[5] <= (sdram_bankmachine5_cmd_valid & (((sdram_bankmachine5_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine5_cmd_payload_ras & (~sdram_bankmachine5_cmd_payload_cas)) & (~sdram_bankmachine5_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine5_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine5_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[6] <= (sdram_bankmachine6_cmd_valid & (((sdram_bankmachine6_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine6_cmd_payload_ras & (~sdram_bankmachine6_cmd_payload_cas)) & (~sdram_bankmachine6_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine6_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine6_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[7] <= (sdram_bankmachine7_cmd_valid & (((sdram_bankmachine7_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine7_cmd_payload_ras & (~sdram_bankmachine7_cmd_payload_cas)) & (~sdram_bankmachine7_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine7_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine7_cmd_payload_is_write == sdram_choose_req_want_writes))));
end
assign sdram_choose_req_request = sdram_choose_req_valids;
assign sdram_choose_req_cmd_valid = rhs_array_muxed6;
assign sdram_choose_req_cmd_payload_a = rhs_array_muxed7;
assign sdram_choose_req_cmd_payload_ba = rhs_array_muxed8;
assign sdram_choose_req_cmd_payload_is_read = rhs_array_muxed9;
assign sdram_choose_req_cmd_payload_is_write = rhs_array_muxed10;
assign sdram_choose_req_cmd_payload_is_cmd = rhs_array_muxed11;
always @(*) begin
	sdram_choose_req_cmd_payload_cas <= 1'd0;
	if (sdram_choose_req_cmd_valid) begin
		sdram_choose_req_cmd_payload_cas <= t_array_muxed3;
	end
end
always @(*) begin
	sdram_choose_req_cmd_payload_ras <= 1'd0;
	if (sdram_choose_req_cmd_valid) begin
		sdram_choose_req_cmd_payload_ras <= t_array_muxed4;
	end
end
always @(*) begin
	sdram_choose_req_cmd_payload_we <= 1'd0;
	if (sdram_choose_req_cmd_valid) begin
		sdram_choose_req_cmd_payload_we <= t_array_muxed5;
	end
end
always @(*) begin
	sdram_bankmachine0_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 1'd0))) begin
		sdram_bankmachine0_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 1'd0))) begin
		sdram_bankmachine0_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine1_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 1'd1))) begin
		sdram_bankmachine1_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 1'd1))) begin
		sdram_bankmachine1_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine2_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 2'd2))) begin
		sdram_bankmachine2_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 2'd2))) begin
		sdram_bankmachine2_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine3_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 2'd3))) begin
		sdram_bankmachine3_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 2'd3))) begin
		sdram_bankmachine3_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine4_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 3'd4))) begin
		sdram_bankmachine4_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 3'd4))) begin
		sdram_bankmachine4_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine5_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 3'd5))) begin
		sdram_bankmachine5_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 3'd5))) begin
		sdram_bankmachine5_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine6_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 3'd6))) begin
		sdram_bankmachine6_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 3'd6))) begin
		sdram_bankmachine6_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine7_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 3'd7))) begin
		sdram_bankmachine7_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 3'd7))) begin
		sdram_bankmachine7_cmd_ready <= 1'd1;
	end
end
assign sdram_choose_req_ce = (sdram_choose_req_cmd_ready | (~sdram_choose_req_cmd_valid));
assign sdram_dfi_p0_reset_n = 1'd1;
assign sdram_dfi_p0_cke = {1{sdram_steerer0}};
assign sdram_dfi_p0_odt = {1{sdram_steerer1}};
assign sdram_dfi_p1_reset_n = 1'd1;
assign sdram_dfi_p1_cke = {1{sdram_steerer2}};
assign sdram_dfi_p1_odt = {1{sdram_steerer3}};
assign sdram_tfawcon_count = ((sdram_tfawcon_window[0] + sdram_tfawcon_window[1]) + sdram_tfawcon_window[2]);
always @(*) begin
	sdram_choose_req_cmd_ready <= 1'd0;
	sdram_en1 <= 1'd0;
	sdram_steerer_sel0 <= 2'd0;
	sdram_steerer_sel1 <= 2'd0;
	sdram_choose_cmd_want_activates <= 1'd0;
	sdram_cmd_ready <= 1'd0;
	sdram_choose_cmd_cmd_ready <= 1'd0;
	sdram_choose_req_want_reads <= 1'd0;
	sdram_choose_req_want_writes <= 1'd0;
	sdram_en0 <= 1'd0;
	subfragments_multiplexer_next_state <= 4'd0;
	subfragments_multiplexer_next_state <= subfragments_multiplexer_state;
	case (subfragments_multiplexer_state)
		1'd1: begin
			sdram_en1 <= 1'd1;
			sdram_choose_req_want_writes <= 1'd1;
			if (1'd0) begin
				sdram_choose_req_cmd_ready <= (sdram_cas_allowed & ((~((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we))) | sdram_ras_allowed));
			end else begin
				sdram_choose_cmd_want_activates <= sdram_ras_allowed;
				sdram_choose_cmd_cmd_ready <= ((~((sdram_choose_cmd_cmd_payload_ras & (~sdram_choose_cmd_cmd_payload_cas)) & (~sdram_choose_cmd_cmd_payload_we))) | sdram_ras_allowed);
				sdram_choose_req_cmd_ready <= sdram_cas_allowed;
			end
			sdram_steerer_sel0 <= 1'd0;
			if (1'd0) begin
				sdram_steerer_sel0 <= 2'd2;
			end
			if (1'd1) begin
				sdram_steerer_sel0 <= 1'd1;
			end
			sdram_steerer_sel1 <= 1'd0;
			if (1'd1) begin
				sdram_steerer_sel1 <= 2'd2;
			end
			if (1'd0) begin
				sdram_steerer_sel1 <= 1'd1;
			end
			if (sdram_read_available) begin
				if (((~sdram_write_available) | sdram_max_time1)) begin
					subfragments_multiplexer_next_state <= 2'd3;
				end
			end
			if (sdram_go_to_refresh) begin
				subfragments_multiplexer_next_state <= 2'd2;
			end
		end
		2'd2: begin
			sdram_steerer_sel0 <= 2'd3;
			sdram_cmd_ready <= 1'd1;
			if (sdram_cmd_last) begin
				subfragments_multiplexer_next_state <= 1'd0;
			end
		end
		2'd3: begin
			if (sdram_twtrcon_ready) begin
				subfragments_multiplexer_next_state <= 1'd0;
			end
		end
		3'd4: begin
			subfragments_multiplexer_next_state <= 3'd5;
		end
		3'd5: begin
			subfragments_multiplexer_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_multiplexer_next_state <= 3'd7;
		end
		3'd7: begin
			subfragments_multiplexer_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_multiplexer_next_state <= 4'd9;
		end
		4'd9: begin
			subfragments_multiplexer_next_state <= 4'd10;
		end
		4'd10: begin
			subfragments_multiplexer_next_state <= 4'd11;
		end
		4'd11: begin
			subfragments_multiplexer_next_state <= 4'd12;
		end
		4'd12: begin
			subfragments_multiplexer_next_state <= 4'd13;
		end
		4'd13: begin
			subfragments_multiplexer_next_state <= 4'd14;
		end
		4'd14: begin
			subfragments_multiplexer_next_state <= 4'd15;
		end
		4'd15: begin
			subfragments_multiplexer_next_state <= 1'd1;
		end
		default: begin
			sdram_en0 <= 1'd1;
			sdram_choose_req_want_reads <= 1'd1;
			if (1'd0) begin
				sdram_choose_req_cmd_ready <= (sdram_cas_allowed & ((~((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we))) | sdram_ras_allowed));
			end else begin
				sdram_choose_cmd_want_activates <= sdram_ras_allowed;
				sdram_choose_cmd_cmd_ready <= ((~((sdram_choose_cmd_cmd_payload_ras & (~sdram_choose_cmd_cmd_payload_cas)) & (~sdram_choose_cmd_cmd_payload_we))) | sdram_ras_allowed);
				sdram_choose_req_cmd_ready <= sdram_cas_allowed;
			end
			sdram_steerer_sel0 <= 1'd0;
			if (1'd1) begin
				sdram_steerer_sel0 <= 2'd2;
			end
			if (1'd0) begin
				sdram_steerer_sel0 <= 1'd1;
			end
			sdram_steerer_sel1 <= 1'd0;
			if (1'd0) begin
				sdram_steerer_sel1 <= 2'd2;
			end
			if (1'd1) begin
				sdram_steerer_sel1 <= 1'd1;
			end
			if (sdram_write_available) begin
				if (((~sdram_read_available) | sdram_max_time0)) begin
					subfragments_multiplexer_next_state <= 3'd4;
				end
			end
			if (sdram_go_to_refresh) begin
				subfragments_multiplexer_next_state <= 2'd2;
			end
		end
	endcase
end
assign subfragments_roundrobin0_request = {(((port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((subfragments_locked0 | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin0_ce = ((~sdram_interface_bank0_valid) & (~sdram_interface_bank0_lock));
assign sdram_interface_bank0_addr = rhs_array_muxed12;
assign sdram_interface_bank0_we = rhs_array_muxed13;
assign sdram_interface_bank0_valid = rhs_array_muxed14;
assign subfragments_roundrobin1_request = {(((port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((subfragments_locked1 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin1_ce = ((~sdram_interface_bank1_valid) & (~sdram_interface_bank1_lock));
assign sdram_interface_bank1_addr = rhs_array_muxed15;
assign sdram_interface_bank1_we = rhs_array_muxed16;
assign sdram_interface_bank1_valid = rhs_array_muxed17;
assign subfragments_roundrobin2_request = {(((port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((subfragments_locked2 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin2_ce = ((~sdram_interface_bank2_valid) & (~sdram_interface_bank2_lock));
assign sdram_interface_bank2_addr = rhs_array_muxed18;
assign sdram_interface_bank2_we = rhs_array_muxed19;
assign sdram_interface_bank2_valid = rhs_array_muxed20;
assign subfragments_roundrobin3_request = {(((port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((subfragments_locked3 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin3_ce = ((~sdram_interface_bank3_valid) & (~sdram_interface_bank3_lock));
assign sdram_interface_bank3_addr = rhs_array_muxed21;
assign sdram_interface_bank3_we = rhs_array_muxed22;
assign sdram_interface_bank3_valid = rhs_array_muxed23;
assign subfragments_roundrobin4_request = {(((port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((subfragments_locked4 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin4_ce = ((~sdram_interface_bank4_valid) & (~sdram_interface_bank4_lock));
assign sdram_interface_bank4_addr = rhs_array_muxed24;
assign sdram_interface_bank4_we = rhs_array_muxed25;
assign sdram_interface_bank4_valid = rhs_array_muxed26;
assign subfragments_roundrobin5_request = {(((port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((subfragments_locked5 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin5_ce = ((~sdram_interface_bank5_valid) & (~sdram_interface_bank5_lock));
assign sdram_interface_bank5_addr = rhs_array_muxed27;
assign sdram_interface_bank5_we = rhs_array_muxed28;
assign sdram_interface_bank5_valid = rhs_array_muxed29;
assign subfragments_roundrobin6_request = {(((port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((subfragments_locked6 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin6_ce = ((~sdram_interface_bank6_valid) & (~sdram_interface_bank6_lock));
assign sdram_interface_bank6_addr = rhs_array_muxed30;
assign sdram_interface_bank6_we = rhs_array_muxed31;
assign sdram_interface_bank6_valid = rhs_array_muxed32;
assign subfragments_roundrobin7_request = {(((port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((subfragments_locked7 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin7_ce = ((~sdram_interface_bank7_valid) & (~sdram_interface_bank7_lock));
assign sdram_interface_bank7_addr = rhs_array_muxed33;
assign sdram_interface_bank7_we = rhs_array_muxed34;
assign sdram_interface_bank7_valid = rhs_array_muxed35;
assign port_cmd_ready = ((((((((1'd0 | (((subfragments_roundrobin0_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((subfragments_locked0 | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank0_ready)) | (((subfragments_roundrobin1_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((subfragments_locked1 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank1_ready)) | (((subfragments_roundrobin2_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((subfragments_locked2 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank2_ready)) | (((subfragments_roundrobin3_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((subfragments_locked3 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank3_ready)) | (((subfragments_roundrobin4_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((subfragments_locked4 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank4_ready)) | (((subfragments_roundrobin5_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((subfragments_locked5 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank5_ready)) | (((subfragments_roundrobin6_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((subfragments_locked6 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & sdram_interface_bank6_ready)) | (((subfragments_roundrobin7_grant == 1'd0) & ((port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((subfragments_locked7 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0)))))) & sdram_interface_bank7_ready));
assign port_wdata_ready = subfragments_new_master_wdata_ready3;
assign port_rdata_valid = subfragments_new_master_rdata_valid13;
always @(*) begin
	sdram_interface_wdata <= 128'd0;
	sdram_interface_wdata_we <= 16'd0;
	case ({subfragments_new_master_wdata_ready3})
		1'd1: begin
			sdram_interface_wdata <= port_wdata_payload_data;
			sdram_interface_wdata_we <= port_wdata_payload_we;
		end
		default: begin
			sdram_interface_wdata <= 1'd0;
			sdram_interface_wdata_we <= 1'd0;
		end
	endcase
end
assign port_rdata_payload_data = sdram_interface_rdata;
assign subfragments_roundrobin0_grant = 1'd0;
assign subfragments_roundrobin1_grant = 1'd0;
assign subfragments_roundrobin2_grant = 1'd0;
assign subfragments_roundrobin3_grant = 1'd0;
assign subfragments_roundrobin4_grant = 1'd0;
assign subfragments_roundrobin5_grant = 1'd0;
assign subfragments_roundrobin6_grant = 1'd0;
assign subfragments_roundrobin7_grant = 1'd0;
assign data_port_adr = wb_sdram_adr[10:2];
always @(*) begin
	data_port_dat_w <= 128'd0;
	data_port_we <= 16'd0;
	if (write_from_slave) begin
		data_port_dat_w <= interface_dat_r;
		data_port_we <= {16{1'd1}};
	end else begin
		data_port_dat_w <= {4{wb_sdram_dat_w}};
		if ((((wb_sdram_cyc & wb_sdram_stb) & wb_sdram_we) & wb_sdram_ack)) begin
			data_port_we <= {({4{(wb_sdram_adr[1:0] == 1'd0)}} & wb_sdram_sel), ({4{(wb_sdram_adr[1:0] == 1'd1)}} & wb_sdram_sel), ({4{(wb_sdram_adr[1:0] == 2'd2)}} & wb_sdram_sel), ({4{(wb_sdram_adr[1:0] == 2'd3)}} & wb_sdram_sel)};
		end
	end
end
assign interface_dat_w = data_port_dat_r;
assign interface_sel = 16'd65535;
always @(*) begin
	wb_sdram_dat_r <= 32'd0;
	case (adr_offset_r)
		1'd0: begin
			wb_sdram_dat_r <= data_port_dat_r[127:96];
		end
		1'd1: begin
			wb_sdram_dat_r <= data_port_dat_r[95:64];
		end
		2'd2: begin
			wb_sdram_dat_r <= data_port_dat_r[63:32];
		end
		default: begin
			wb_sdram_dat_r <= data_port_dat_r[31:0];
		end
	endcase
end
assign {tag_do_dirty, tag_do_tag} = tag_port_dat_r;
assign tag_port_dat_w = {tag_di_dirty, tag_di_tag};
assign tag_port_adr = wb_sdram_adr[10:2];
assign tag_di_tag = wb_sdram_adr[29:11];
assign interface_adr = {tag_do_tag, wb_sdram_adr[10:2]};
always @(*) begin
	interface_cyc <= 1'd0;
	interface_stb <= 1'd0;
	tag_port_we <= 1'd0;
	interface_we <= 1'd0;
	wb_sdram_ack <= 1'd0;
	tag_di_dirty <= 1'd0;
	subfragments_next_state <= 2'd0;
	word_clr <= 1'd0;
	word_inc <= 1'd0;
	write_from_slave <= 1'd0;
	subfragments_next_state <= subfragments_state;
	case (subfragments_state)
		1'd1: begin
			word_clr <= 1'd1;
			if ((tag_do_tag == wb_sdram_adr[29:11])) begin
				wb_sdram_ack <= 1'd1;
				if (wb_sdram_we) begin
					tag_di_dirty <= 1'd1;
					tag_port_we <= 1'd1;
				end
				subfragments_next_state <= 1'd0;
			end else begin
				if (tag_do_dirty) begin
					subfragments_next_state <= 2'd2;
				end else begin
					tag_port_we <= 1'd1;
					word_clr <= 1'd1;
					subfragments_next_state <= 2'd3;
				end
			end
		end
		2'd2: begin
			interface_stb <= 1'd1;
			interface_cyc <= 1'd1;
			interface_we <= 1'd1;
			if (interface_ack) begin
				word_inc <= 1'd1;
				if (1'd1) begin
					tag_port_we <= 1'd1;
					word_clr <= 1'd1;
					subfragments_next_state <= 2'd3;
				end
			end
		end
		2'd3: begin
			interface_stb <= 1'd1;
			interface_cyc <= 1'd1;
			interface_we <= 1'd0;
			if (interface_ack) begin
				write_from_slave <= 1'd1;
				word_inc <= 1'd1;
				if (1'd1) begin
					subfragments_next_state <= 1'd1;
				end else begin
					subfragments_next_state <= 2'd3;
				end
			end
		end
		default: begin
			if ((wb_sdram_cyc & wb_sdram_stb)) begin
				subfragments_next_state <= 1'd1;
			end
		end
	endcase
end
assign port_cmd_payload_addr = (interface_adr - 27'd67108864);
assign port_cmd_payload_we = interface_we;
assign port_wdata_payload_data = interface_dat_w;
assign port_wdata_payload_we = interface_sel;
assign interface_dat_r = port_rdata_payload_data;
assign port_flush = (~interface_cyc);
assign port_cmd_last = (~interface_we);
assign port_cmd_valid = ((interface_cyc & interface_stb) & (~cmd_consumed));
assign port_wdata_valid = (((port_cmd_valid | cmd_consumed) & port_cmd_payload_we) & (~wdata_consumed));
assign port_rdata_ready = ((port_cmd_valid | cmd_consumed) & (~port_cmd_payload_we));
assign interface_ack = (ack_cmd & ((interface_we & ack_wdata) | ((~interface_we) & ack_rdata)));
assign ack_cmd = ((port_cmd_valid & port_cmd_ready) | cmd_consumed);
assign ack_wdata = ((port_wdata_valid & port_wdata_ready) | wdata_consumed);
assign ack_rdata = (port_rdata_valid & port_rdata_ready);
assign strobe = ((div_m_counter == 1'd0) & (div_m_storage != 1'd0));
assign modulate = (breath ? pwm0_out : 1'd1);
assign rgb_led0_r = (~(pdm_r_out & modulate));
assign rgb_led0_g = (~(pdm_g_out & modulate));
assign rgb_led0_b = (~(pdm_b_out & modulate));
assign pdm_r_level = r_storage;
assign pdm_g_level = g_storage;
assign pdm_b_level = b_storage;
assign pdm_r_adr = pdm_r_level;
assign pdm_r_level_corr = pdm_r_dat_r;
assign pdm_r_out = pdm_r_sigma[16];
assign pdm_g_adr = pdm_g_level;
assign pdm_g_level_corr = pdm_g_dat_r;
assign pdm_g_out = pdm_g_sigma[16];
assign pdm_b_adr = pdm_b_level;
assign pdm_b_level_corr = pdm_b_dat_r;
assign pdm_b_out = pdm_b_sigma[16];
assign pwm0_adr = pwm0_counter_value;
assign pwm0_counter = pwm0_dat_r;
assign pwm0_out = (pwm0_pwm_counter < pwm0_counter);
assign record0_o = out_storage[0];
assign record0_oe = oe_storage[0];
assign record1_o = out_storage[1];
assign record1_oe = oe_storage[1];
assign record2_o = out_storage[5];
assign record2_oe = oe_storage[5];
assign record3_o = out_storage[6];
assign record3_oe = oe_storage[6];
assign record4_o = out_storage[9];
assign record4_oe = oe_storage[9];
assign record5_o = out_storage[10];
assign record5_oe = oe_storage[10];
assign record6_o = out_storage[11];
assign record6_oe = oe_storage[11];
assign record7_o = out_storage[12];
assign record7_oe = oe_storage[12];
assign record8_o = out_storage[13];
assign record8_oe = oe_storage[13];
assign record9_o = out_storage[18];
assign record9_oe = oe_storage[18];
assign record10_o = out_storage[19];
assign record10_oe = oe_storage[19];
assign record11_o = out_storage[20];
assign record11_oe = oe_storage[20];
assign record12_o = out_storage[21];
assign record12_oe = oe_storage[21];
assign alt0 = subfragments_csrstorage0_storage;
assign alt1 = subfragments_csrstorage1_storage;
assign alt2 = subfragments_csrstorage2_storage;
assign alt3 = subfragments_csrstorage3_storage;
assign alt4 = subfragments_csrstorage4_storage;
assign alt5 = subfragments_csrstorage5_storage;
assign alt6 = subfragments_csrstorage6_storage;
assign alt7 = subfragments_csrstorage7_storage;
assign alt8 = subfragments_csrstorage8_storage;
assign alt9 = subfragments_csrstorage9_storage;
assign alt10 = subfragments_csrstorage10_storage;
assign alt11 = subfragments_csrstorage11_storage;
assign alt12 = subfragments_csrstorage12_storage;
assign lxspi_bus_dat_r = {lxspi_sr[7:0], lxspi_sr[15:8], lxspi_sr[23:16], lxspi_sr[31:24]};
always @(*) begin
	lxspi_miso_status <= 1'd0;
	lxspi_o <= 4'd0;
	spiflash4x_cs_n <= 1'd0;
	lxspi_oe <= 1'd0;
	lxspi_spiflashdualquad_clk <= 1'd0;
	if (lxspi_bitbang_en_storage) begin
		lxspi_spiflashdualquad_clk <= lxspi_bitbang_storage[1];
		spiflash4x_cs_n <= lxspi_bitbang_storage[2];
		if (lxspi_bitbang_storage[3]) begin
			lxspi_oe <= 1'd0;
		end else begin
			lxspi_oe <= 1'd1;
		end
		if (lxspi_bitbang_storage[1]) begin
			lxspi_miso_status <= lxspi_i0[1];
		end
		lxspi_o <= {{3{1'd1}}, lxspi_bitbang_storage[0]};
	end else begin
		lxspi_spiflashdualquad_clk <= lxspi_clk;
		spiflash4x_cs_n <= lxspi_cs_n;
		lxspi_o <= lxspi_sr[31:28];
		lxspi_oe <= lxspi_dq_oe;
	end
end
assign usb0_asyncfifo0_sink_payload_adr = usb0_bus_csr_adr;
assign usb0_asyncfifo0_sink_payload_dat_w = usb0_bus_csr_dat_w;
assign usb0_asyncfifo0_sink_payload_we = usb0_bus_csr_we;
assign usb0_asyncfifo0_sink_valid = usb0_en;
assign usb0_asyncfifo0_source_ready = 1'd1;
always @(*) begin
	usb0_csrbank_bus_we <= 1'd0;
	usb0_bus_adr <= 32'd0;
	usb0_csrbank_bus_dat_w <= 8'd0;
	usb0_csrbank_bus_adr <= 14'd0;
	if (usb0_asyncfifo0_source_valid) begin
		usb0_csrbank_bus_dat_w <= usb0_asyncfifo0_source_payload_dat_w;
		usb0_csrbank_bus_adr <= usb0_asyncfifo0_source_payload_adr;
		usb0_bus_adr <= usb0_asyncfifo0_source_payload_adr;
		usb0_csrbank_bus_we <= usb0_asyncfifo0_source_payload_we;
	end
end
assign usb0_asyncfifo1_sink_payload_dat_r = usb0_csrbank_bus_dat_r;
assign usb0_asyncfifo1_sink_payload_adr = usb0_source_adr;
assign usb0_asyncfifo1_sink_valid = usb0_valid;
assign usb0_asyncfifo1_source_ready = 1'd1;
assign usb0_bus_csr_dat_w = usb0_bus_bus_dat_w;
assign usb0_bus_bus_dat_r = usb0_bus_csr_dat_r;
always @(*) begin
	usb0_bus_bus_ack <= 1'd0;
	usb0_en <= 1'd0;
	subfragments_wb2csr_next_state <= 1'd0;
	usb0_bus_csr_adr <= 14'd0;
	usb0_bus_csr_we <= 1'd0;
	subfragments_wb2csr_next_state <= subfragments_wb2csr_state;
	case (subfragments_wb2csr_state)
		1'd1: begin
			if ((usb0_bus_bus_we | usb0_ack)) begin
				usb0_bus_bus_ack <= 1'd1;
				subfragments_wb2csr_next_state <= 1'd0;
			end
		end
		default: begin
			if ((usb0_bus_bus_cyc & usb0_bus_bus_stb)) begin
				usb0_bus_csr_adr <= usb0_bus_bus_adr;
				usb0_bus_csr_we <= usb0_bus_bus_we;
				usb0_en <= 1'd1;
				subfragments_wb2csr_next_state <= 1'd1;
			end
		end
	endcase
end
assign usb0_address_reset = usb0_usb_core_usb_reset;
assign usb0_setuphandler_usb_reset = usb0_usb_core_usb_reset;
always @(*) begin
	usb0_csrfield_reset <= 1'd0;
	usb0_csrfield_in <= 1'd0;
	usb0_csrfield_out <= 1'd0;
	usb0_csrfield_setup <= 1'd0;
	if (usb0_setuphandler_reset_pending) begin
		usb0_csrfield_reset <= 1'd1;
	end else begin
		if (usb0_in_next) begin
			usb0_csrfield_in <= 1'd1;
		end else begin
			if (usb0_out_next) begin
				usb0_csrfield_out <= usb0_out_next;
			end else begin
				if (usb0_setuphandler_packet_pending) begin
					usb0_csrfield_setup <= 1'd1;
				end
			end
		end
	end
end
assign usb0_usb_core_dtb = (usb0_inhandler_dtb | usb0_debug_packet_detected);
assign usb0_resetinserter_reset = usb0_usb_core_usb_reset;
assign usb0_usb_core_reset0 = (usb0_usb_core_error | usb0_usb_core_reset1);
assign usb0_usb_core_tx_i_bit_strobe = usb0_usb_core_rx_o_bit_strobe;
assign usb0_usb_core_usb_reset = usb0_usb_core_rx_o_reset;
assign usb0_usb_core_rx_i_usbp = usb_iobuf_usb_p_rx;
assign usb0_usb_core_rx_i_usbn = usb_iobuf_usb_n_rx;
assign usb_iobuf_usb_tx_en = usb0_usb_core_tx_o_oe;
assign usb_iobuf_usb_p_tx = usb0_usb_core_tx_o_usbp;
assign usb_iobuf_usb_n_tx = usb0_usb_core_tx_o_usbn;
assign usb0_usb_core_end = (usb0_usb_core_commit | usb0_usb_core_abort);
assign usb0_usb_core_transfer_reset = usb0_usb_core_reset0;
assign usb0_usb_core_data_recv_payload = usb0_usb_core_rx_o_data_payload;
assign usb0_usb_core_txstate_i_data_payload0 = usb0_usb_core_data_send_payload;
assign usb0_usb_core_txstate_i_data_ready = usb0_usb_core_data_send_have;
always @(*) begin
	usb0_usb_core_rx_reset0 <= 1'd0;
	if (usb0_usb_core_tx_o_oe) begin
		usb0_usb_core_rx_reset0 <= 1'd1;
	end
end
assign usb_pullup = usb_iobuf_usb_pullup;
always @(*) begin
	usb_iobuf_usb_n_rx <= 1'd0;
	usb_iobuf_usb_p_rx <= 1'd0;
	if (usb_iobuf_usb_tx_en) begin
		usb_iobuf_usb_p_rx <= 1'd1;
		usb_iobuf_usb_n_rx <= 1'd0;
	end else begin
		usb_iobuf_usb_p_rx <= usb_iobuf_usb_p_t_i1;
		usb_iobuf_usb_n_rx <= usb_iobuf_usb_n_t_i1;
	end
end
assign usb_iobuf_usb_p_t_oe = usb_iobuf_usb_tx_en;
assign usb_iobuf_usb_n_t_oe = usb_iobuf_usb_tx_en;
assign usb_iobuf_usb_p_t_o = usb_iobuf_usb_p_tx;
assign usb_iobuf_usb_n_t_o = usb_iobuf_usb_n_tx;
assign usb0_usb_core_tx_shifter_i_data = usb0_usb_core_tx_i_data_payload;
assign usb0_usb_core_tx_shifter_reset = (usb0_usb_core_tx_da_reset_shifter | usb0_usb_core_tx_sp_reset_shifter);
assign usb0_usb_core_tx_shifter_ce = (~usb0_usb_core_tx_stall);
assign usb0_usb_core_tx_bitstuff_reset = usb0_usb_core_tx_da_reset_bitstuff;
assign usb0_usb_core_tx_bitstuff_i_data = usb0_usb_core_tx_shifter_o_data;
assign usb0_usb_core_tx_stall = usb0_usb_core_tx_bitstuff_o_stall;
assign usb0_usb_core_tx_sp_bit = usb0_usb_core_tx_sync_pulse[0];
assign usb0_usb_core_tx_sp_reset_bitstuff = usb0_usb_core_tx_sync_pulse[0];
assign usb0_usb_core_tx_sp_reset_shifter = usb0_usb_core_tx_sync_pulse[1];
assign usb0_usb_core_tx_sp_o_data_strobe = usb0_usb_core_tx_sync_pulse[5];
assign usb0_usb_core_tx_state_data = (usb0_usb_core_tx_state_gray[0] & usb0_usb_core_tx_state_gray[1]);
assign usb0_usb_core_tx_state_sync = (usb0_usb_core_tx_state_gray[0] & (~usb0_usb_core_tx_state_gray[1]));
assign usb0_usb_core_tx_fit_oe = (usb0_usb_core_tx_state_data | usb0_usb_core_tx_state_sync);
assign usb0_usb_core_tx_fit_dat = (((usb0_usb_core_tx_state_data & usb0_usb_core_tx_shifter_o_data) & (~usb0_usb_core_tx_bitstuff_o_stall)) | usb0_usb_core_tx_sp_bit);
assign usb0_usb_core_tx_o_data_strobe = ((((usb0_usb_core_tx_state_data & usb0_usb_core_tx_shifter_o_get) & (~usb0_usb_core_tx_stall)) & usb0_usb_core_tx_i_oe) | usb0_usb_core_tx_sp_o_data_strobe);
assign usb0_usb_core_tx_nrzi_i_valid = usb0_usb_core_tx_i_bit_strobe;
assign usb0_usb_core_tx_nrzi_i_data = usb0_usb_core_tx_nrzi_dat;
assign usb0_usb_core_tx_nrzi_i_oe = usb0_usb_core_tx_nrzi_oe1;
assign usb0_usb_core_tx_o_usbp = usb0_usb_core_tx_nrzi_o_usbp;
assign usb0_usb_core_tx_o_usbn = usb0_usb_core_tx_nrzi_o_usbn;
assign usb0_usb_core_tx_o_oe = usb0_usb_core_tx_nrzi_o_oe;
always @(*) begin
	usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1 <= 1'd0;
	subfragments_clockdomainsrenamer_fsm_next_state <= 2'd0;
	usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value0 <= 8'd0;
	usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value_ce0 <= 1'd0;
	usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1 <= 2'd0;
	subfragments_clockdomainsrenamer_fsm_next_state <= subfragments_clockdomainsrenamer_fsm_state;
	case (subfragments_clockdomainsrenamer_fsm_state)
		1'd1: begin
			usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value0 <= (usb0_usb_core_tx_sync_pulse >>> 1'd1);
			usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value_ce0 <= 1'd1;
			if (usb0_usb_core_tx_sync_pulse[0]) begin
				subfragments_clockdomainsrenamer_fsm_next_state <= 2'd2;
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1 <= 2'd3;
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1 <= 1'd1;
			end else begin
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1 <= 1'd1;
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1 <= 1'd1;
			end
		end
		2'd2: begin
			if ((((~usb0_usb_core_tx_i_oe) & usb0_usb_core_tx_shifter_o_empty) & (~usb0_usb_core_tx_bitstuff_o_stall))) begin
				if (usb0_usb_core_tx_bitstuff_o_will_stall) begin
					subfragments_clockdomainsrenamer_fsm_next_state <= 2'd3;
				end else begin
					usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1 <= 2'd2;
					usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1 <= 1'd1;
					subfragments_clockdomainsrenamer_fsm_next_state <= 1'd0;
				end
			end else begin
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1 <= 2'd3;
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1 <= 1'd1;
			end
		end
		2'd3: begin
			usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1 <= 2'd2;
			usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1 <= 1'd1;
			subfragments_clockdomainsrenamer_fsm_next_state <= 1'd0;
		end
		default: begin
			if (usb0_usb_core_tx_i_oe) begin
				subfragments_clockdomainsrenamer_fsm_next_state <= 1'd1;
				usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value0 <= 8'd128;
				usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value_ce0 <= 1'd1;
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1 <= 1'd1;
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1 <= 1'd1;
			end else begin
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1 <= 1'd0;
				usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1 <= 1'd1;
			end
		end
	endcase
end
assign usb0_usb_core_tx_shifter_empty = usb0_usb_core_tx_shifter_pos[0];
assign usb0_usb_core_tx_shifter_o_empty = usb0_usb_core_tx_shifter_empty;
assign usb0_usb_core_tx_shifter_o_data = usb0_usb_core_tx_shifter_shifter[0];
assign usb0_usb_core_tx_bitstuff_o_stall = usb0_usb_core_tx_bitstuff_stuff_bit;
always @(*) begin
	usb0_usb_core_tx_bitstuff_stuff_bit <= 1'd0;
	subfragments_clockdomainsrenamer_resetinserter_next_state <= 3'd0;
	usb0_usb_core_tx_bitstuff_o_will_stall <= 1'd0;
	subfragments_clockdomainsrenamer_resetinserter_next_state <= subfragments_clockdomainsrenamer_resetinserter_state;
	case (subfragments_clockdomainsrenamer_resetinserter_state)
		1'd1: begin
			if (usb0_usb_core_tx_bitstuff_i_data) begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 2'd2;
			end else begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 1'd0;
			end
		end
		2'd2: begin
			if (usb0_usb_core_tx_bitstuff_i_data) begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 2'd3;
			end else begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 1'd0;
			end
		end
		2'd3: begin
			if (usb0_usb_core_tx_bitstuff_i_data) begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 3'd4;
			end else begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 1'd0;
			end
		end
		3'd4: begin
			if (usb0_usb_core_tx_bitstuff_i_data) begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 3'd5;
			end else begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 1'd0;
			end
		end
		3'd5: begin
			if (usb0_usb_core_tx_bitstuff_i_data) begin
				usb0_usb_core_tx_bitstuff_o_will_stall <= 1'd1;
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 3'd6;
			end else begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 1'd0;
			end
		end
		3'd6: begin
			usb0_usb_core_tx_bitstuff_stuff_bit <= 1'd1;
			subfragments_clockdomainsrenamer_resetinserter_next_state <= 1'd0;
		end
		default: begin
			if (usb0_usb_core_tx_bitstuff_i_data) begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 1'd1;
			end else begin
				subfragments_clockdomainsrenamer_resetinserter_next_state <= 1'd0;
			end
		end
	endcase
end
always @(*) begin
	usb0_usb_core_tx_nrzi_usbp <= 1'd0;
	usb0_usb_core_tx_nrzi_usbn <= 1'd0;
	usb0_usb_core_tx_nrzi_oe0 <= 1'd0;
	subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 3'd0;
	subfragments_clockdomainsrenamer_txnrziencoder_next_state <= subfragments_clockdomainsrenamer_txnrziencoder_state;
	case (subfragments_clockdomainsrenamer_txnrziencoder_state)
		1'd1: begin
			usb0_usb_core_tx_nrzi_usbp <= 1'd1;
			usb0_usb_core_tx_nrzi_usbn <= 1'd0;
			usb0_usb_core_tx_nrzi_oe0 <= 1'd1;
			if (usb0_usb_core_tx_nrzi_i_valid) begin
				if ((~usb0_usb_core_tx_nrzi_i_oe)) begin
					subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 2'd3;
				end else begin
					if (usb0_usb_core_tx_nrzi_i_data) begin
						subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 1'd1;
					end else begin
						subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 2'd2;
					end
				end
			end
		end
		2'd2: begin
			usb0_usb_core_tx_nrzi_usbp <= 1'd0;
			usb0_usb_core_tx_nrzi_usbn <= 1'd1;
			usb0_usb_core_tx_nrzi_oe0 <= 1'd1;
			if (usb0_usb_core_tx_nrzi_i_valid) begin
				if ((~usb0_usb_core_tx_nrzi_i_oe)) begin
					subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 2'd3;
				end else begin
					if (usb0_usb_core_tx_nrzi_i_data) begin
						subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 2'd2;
					end else begin
						subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 1'd1;
					end
				end
			end
		end
		2'd3: begin
			usb0_usb_core_tx_nrzi_usbp <= 1'd0;
			usb0_usb_core_tx_nrzi_usbn <= 1'd0;
			usb0_usb_core_tx_nrzi_oe0 <= 1'd1;
			if (usb0_usb_core_tx_nrzi_i_valid) begin
				subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 3'd4;
			end
		end
		3'd4: begin
			usb0_usb_core_tx_nrzi_usbp <= 1'd0;
			usb0_usb_core_tx_nrzi_usbn <= 1'd0;
			usb0_usb_core_tx_nrzi_oe0 <= 1'd1;
			if (usb0_usb_core_tx_nrzi_i_valid) begin
				subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 3'd5;
			end
		end
		3'd5: begin
			usb0_usb_core_tx_nrzi_usbp <= 1'd1;
			usb0_usb_core_tx_nrzi_usbn <= 1'd0;
			usb0_usb_core_tx_nrzi_oe0 <= 1'd1;
			if (usb0_usb_core_tx_nrzi_i_valid) begin
				subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 1'd0;
			end
		end
		default: begin
			usb0_usb_core_tx_nrzi_usbp <= 1'd1;
			usb0_usb_core_tx_nrzi_usbn <= 1'd0;
			usb0_usb_core_tx_nrzi_oe0 <= 1'd0;
			if (usb0_usb_core_tx_nrzi_i_valid) begin
				if (usb0_usb_core_tx_nrzi_i_oe) begin
					subfragments_clockdomainsrenamer_txnrziencoder_next_state <= 2'd2;
				end
			end
		end
	endcase
end
assign usb0_usb_core_txstate_i_data_payload1 = usb0_usb_core_txstate_i_data_payload0;
assign usb0_usb_core_txstate_reset = usb0_usb_core_txstate_is_ongoing0;
always @(*) begin
	usb0_usb_core_txstate_i_data_strobe <= 1'd0;
	if (usb0_usb_core_txstate_is_ongoing1) begin
		usb0_usb_core_txstate_i_data_strobe <= usb0_usb_core_tx_o_data_strobe;
	end
end
always @(*) begin
	usb0_usb_core_tx_i_data_payload <= 8'd0;
	usb0_usb_core_txstate_o_pkt_end <= 1'd0;
	subfragments_clockdomainsrenamer_txpacketsend_next_state <= 4'd0;
	usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value0 <= 1'd0;
	usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value_ce0 <= 1'd0;
	usb0_usb_core_txstate_o_data_ack <= 1'd0;
	usb0_usb_core_txstate_pid_subfragments_txpacketsend_next_value1 <= 4'd0;
	usb0_usb_core_txstate_pid_subfragments_txpacketsend_next_value_ce1 <= 1'd0;
	usb0_usb_core_txstate_is_ongoing0 <= 1'd0;
	usb0_usb_core_txstate_is_ongoing1 <= 1'd0;
	subfragments_clockdomainsrenamer_txpacketsend_next_state <= subfragments_clockdomainsrenamer_txpacketsend_state;
	case (subfragments_clockdomainsrenamer_txpacketsend_state)
		1'd1: begin
			usb0_usb_core_txstate_pid_subfragments_txpacketsend_next_value1 <= usb0_usb_core_txstate_i_pid;
			usb0_usb_core_txstate_pid_subfragments_txpacketsend_next_value_ce1 <= 1'd1;
			usb0_usb_core_tx_i_data_payload <= 1'd1;
			if (usb0_usb_core_tx_o_data_strobe) begin
				subfragments_clockdomainsrenamer_txpacketsend_next_state <= 2'd2;
			end
		end
		2'd2: begin
			usb0_usb_core_tx_i_data_payload <= {(usb0_usb_core_txstate_pid ^ 4'd15), usb0_usb_core_txstate_pid};
			if (usb0_usb_core_tx_o_data_strobe) begin
				if (((usb0_usb_core_txstate_pid & 2'd3) == 2'd2)) begin
					subfragments_clockdomainsrenamer_txpacketsend_next_state <= 3'd7;
				end else begin
					if (((usb0_usb_core_txstate_pid & 2'd3) == 2'd3)) begin
						subfragments_clockdomainsrenamer_txpacketsend_next_state <= 2'd3;
					end else begin
						subfragments_clockdomainsrenamer_txpacketsend_next_state <= 4'd8;
					end
				end
			end
			usb0_usb_core_txstate_is_ongoing0 <= 1'd1;
		end
		2'd3: begin
			if ((~usb0_usb_core_txstate_i_data_ready)) begin
				subfragments_clockdomainsrenamer_txpacketsend_next_state <= 3'd5;
			end else begin
				subfragments_clockdomainsrenamer_txpacketsend_next_state <= 3'd4;
			end
		end
		3'd4: begin
			usb0_usb_core_tx_i_data_payload <= usb0_usb_core_txstate_i_data_payload0;
			usb0_usb_core_txstate_o_data_ack <= usb0_usb_core_tx_o_data_strobe;
			if ((~usb0_usb_core_txstate_i_data_ready)) begin
				subfragments_clockdomainsrenamer_txpacketsend_next_state <= 3'd5;
			end
			usb0_usb_core_txstate_is_ongoing1 <= 1'd1;
		end
		3'd5: begin
			usb0_usb_core_tx_i_data_payload <= usb0_usb_core_txstate_o_crc[7:0];
			if (usb0_usb_core_tx_o_data_strobe) begin
				subfragments_clockdomainsrenamer_txpacketsend_next_state <= 3'd6;
			end
		end
		3'd6: begin
			usb0_usb_core_tx_i_data_payload <= usb0_usb_core_txstate_o_crc[15:8];
			if (usb0_usb_core_tx_o_data_strobe) begin
				subfragments_clockdomainsrenamer_txpacketsend_next_state <= 3'd7;
			end
		end
		3'd7: begin
			usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value0 <= 1'd0;
			usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value_ce0 <= 1'd1;
			if ((~usb0_usb_core_txstate_o_oe12)) begin
				usb0_usb_core_txstate_o_pkt_end <= 1'd1;
				subfragments_clockdomainsrenamer_txpacketsend_next_state <= 1'd0;
			end
		end
		default: begin
			usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value0 <= usb0_usb_core_txstate_i_pkt_start;
			usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value_ce0 <= 1'd1;
			if (usb0_usb_core_txstate_i_pkt_start) begin
				subfragments_clockdomainsrenamer_txpacketsend_next_state <= 1'd1;
			end else begin
				usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value0 <= 1'd0;
				usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value_ce0 <= 1'd1;
			end
		end
	endcase
end
assign usb0_usb_core_txstate_crc_dat = {usb0_usb_core_txstate_i_data_payload1[0], usb0_usb_core_txstate_i_data_payload1[1], usb0_usb_core_txstate_i_data_payload1[2], usb0_usb_core_txstate_i_data_payload1[3], usb0_usb_core_txstate_i_data_payload1[4], usb0_usb_core_txstate_i_data_payload1[5], usb0_usb_core_txstate_i_data_payload1[6], usb0_usb_core_txstate_i_data_payload1[7]};
assign usb0_usb_core_txstate_o_crc = ({usb0_usb_core_txstate_crc_cur[0], usb0_usb_core_txstate_crc_cur[1], usb0_usb_core_txstate_crc_cur[2], usb0_usb_core_txstate_crc_cur[3], usb0_usb_core_txstate_crc_cur[4], usb0_usb_core_txstate_crc_cur[5], usb0_usb_core_txstate_crc_cur[6], usb0_usb_core_txstate_crc_cur[7], usb0_usb_core_txstate_crc_cur[8], usb0_usb_core_txstate_crc_cur[9], usb0_usb_core_txstate_crc_cur[10], usb0_usb_core_txstate_crc_cur[11], usb0_usb_core_txstate_crc_cur[12], usb0_usb_core_txstate_crc_cur[13], usb0_usb_core_txstate_crc_cur[14], usb0_usb_core_txstate_crc_cur[15]} ^ 16'd65535);
always @(*) begin
	usb0_usb_core_txstate_crc_next <= 16'd64770;
	usb0_usb_core_txstate_crc_next[0] <= (((((((((((((((usb0_usb_core_txstate_crc_dat[0] ^ usb0_usb_core_txstate_crc_dat[1]) ^ usb0_usb_core_txstate_crc_dat[2]) ^ usb0_usb_core_txstate_crc_dat[3]) ^ usb0_usb_core_txstate_crc_dat[4]) ^ usb0_usb_core_txstate_crc_dat[5]) ^ usb0_usb_core_txstate_crc_dat[6]) ^ usb0_usb_core_txstate_crc_dat[7]) ^ usb0_usb_core_txstate_crc_cur[8]) ^ usb0_usb_core_txstate_crc_cur[9]) ^ usb0_usb_core_txstate_crc_cur[10]) ^ usb0_usb_core_txstate_crc_cur[11]) ^ usb0_usb_core_txstate_crc_cur[12]) ^ usb0_usb_core_txstate_crc_cur[13]) ^ usb0_usb_core_txstate_crc_cur[14]) ^ usb0_usb_core_txstate_crc_cur[15]);
	usb0_usb_core_txstate_crc_next[1] <= (((((((((((((usb0_usb_core_txstate_crc_dat[1] ^ usb0_usb_core_txstate_crc_dat[2]) ^ usb0_usb_core_txstate_crc_dat[3]) ^ usb0_usb_core_txstate_crc_dat[4]) ^ usb0_usb_core_txstate_crc_dat[5]) ^ usb0_usb_core_txstate_crc_dat[6]) ^ usb0_usb_core_txstate_crc_dat[7]) ^ usb0_usb_core_txstate_crc_cur[9]) ^ usb0_usb_core_txstate_crc_cur[10]) ^ usb0_usb_core_txstate_crc_cur[11]) ^ usb0_usb_core_txstate_crc_cur[12]) ^ usb0_usb_core_txstate_crc_cur[13]) ^ usb0_usb_core_txstate_crc_cur[14]) ^ usb0_usb_core_txstate_crc_cur[15]);
	usb0_usb_core_txstate_crc_next[2] <= (((usb0_usb_core_txstate_crc_dat[0] ^ usb0_usb_core_txstate_crc_dat[1]) ^ usb0_usb_core_txstate_crc_cur[8]) ^ usb0_usb_core_txstate_crc_cur[9]);
	usb0_usb_core_txstate_crc_next[3] <= (((usb0_usb_core_txstate_crc_dat[1] ^ usb0_usb_core_txstate_crc_dat[2]) ^ usb0_usb_core_txstate_crc_cur[9]) ^ usb0_usb_core_txstate_crc_cur[10]);
	usb0_usb_core_txstate_crc_next[4] <= (((usb0_usb_core_txstate_crc_dat[2] ^ usb0_usb_core_txstate_crc_dat[3]) ^ usb0_usb_core_txstate_crc_cur[10]) ^ usb0_usb_core_txstate_crc_cur[11]);
	usb0_usb_core_txstate_crc_next[5] <= (((usb0_usb_core_txstate_crc_dat[3] ^ usb0_usb_core_txstate_crc_dat[4]) ^ usb0_usb_core_txstate_crc_cur[11]) ^ usb0_usb_core_txstate_crc_cur[12]);
	usb0_usb_core_txstate_crc_next[6] <= (((usb0_usb_core_txstate_crc_dat[4] ^ usb0_usb_core_txstate_crc_dat[5]) ^ usb0_usb_core_txstate_crc_cur[12]) ^ usb0_usb_core_txstate_crc_cur[13]);
	usb0_usb_core_txstate_crc_next[7] <= (((usb0_usb_core_txstate_crc_dat[5] ^ usb0_usb_core_txstate_crc_dat[6]) ^ usb0_usb_core_txstate_crc_cur[13]) ^ usb0_usb_core_txstate_crc_cur[14]);
	usb0_usb_core_txstate_crc_next[8] <= ((((usb0_usb_core_txstate_crc_dat[6] ^ usb0_usb_core_txstate_crc_dat[7]) ^ usb0_usb_core_txstate_crc_cur[0]) ^ usb0_usb_core_txstate_crc_cur[14]) ^ usb0_usb_core_txstate_crc_cur[15]);
	usb0_usb_core_txstate_crc_next[9] <= ((usb0_usb_core_txstate_crc_dat[7] ^ usb0_usb_core_txstate_crc_cur[1]) ^ usb0_usb_core_txstate_crc_cur[15]);
	usb0_usb_core_txstate_crc_next[10] <= usb0_usb_core_txstate_crc_cur[2];
	usb0_usb_core_txstate_crc_next[11] <= usb0_usb_core_txstate_crc_cur[3];
	usb0_usb_core_txstate_crc_next[12] <= usb0_usb_core_txstate_crc_cur[4];
	usb0_usb_core_txstate_crc_next[13] <= usb0_usb_core_txstate_crc_cur[5];
	usb0_usb_core_txstate_crc_next[14] <= usb0_usb_core_txstate_crc_cur[6];
	usb0_usb_core_txstate_crc_next[15] <= ((((((((((((((((usb0_usb_core_txstate_crc_dat[0] ^ usb0_usb_core_txstate_crc_dat[1]) ^ usb0_usb_core_txstate_crc_dat[2]) ^ usb0_usb_core_txstate_crc_dat[3]) ^ usb0_usb_core_txstate_crc_dat[4]) ^ usb0_usb_core_txstate_crc_dat[5]) ^ usb0_usb_core_txstate_crc_dat[6]) ^ usb0_usb_core_txstate_crc_dat[7]) ^ usb0_usb_core_txstate_crc_cur[7]) ^ usb0_usb_core_txstate_crc_cur[8]) ^ usb0_usb_core_txstate_crc_cur[9]) ^ usb0_usb_core_txstate_crc_cur[10]) ^ usb0_usb_core_txstate_crc_cur[11]) ^ usb0_usb_core_txstate_crc_cur[12]) ^ usb0_usb_core_txstate_crc_cur[13]) ^ usb0_usb_core_txstate_crc_cur[14]) ^ usb0_usb_core_txstate_crc_cur[15]);
end
assign usb0_usb_core_rx_o_bit_strobe = usb0_usb_core_rx_line_state_valid;
assign usb0_usb_core_rx_o_reset = usb0_usb_core_rx_reset_counter[6];
assign usb0_usb_core_rx_nrzi_i_valid = usb0_usb_core_rx_o_bit_strobe;
assign usb0_usb_core_rx_nrzi_i_dj = usb0_usb_core_rx_line_state_dj1;
assign usb0_usb_core_rx_nrzi_i_dk = usb0_usb_core_rx_line_state_dk1;
assign usb0_usb_core_rx_nrzi_i_se0 = usb0_usb_core_rx_line_state_se01;
assign usb0_usb_core_rx_detect_reset = usb0_usb_core_rx_reset0;
assign usb0_usb_core_rx_detect_i_valid = usb0_usb_core_rx_nrzi_o_valid;
assign usb0_usb_core_rx_detect_i_se0 = usb0_usb_core_rx_nrzi_o_se0;
assign usb0_usb_core_rx_detect_i_data = usb0_usb_core_rx_nrzi_o_data;
assign usb0_usb_core_rx_reset1 = (~usb0_usb_core_rx_detect_o_pkt_active);
assign usb0_usb_core_rx_bitstuff_reset = ((~usb0_usb_core_rx_detect_o_pkt_active) | usb0_usb_core_rx_reset0);
assign usb0_usb_core_rx_bitstuff_i_valid = usb0_usb_core_rx_nrzi_o_valid;
assign usb0_usb_core_rx_bitstuff_i_data = usb0_usb_core_rx_nrzi_o_data;
assign usb0_usb_core_rx_shifter_reset = usb0_usb_core_rx_last_reset;
assign usb0_usb_core_rx_shifter_i_data = usb0_usb_core_rx_bitstuff_o_data;
assign usb0_usb_core_rx_shifter_i_valid = ((~usb0_usb_core_rx_bitstuff_o_stall) & usb0_usb_core_rx_detect_o_pkt_active);
assign usb0_usb_core_rx_payloadFifo_asyncfifo_din = {usb0_usb_core_rx_shifter_o_data[0], usb0_usb_core_rx_shifter_o_data[1], usb0_usb_core_rx_shifter_o_data[2], usb0_usb_core_rx_shifter_o_data[3], usb0_usb_core_rx_shifter_o_data[4], usb0_usb_core_rx_shifter_o_data[5], usb0_usb_core_rx_shifter_o_data[6], usb0_usb_core_rx_shifter_o_data[7]};
assign usb0_usb_core_rx_payloadFifo_asyncfifo_we = usb0_usb_core_rx_shifter_o_put;
assign usb0_usb_core_rx_o_data_payload = usb0_usb_core_rx_payloadFifo_asyncfifo_dout;
assign usb0_usb_core_rx_o_data_strobe = usb0_usb_core_rx_payloadFifo_asyncfifo_readable;
assign usb0_usb_core_rx_payloadFifo_asyncfifo_re = 1'd1;
always @(*) begin
	usb0_usb_core_rx_flagsFifo_asyncfifo_din <= 2'd0;
	usb0_usb_core_rx_flagsFifo_asyncfifo_din[1] <= usb0_usb_core_rx_detect_o_pkt_start;
	usb0_usb_core_rx_flagsFifo_asyncfifo_din[0] <= usb0_usb_core_rx_detect_o_pkt_end;
end
assign usb0_usb_core_rx_flagsFifo_asyncfifo_we = (usb0_usb_core_rx_detect_o_pkt_start | usb0_usb_core_rx_detect_o_pkt_end);
assign usb0_usb_core_rx_flag_start = usb0_usb_core_rx_flagsFifo_asyncfifo_dout[1];
assign usb0_usb_core_rx_flag_end = usb0_usb_core_rx_flagsFifo_asyncfifo_dout[0];
assign usb0_usb_core_rx_flag_valid = usb0_usb_core_rx_flagsFifo_asyncfifo_readable;
assign usb0_usb_core_rx_flagsFifo_asyncfifo_re = 1'd1;
assign usb0_usb_core_rx_o_pkt_start = (usb0_usb_core_rx_flag_start & usb0_usb_core_rx_flag_valid);
assign usb0_usb_core_rx_o_pkt_end = (usb0_usb_core_rx_flag_end & usb0_usb_core_rx_flag_valid);
assign usb0_usb_core_rx_dpair = {usb0_usb_core_rx_i_usbp, usb0_usb_core_rx_i_usbn};
always @(*) begin
	usb0_usb_core_rx_line_state_dt <= 1'd0;
	usb0_usb_core_rx_line_state_dj0 <= 1'd0;
	usb0_usb_core_rx_line_state_dk0 <= 1'd0;
	subfragments_clockdomainsrenamer_rxpipeline_next_state <= 3'd0;
	usb0_usb_core_rx_line_state_se10 <= 1'd0;
	usb0_usb_core_rx_line_state_se00 <= 1'd0;
	subfragments_clockdomainsrenamer_rxpipeline_next_state <= subfragments_clockdomainsrenamer_rxpipeline_state;
	case (subfragments_clockdomainsrenamer_rxpipeline_state)
		1'd1: begin
			usb0_usb_core_rx_line_state_dj0 <= 1'd1;
			if ((usb0_usb_core_rx_dpair != 2'd2)) begin
				subfragments_clockdomainsrenamer_rxpipeline_next_state <= 1'd0;
			end
		end
		2'd2: begin
			usb0_usb_core_rx_line_state_dk0 <= 1'd1;
			if ((usb0_usb_core_rx_dpair != 1'd1)) begin
				subfragments_clockdomainsrenamer_rxpipeline_next_state <= 1'd0;
			end
		end
		2'd3: begin
			usb0_usb_core_rx_line_state_se00 <= 1'd1;
			if ((usb0_usb_core_rx_dpair != 1'd0)) begin
				subfragments_clockdomainsrenamer_rxpipeline_next_state <= 1'd0;
			end
		end
		3'd4: begin
			usb0_usb_core_rx_line_state_se10 <= 1'd1;
			if ((usb0_usb_core_rx_dpair != 2'd3)) begin
				subfragments_clockdomainsrenamer_rxpipeline_next_state <= 1'd0;
			end
		end
		default: begin
			usb0_usb_core_rx_line_state_dt <= 1'd1;
			case (usb0_usb_core_rx_dpair)
				1'd0: begin
					subfragments_clockdomainsrenamer_rxpipeline_next_state <= 2'd3;
				end
				1'd1: begin
					subfragments_clockdomainsrenamer_rxpipeline_next_state <= 2'd2;
				end
				2'd2: begin
					subfragments_clockdomainsrenamer_rxpipeline_next_state <= 1'd1;
				end
				2'd3: begin
					subfragments_clockdomainsrenamer_rxpipeline_next_state <= 3'd4;
				end
			endcase
		end
	endcase
end
assign usb0_usb_core_rx_detect_o_pkt_start = usb0_usb_core_rx_detect_pkt_start;
assign usb0_usb_core_rx_detect_o_pkt_active = usb0_usb_core_rx_detect_pkt_active;
assign usb0_usb_core_rx_detect_o_pkt_end = usb0_usb_core_rx_detect_pkt_end;
always @(*) begin
	subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 3'd0;
	usb0_usb_core_rx_detect_pkt_start <= 1'd0;
	usb0_usb_core_rx_detect_pkt_active <= 1'd0;
	usb0_usb_core_rx_detect_pkt_end <= 1'd0;
	subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_state;
	case (subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_state)
		1'd1: begin
			if (usb0_usb_core_rx_detect_i_valid) begin
				if ((usb0_usb_core_rx_detect_i_data | usb0_usb_core_rx_detect_i_se0)) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 1'd0;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 2'd2;
				end
			end
		end
		2'd2: begin
			if (usb0_usb_core_rx_detect_i_valid) begin
				if ((usb0_usb_core_rx_detect_i_data | usb0_usb_core_rx_detect_i_se0)) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 1'd0;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 2'd3;
				end
			end
		end
		2'd3: begin
			if (usb0_usb_core_rx_detect_i_valid) begin
				if ((usb0_usb_core_rx_detect_i_data | usb0_usb_core_rx_detect_i_se0)) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 1'd0;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 3'd4;
				end
			end
		end
		3'd4: begin
			if (usb0_usb_core_rx_detect_i_valid) begin
				if ((usb0_usb_core_rx_detect_i_data | usb0_usb_core_rx_detect_i_se0)) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 1'd0;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 3'd5;
				end
			end
		end
		3'd5: begin
			if (usb0_usb_core_rx_detect_i_valid) begin
				if (usb0_usb_core_rx_detect_i_se0) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 1'd0;
				end else begin
					if (usb0_usb_core_rx_detect_i_data) begin
						usb0_usb_core_rx_detect_pkt_start <= 1'd1;
						subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 3'd6;
					end
				end
			end
		end
		3'd6: begin
			usb0_usb_core_rx_detect_pkt_active <= 1'd1;
			if ((usb0_usb_core_rx_detect_i_valid & usb0_usb_core_rx_detect_i_se0)) begin
				subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 1'd0;
				usb0_usb_core_rx_detect_pkt_active <= 1'd0;
				usb0_usb_core_rx_detect_pkt_end <= 1'd1;
			end
		end
		default: begin
			if (usb0_usb_core_rx_detect_i_valid) begin
				if ((usb0_usb_core_rx_detect_i_data | usb0_usb_core_rx_detect_i_se0)) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 1'd0;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state <= 1'd1;
				end
			end
		end
	endcase
end
always @(*) begin
	subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 3'd0;
	usb0_usb_core_rx_bitstuff_drop_bit <= 1'd0;
	subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_state;
	case (subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_state)
		1'd1: begin
			if (usb0_usb_core_rx_bitstuff_i_valid) begin
				if (usb0_usb_core_rx_bitstuff_i_data) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 2'd2;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 1'd0;
				end
			end
		end
		2'd2: begin
			if (usb0_usb_core_rx_bitstuff_i_valid) begin
				if (usb0_usb_core_rx_bitstuff_i_data) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 2'd3;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 1'd0;
				end
			end
		end
		2'd3: begin
			if (usb0_usb_core_rx_bitstuff_i_valid) begin
				if (usb0_usb_core_rx_bitstuff_i_data) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 3'd4;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 1'd0;
				end
			end
		end
		3'd4: begin
			if (usb0_usb_core_rx_bitstuff_i_valid) begin
				if (usb0_usb_core_rx_bitstuff_i_data) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 3'd5;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 1'd0;
				end
			end
		end
		3'd5: begin
			if (usb0_usb_core_rx_bitstuff_i_valid) begin
				if (usb0_usb_core_rx_bitstuff_i_data) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 3'd6;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 1'd0;
				end
			end
		end
		3'd6: begin
			if (usb0_usb_core_rx_bitstuff_i_valid) begin
				usb0_usb_core_rx_bitstuff_drop_bit <= 1'd1;
				subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 1'd0;
			end
		end
		default: begin
			if (usb0_usb_core_rx_bitstuff_i_valid) begin
				if (usb0_usb_core_rx_bitstuff_i_data) begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 1'd1;
				end else begin
					subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state <= 1'd0;
				end
			end
		end
	endcase
end
assign usb0_usb_core_rx_shifter_o_data = usb0_usb_core_rx_shifter_shift_reg[7:0];
assign usb0_usb_core_rx_payloadFifo_graycounter0_ce = (usb0_usb_core_rx_payloadFifo_asyncfifo_writable & usb0_usb_core_rx_payloadFifo_asyncfifo_we);
assign usb0_usb_core_rx_payloadFifo_graycounter1_ce = (usb0_usb_core_rx_payloadFifo_asyncfifo_readable & usb0_usb_core_rx_payloadFifo_asyncfifo_re);
assign usb0_usb_core_rx_payloadFifo_asyncfifo_writable = ((usb0_usb_core_rx_payloadFifo_graycounter0_q[1] == usb0_usb_core_rx_payloadFifo_consume_wdomain[1]) | (usb0_usb_core_rx_payloadFifo_graycounter0_q[0] == usb0_usb_core_rx_payloadFifo_consume_wdomain[0]));
assign usb0_usb_core_rx_payloadFifo_asyncfifo_readable = (usb0_usb_core_rx_payloadFifo_graycounter1_q != usb0_usb_core_rx_payloadFifo_produce_rdomain);
assign usb0_usb_core_rx_payloadFifo_wrport_adr = usb0_usb_core_rx_payloadFifo_graycounter0_q_binary[0];
assign usb0_usb_core_rx_payloadFifo_wrport_dat_w = usb0_usb_core_rx_payloadFifo_asyncfifo_din;
assign usb0_usb_core_rx_payloadFifo_wrport_we = usb0_usb_core_rx_payloadFifo_graycounter0_ce;
assign usb0_usb_core_rx_payloadFifo_rdport_adr = usb0_usb_core_rx_payloadFifo_graycounter1_q_next_binary[0];
assign usb0_usb_core_rx_payloadFifo_asyncfifo_dout = usb0_usb_core_rx_payloadFifo_rdport_dat_r;
always @(*) begin
	usb0_usb_core_rx_payloadFifo_graycounter0_q_next_binary <= 2'd0;
	if (usb0_usb_core_rx_payloadFifo_graycounter0_ce) begin
		usb0_usb_core_rx_payloadFifo_graycounter0_q_next_binary <= (usb0_usb_core_rx_payloadFifo_graycounter0_q_binary + 1'd1);
	end else begin
		usb0_usb_core_rx_payloadFifo_graycounter0_q_next_binary <= usb0_usb_core_rx_payloadFifo_graycounter0_q_binary;
	end
end
assign usb0_usb_core_rx_payloadFifo_graycounter0_q_next = (usb0_usb_core_rx_payloadFifo_graycounter0_q_next_binary ^ usb0_usb_core_rx_payloadFifo_graycounter0_q_next_binary[1]);
always @(*) begin
	usb0_usb_core_rx_payloadFifo_graycounter1_q_next_binary <= 2'd0;
	if (usb0_usb_core_rx_payloadFifo_graycounter1_ce) begin
		usb0_usb_core_rx_payloadFifo_graycounter1_q_next_binary <= (usb0_usb_core_rx_payloadFifo_graycounter1_q_binary + 1'd1);
	end else begin
		usb0_usb_core_rx_payloadFifo_graycounter1_q_next_binary <= usb0_usb_core_rx_payloadFifo_graycounter1_q_binary;
	end
end
assign usb0_usb_core_rx_payloadFifo_graycounter1_q_next = (usb0_usb_core_rx_payloadFifo_graycounter1_q_next_binary ^ usb0_usb_core_rx_payloadFifo_graycounter1_q_next_binary[1]);
assign usb0_usb_core_rx_flagsFifo_graycounter0_ce = (usb0_usb_core_rx_flagsFifo_asyncfifo_writable & usb0_usb_core_rx_flagsFifo_asyncfifo_we);
assign usb0_usb_core_rx_flagsFifo_graycounter1_ce = (usb0_usb_core_rx_flagsFifo_asyncfifo_readable & usb0_usb_core_rx_flagsFifo_asyncfifo_re);
assign usb0_usb_core_rx_flagsFifo_asyncfifo_writable = ((usb0_usb_core_rx_flagsFifo_graycounter0_q[1] == usb0_usb_core_rx_flagsFifo_consume_wdomain[1]) | (usb0_usb_core_rx_flagsFifo_graycounter0_q[0] == usb0_usb_core_rx_flagsFifo_consume_wdomain[0]));
assign usb0_usb_core_rx_flagsFifo_asyncfifo_readable = (usb0_usb_core_rx_flagsFifo_graycounter1_q != usb0_usb_core_rx_flagsFifo_produce_rdomain);
assign usb0_usb_core_rx_flagsFifo_wrport_adr = usb0_usb_core_rx_flagsFifo_graycounter0_q_binary[0];
assign usb0_usb_core_rx_flagsFifo_wrport_dat_w = usb0_usb_core_rx_flagsFifo_asyncfifo_din;
assign usb0_usb_core_rx_flagsFifo_wrport_we = usb0_usb_core_rx_flagsFifo_graycounter0_ce;
assign usb0_usb_core_rx_flagsFifo_rdport_adr = usb0_usb_core_rx_flagsFifo_graycounter1_q_next_binary[0];
assign usb0_usb_core_rx_flagsFifo_asyncfifo_dout = usb0_usb_core_rx_flagsFifo_rdport_dat_r;
always @(*) begin
	usb0_usb_core_rx_flagsFifo_graycounter0_q_next_binary <= 2'd0;
	if (usb0_usb_core_rx_flagsFifo_graycounter0_ce) begin
		usb0_usb_core_rx_flagsFifo_graycounter0_q_next_binary <= (usb0_usb_core_rx_flagsFifo_graycounter0_q_binary + 1'd1);
	end else begin
		usb0_usb_core_rx_flagsFifo_graycounter0_q_next_binary <= usb0_usb_core_rx_flagsFifo_graycounter0_q_binary;
	end
end
assign usb0_usb_core_rx_flagsFifo_graycounter0_q_next = (usb0_usb_core_rx_flagsFifo_graycounter0_q_next_binary ^ usb0_usb_core_rx_flagsFifo_graycounter0_q_next_binary[1]);
always @(*) begin
	usb0_usb_core_rx_flagsFifo_graycounter1_q_next_binary <= 2'd0;
	if (usb0_usb_core_rx_flagsFifo_graycounter1_ce) begin
		usb0_usb_core_rx_flagsFifo_graycounter1_q_next_binary <= (usb0_usb_core_rx_flagsFifo_graycounter1_q_binary + 1'd1);
	end else begin
		usb0_usb_core_rx_flagsFifo_graycounter1_q_next_binary <= usb0_usb_core_rx_flagsFifo_graycounter1_q_binary;
	end
end
assign usb0_usb_core_rx_flagsFifo_graycounter1_q_next = (usb0_usb_core_rx_flagsFifo_graycounter1_q_next_binary ^ usb0_usb_core_rx_flagsFifo_graycounter1_q_next_binary[1]);
always @(*) begin
	usb0_usb_core_endp4_subfragments_packetheaderdecode_next_value1 <= 1'd0;
	usb0_usb_core_endp4_subfragments_packetheaderdecode_next_value_ce1 <= 1'd0;
	usb0_usb_core_o_endp_subfragments_packetheaderdecode_next_value2 <= 4'd0;
	usb0_usb_core_o_endp_subfragments_packetheaderdecode_next_value_ce2 <= 1'd0;
	usb0_usb_core_crc5_subfragments_packetheaderdecode_next_value3 <= 5'd0;
	usb0_usb_core_o_decoded <= 1'd0;
	usb0_usb_core_crc5_subfragments_packetheaderdecode_next_value_ce3 <= 1'd0;
	subfragments_clockdomainsrenamer_packetheaderdecode_next_state <= 3'd0;
	usb0_usb_core_o_pid_subfragments_packetheaderdecode_next_value0 <= 4'd0;
	usb0_usb_core_o_pid_subfragments_packetheaderdecode_next_value_ce0 <= 1'd0;
	subfragments_clockdomainsrenamer_packetheaderdecode_next_value <= 7'd0;
	subfragments_clockdomainsrenamer_packetheaderdecode_next_value_ce <= 1'd0;
	subfragments_clockdomainsrenamer_packetheaderdecode_next_state <= subfragments_clockdomainsrenamer_packetheaderdecode_state;
	case (subfragments_clockdomainsrenamer_packetheaderdecode_state)
		1'd1: begin
			if (usb0_usb_core_rx_o_data_strobe) begin
				usb0_usb_core_o_pid_subfragments_packetheaderdecode_next_value0 <= usb0_usb_core_rx_o_data_payload[3:0];
				usb0_usb_core_o_pid_subfragments_packetheaderdecode_next_value_ce0 <= 1'd1;
				case ((usb0_usb_core_rx_o_data_payload[3:0] & 2'd3))
					1'd1: begin
						subfragments_clockdomainsrenamer_packetheaderdecode_next_state <= 2'd2;
					end
					2'd2: begin
						subfragments_clockdomainsrenamer_packetheaderdecode_next_state <= 3'd4;
					end
					2'd3: begin
						subfragments_clockdomainsrenamer_packetheaderdecode_next_state <= 3'd4;
					end
				endcase
			end
		end
		2'd2: begin
			if (usb0_usb_core_rx_o_data_strobe) begin
				subfragments_clockdomainsrenamer_packetheaderdecode_next_value <= usb0_usb_core_rx_o_data_payload[6:0];
				subfragments_clockdomainsrenamer_packetheaderdecode_next_value_ce <= 1'd1;
				usb0_usb_core_endp4_subfragments_packetheaderdecode_next_value1 <= usb0_usb_core_rx_o_data_payload[7];
				usb0_usb_core_endp4_subfragments_packetheaderdecode_next_value_ce1 <= 1'd1;
				subfragments_clockdomainsrenamer_packetheaderdecode_next_state <= 2'd3;
			end
		end
		2'd3: begin
			if (usb0_usb_core_rx_o_data_strobe) begin
				usb0_usb_core_o_endp_subfragments_packetheaderdecode_next_value2 <= {usb0_usb_core_rx_o_data_payload[2:0], usb0_usb_core_endp4};
				usb0_usb_core_o_endp_subfragments_packetheaderdecode_next_value_ce2 <= 1'd1;
				usb0_usb_core_crc5_subfragments_packetheaderdecode_next_value3 <= usb0_usb_core_rx_o_data_payload[7:4];
				usb0_usb_core_crc5_subfragments_packetheaderdecode_next_value_ce3 <= 1'd1;
				subfragments_clockdomainsrenamer_packetheaderdecode_next_state <= 3'd4;
			end
		end
		3'd4: begin
			usb0_usb_core_o_decoded <= 1'd1;
			subfragments_clockdomainsrenamer_packetheaderdecode_next_state <= 1'd0;
		end
		default: begin
			if (usb0_usb_core_rx_o_pkt_start) begin
				subfragments_clockdomainsrenamer_packetheaderdecode_next_state <= 1'd1;
			end
		end
	endcase
end
assign usb0_usb_core_is_el0 = ((~(subfragments_clockdomainsrenamer_clockdomainsrenamer_state == 3'd6)) & (subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state == 3'd6));
assign usb0_usb_core_is_el1 = ((~(subfragments_clockdomainsrenamer_clockdomainsrenamer_state == 4'd8)) & (subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state == 4'd8));
always @(*) begin
	usb0_usb_core_retry <= 1'd0;
	usb0_usb_core_abort <= 1'd0;
	usb0_usb_core_data_end <= 1'd0;
	usb0_usb_core_error <= 1'd0;
	subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 4'd0;
	usb0_usb_core_data_recv_put <= 1'd0;
	usb0_usb_core_data_send_get <= 1'd0;
	usb0_usb_core_txstate_i_pkt_start <= 1'd0;
	usb0_usb_core_txstate_i_pid <= 4'd0;
	usb0_usb_core_tok_subfragments_f_next_value0 <= 4'd0;
	usb0_usb_core_tok_subfragments_f_next_value_ce0 <= 1'd0;
	usb0_usb_core_endp_subfragments_f_next_value1 <= 4'd0;
	usb0_usb_core_endp_subfragments_f_next_value_ce1 <= 1'd0;
	usb0_usb_core_idle <= 1'd0;
	usb0_usb_core_start <= 1'd0;
	usb0_usb_core_response_pid_subfragments_t_next_value <= 4'd0;
	usb0_usb_core_poll <= 1'd0;
	usb0_usb_core_response_pid_subfragments_t_next_value_ce <= 1'd0;
	usb0_usb_core_setup <= 1'd0;
	usb0_usb_core_commit <= 1'd0;
	if (usb0_usb_core_is_el0) begin
		if (usb0_usb_core_dtb) begin
			usb0_usb_core_txstate_i_pid <= 4'd11;
		end else begin
			usb0_usb_core_txstate_i_pid <= 2'd3;
		end
		usb0_usb_core_txstate_i_pkt_start <= 1'd1;
	end
	if (usb0_usb_core_is_el1) begin
		usb0_usb_core_txstate_i_pid <= usb0_usb_core_response_pid;
		usb0_usb_core_txstate_i_pkt_start <= 1'd1;
	end
	subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= subfragments_clockdomainsrenamer_clockdomainsrenamer_state;
	case (subfragments_clockdomainsrenamer_clockdomainsrenamer_state)
		1'd0: begin
			usb0_usb_core_error <= 1'd1;
		end
		2'd2: begin
			usb0_usb_core_idle <= 1'd0;
			if (usb0_usb_core_o_decoded) begin
				if ((usb0_usb_core_o_addr != usb0_usb_core_addr)) begin
					subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 1'd1;
				end else begin
					usb0_usb_core_start <= 1'd1;
					usb0_usb_core_tok_subfragments_f_next_value0 <= usb0_usb_core_o_pid;
					usb0_usb_core_tok_subfragments_f_next_value_ce0 <= 1'd1;
					usb0_usb_core_endp_subfragments_f_next_value1 <= usb0_usb_core_o_endp;
					usb0_usb_core_endp_subfragments_f_next_value_ce1 <= 1'd1;
					subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 2'd3;
				end
			end
		end
		2'd3: begin
			usb0_usb_core_poll <= 1'd1;
			if (usb0_usb_core_rdy) begin
				if ((usb0_usb_core_tok == 4'd13)) begin
					usb0_usb_core_response_pid_subfragments_t_next_value <= 2'd2;
					usb0_usb_core_response_pid_subfragments_t_next_value_ce <= 1'd1;
				end else begin
					if (usb0_usb_core_sta) begin
						usb0_usb_core_response_pid_subfragments_t_next_value <= 4'd14;
						usb0_usb_core_response_pid_subfragments_t_next_value_ce <= 1'd1;
					end else begin
						if (usb0_usb_core_arm) begin
							usb0_usb_core_response_pid_subfragments_t_next_value <= 2'd2;
							usb0_usb_core_response_pid_subfragments_t_next_value_ce <= 1'd1;
						end else begin
							usb0_usb_core_response_pid_subfragments_t_next_value <= 4'd10;
							usb0_usb_core_response_pid_subfragments_t_next_value_ce <= 1'd1;
						end
					end
				end
				if ((usb0_usb_core_o_pid == 3'd5)) begin
					subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 1'd1;
				end else begin
					if ((usb0_usb_core_tok == 4'd13)) begin
						subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 3'd4;
					end else begin
						if ((usb0_usb_core_tok == 1'd1)) begin
							subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 3'd4;
						end else begin
							if ((usb0_usb_core_tok == 4'd9)) begin
								if (((~usb0_usb_core_arm) | usb0_usb_core_sta)) begin
									subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 4'd8;
								end else begin
									subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 3'd6;
								end
							end else begin
								subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 1'd1;
							end
						end
					end
				end
			end
		end
		3'd4: begin
			if (usb0_usb_core_o_decoded) begin
				if (((usb0_usb_core_o_pid & 2'd3) == 2'd3)) begin
					subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 3'd5;
				end else begin
					if ((usb0_usb_core_o_pid == 3'd5)) begin
						subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 3'd4;
					end else begin
						subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 1'd0;
					end
				end
			end
		end
		3'd5: begin
			if ((usb0_usb_core_response_pid == 2'd2)) begin
				usb0_usb_core_data_recv_put <= usb0_usb_core_rx_o_data_strobe;
			end
			if (usb0_usb_core_rx_o_pkt_end) begin
				subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 4'd8;
			end
		end
		3'd6: begin
			if (usb0_usb_core_dtb) begin
				usb0_usb_core_txstate_i_pid <= 4'd11;
			end else begin
				usb0_usb_core_txstate_i_pid <= 2'd3;
			end
			usb0_usb_core_data_send_get <= usb0_usb_core_txstate_o_data_ack;
			usb0_usb_core_data_end <= usb0_usb_core_txstate_o_pkt_end;
			if (usb0_usb_core_txstate_o_pkt_end) begin
				subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 3'd7;
			end
		end
		3'd7: begin
			if (usb0_usb_core_o_decoded) begin
				usb0_usb_core_commit <= 1'd1;
				if ((usb0_usb_core_o_pid == 2'd2)) begin
					subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 1'd1;
				end else begin
					if ((usb0_usb_core_o_pid == 4'd9)) begin
						usb0_usb_core_retry <= 1'd1;
						subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 3'd6;
					end else begin
						subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 1'd0;
					end
				end
			end
		end
		4'd8: begin
			usb0_usb_core_txstate_i_pid <= usb0_usb_core_response_pid;
			if (usb0_usb_core_txstate_o_pkt_end) begin
				usb0_usb_core_setup <= (usb0_usb_core_tok == 4'd13);
				if ((usb0_usb_core_response_pid == 2'd2)) begin
					usb0_usb_core_commit <= 1'd1;
				end else begin
					usb0_usb_core_abort <= 1'd1;
				end
				subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 1'd1;
			end
		end
		default: begin
			usb0_usb_core_idle <= 1'd1;
			if (usb0_usb_core_rx_o_pkt_start) begin
				subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state <= 2'd2;
			end
		end
	endcase
end
assign usb_iobuf_usb_pullup = usb0_pullup_storage;
assign usb0_setuphandler_reset_trigger = (~usb0_setuphandler_usb_reset);
assign usb0_setuphandler_inner_reset = ((usb0_setuphandler_reset | usb0_setuphandler_begin) | usb0_setuphandler_csrfield_reset);
always @(*) begin
	usb0_setuphandler_packet_clear <= 1'd0;
	usb0_setuphandler_packet_clear <= usb0_setuphandler_begin;
	if ((usb0_setuphandler_eventmanager_pending_re & usb0_setuphandler_eventmanager_pending_r[0])) begin
		usb0_setuphandler_packet_clear <= 1'd1;
	end
end
always @(*) begin
	usb0_setuphandler_eventmanager_status_w <= 2'd0;
	usb0_setuphandler_eventmanager_status_w[0] <= usb0_setuphandler_packet_status;
	usb0_setuphandler_eventmanager_status_w[1] <= usb0_setuphandler_reset_status;
end
always @(*) begin
	usb0_setuphandler_reset_clear <= 1'd0;
	if ((usb0_setuphandler_eventmanager_pending_re & usb0_setuphandler_eventmanager_pending_r[1])) begin
		usb0_setuphandler_reset_clear <= 1'd1;
	end
end
always @(*) begin
	usb0_setuphandler_eventmanager_pending_w <= 2'd0;
	usb0_setuphandler_eventmanager_pending_w[0] <= usb0_setuphandler_packet_pending;
	usb0_setuphandler_eventmanager_pending_w[1] <= usb0_setuphandler_reset_pending;
end
assign usb0_setuphandler_irq = ((usb0_setuphandler_eventmanager_pending_w[0] & usb0_setuphandler_eventmanager_storage[0]) | (usb0_setuphandler_eventmanager_pending_w[1] & usb0_setuphandler_eventmanager_storage[1]));
assign usb0_setuphandler_packet_status = 1'd0;
assign usb0_setuphandler_reset_status = usb0_setuphandler_reset_trigger;
assign usb0_setuphandler_setuphandlerinner_empty = (~usb0_setuphandler_setuphandlerinner_readable);
assign usb0_setuphandler_csrfield_have = usb0_setuphandler_setuphandlerinner_readable;
assign usb0_setuphandler_csrfield_is_in = usb0_setuphandler_setuphandlerinner_is_in;
assign usb0_setuphandler_csrfield_epno = usb0_setuphandler_epno;
assign usb0_setuphandler_csrfield_pend = usb0_setuphandler_packet_pending;
assign usb0_setuphandler_csrfield_data1 = usb0_setuphandler_setuphandlerinner_have_data_stage;
assign usb0_setuphandler_csrfield_data0 = usb0_setuphandler_setuphandlerinner_syncfifo_dout;
assign usb0_setuphandler_setuphandlerinner_re = usb0_setuphandler_data_we;
always @(*) begin
	usb0_setuphandler_setuphandlerinner_syncfifo_we <= 1'd0;
	usb0_setuphandler_setuphandlerinner_syncfifo_din <= 8'd0;
	if ((usb0_usb_core_tok == 4'd13)) begin
		usb0_setuphandler_setuphandlerinner_syncfifo_din <= usb0_setuphandler_data_recv_payload;
		usb0_setuphandler_setuphandlerinner_syncfifo_we <= usb0_setuphandler_data_recv_put;
	end
end
assign usb0_setuphandler_packet_trigger = (usb0_setuphandler_setuphandlerinner_readable & usb0_usb_core_setup);
assign usb0_setuphandler_setuphandlerinner_syncfifo_re = (usb0_setuphandler_setuphandlerinner_syncfifo_readable & ((~usb0_setuphandler_setuphandlerinner_readable) | usb0_setuphandler_setuphandlerinner_re));
assign usb0_setuphandler_setuphandlerinner_level1 = (usb0_setuphandler_setuphandlerinner_level0 + usb0_setuphandler_setuphandlerinner_readable);
always @(*) begin
	usb0_setuphandler_setuphandlerinner_wrport_adr <= 4'd0;
	if (usb0_setuphandler_setuphandlerinner_replace) begin
		usb0_setuphandler_setuphandlerinner_wrport_adr <= (usb0_setuphandler_setuphandlerinner_produce - 1'd1);
	end else begin
		usb0_setuphandler_setuphandlerinner_wrport_adr <= usb0_setuphandler_setuphandlerinner_produce;
	end
end
assign usb0_setuphandler_setuphandlerinner_wrport_dat_w = usb0_setuphandler_setuphandlerinner_syncfifo_din;
assign usb0_setuphandler_setuphandlerinner_wrport_we = (usb0_setuphandler_setuphandlerinner_syncfifo_we & (usb0_setuphandler_setuphandlerinner_syncfifo_writable | usb0_setuphandler_setuphandlerinner_replace));
assign usb0_setuphandler_setuphandlerinner_do_read = (usb0_setuphandler_setuphandlerinner_syncfifo_readable & usb0_setuphandler_setuphandlerinner_syncfifo_re);
assign usb0_setuphandler_setuphandlerinner_rdport_adr = usb0_setuphandler_setuphandlerinner_consume;
assign usb0_setuphandler_setuphandlerinner_syncfifo_dout = usb0_setuphandler_setuphandlerinner_rdport_dat_r;
assign usb0_setuphandler_setuphandlerinner_rdport_re = usb0_setuphandler_setuphandlerinner_do_read;
assign usb0_setuphandler_setuphandlerinner_syncfifo_writable = (usb0_setuphandler_setuphandlerinner_level0 != 4'd10);
assign usb0_setuphandler_setuphandlerinner_syncfifo_readable = (usb0_setuphandler_setuphandlerinner_level0 != 1'd0);
assign usb0_inhandler_ep_stall_mask = (1'd1 <<< usb0_inhandler_csrfield_epno);
assign usb0_inhandler_stalled = (usb0_inhandler_stall_status >>> usb0_usb_core_endp);
assign usb0_inhandler_data_buf_reset = (usb0_inhandler_csrfield_reset | ((usb0_usb_core_commit & usb0_inhandler_transmitted) & usb0_inhandler_queued));
assign usb0_inhandler_response = ((usb0_inhandler_queued & usb0_inhandler_is_our_packet) & usb0_inhandler_is_in_packet);
assign usb0_inhandler_csrfield_have = usb0_inhandler_syncfifobuffered_readable;
assign usb0_inhandler_csrfield_idle = (~usb0_inhandler_queued);
assign usb0_inhandler_csrfield_pend = usb0_inhandler_packet_pending;
assign usb0_inhandler_packet_trigger = ((~usb0_inhandler_queued) & usb0_inhandler_was_queued);
assign usb0_inhandler_dtb = (usb0_inhandler_dtbs >>> usb0_usb_core_endp);
assign usb0_inhandler_data_out = usb0_inhandler_syncfifobuffered_syncfifo_dout;
assign usb0_inhandler_data_out_have = usb0_inhandler_syncfifobuffered_readable;
assign usb0_inhandler_syncfifobuffered_re = ((usb0_inhandler_data_out_advance & usb0_inhandler_is_in_packet) & usb0_inhandler_is_our_packet);
assign usb0_inhandler_syncfifobuffered_syncfifo_we = usb0_inhandler_data_re;
assign usb0_inhandler_syncfifobuffered_syncfifo_din = usb0_inhandler_data_storage;
assign usb0_inhandler_is_our_packet = (usb0_inhandler_csrfield_epno == usb0_usb_core_endp);
assign usb0_inhandler_is_in_packet = (usb0_usb_core_tok == 4'd9);
assign usb0_inhandler_syncfifobuffered_syncfifo_re = (usb0_inhandler_syncfifobuffered_syncfifo_readable & ((~usb0_inhandler_syncfifobuffered_readable) | usb0_inhandler_syncfifobuffered_re));
assign usb0_inhandler_syncfifobuffered_level1 = (usb0_inhandler_syncfifobuffered_level0 + usb0_inhandler_syncfifobuffered_readable);
always @(*) begin
	usb0_inhandler_syncfifobuffered_wrport_adr <= 6'd0;
	if (usb0_inhandler_syncfifobuffered_replace) begin
		usb0_inhandler_syncfifobuffered_wrport_adr <= (usb0_inhandler_syncfifobuffered_produce - 1'd1);
	end else begin
		usb0_inhandler_syncfifobuffered_wrport_adr <= usb0_inhandler_syncfifobuffered_produce;
	end
end
assign usb0_inhandler_syncfifobuffered_wrport_dat_w = usb0_inhandler_syncfifobuffered_syncfifo_din;
assign usb0_inhandler_syncfifobuffered_wrport_we = (usb0_inhandler_syncfifobuffered_syncfifo_we & (usb0_inhandler_syncfifobuffered_syncfifo_writable | usb0_inhandler_syncfifobuffered_replace));
assign usb0_inhandler_syncfifobuffered_do_read = (usb0_inhandler_syncfifobuffered_syncfifo_readable & usb0_inhandler_syncfifobuffered_syncfifo_re);
assign usb0_inhandler_syncfifobuffered_rdport_adr = usb0_inhandler_syncfifobuffered_consume;
assign usb0_inhandler_syncfifobuffered_syncfifo_dout = usb0_inhandler_syncfifobuffered_rdport_dat_r;
assign usb0_inhandler_syncfifobuffered_rdport_re = usb0_inhandler_syncfifobuffered_do_read;
assign usb0_inhandler_syncfifobuffered_syncfifo_writable = (usb0_inhandler_syncfifobuffered_level0 != 7'd64);
assign usb0_inhandler_syncfifobuffered_syncfifo_readable = (usb0_inhandler_syncfifobuffered_level0 != 1'd0);
assign usb0_inhandler_eventmanager_status_w = usb0_inhandler_packet_status;
always @(*) begin
	usb0_inhandler_packet_clear <= 1'd0;
	if ((usb0_inhandler_eventmanager_pending_re & usb0_inhandler_eventmanager_pending_r)) begin
		usb0_inhandler_packet_clear <= 1'd1;
	end
end
assign usb0_inhandler_eventmanager_pending_w = usb0_inhandler_packet_pending;
assign usb0_inhandler_irq = (usb0_inhandler_eventmanager_pending_w & usb0_inhandler_eventmanager_storage);
assign usb0_inhandler_packet_status = 1'd0;
always @(*) begin
	usb0_outhandler_ep_mask <= 16'd1;
	if ((usb0_usb_core_setup | usb0_usb_core_commit)) begin
		usb0_outhandler_ep_mask <= (1'd1 <<< usb0_usb_core_endp);
	end else begin
		usb0_outhandler_ep_mask <= (1'd1 <<< usb0_outhandler_csrfield_epno0);
	end
end
assign usb0_outhandler_stalled = (usb0_outhandler_stall_status >>> usb0_usb_core_endp);
assign usb0_outhandler_enabled = (usb0_outhandler_enable_status >>> usb0_usb_core_endp);
assign usb0_outhandler_is_out_packet = (usb0_usb_core_tok == 1'd1);
assign usb0_outhandler_response = ((usb0_outhandler_enabled & usb0_outhandler_is_out_packet) & (~usb0_outhandler_packet_pending));
assign usb0_outhandler_syncfifobuffered_syncfifo_din = usb0_outhandler_data_recv_payload;
assign usb0_outhandler_syncfifobuffered_syncfifo_we = (usb0_outhandler_data_recv_put & usb0_outhandler_responding);
assign usb0_outhandler_data_buf_reset = usb0_outhandler_csrfield_reset;
assign usb0_outhandler_csrfield_data = usb0_outhandler_syncfifobuffered_syncfifo_dout;
assign usb0_outhandler_syncfifobuffered_re = usb0_outhandler_data_we;
assign usb0_outhandler_csrfield_epno1 = usb0_outhandler_epno;
assign usb0_outhandler_csrfield_have = usb0_outhandler_syncfifobuffered_readable;
assign usb0_outhandler_csrfield_pend = usb0_outhandler_packet_pending;
assign usb0_outhandler_packet_trigger = (usb0_outhandler_responding & usb0_usb_core_commit);
assign usb0_outhandler_syncfifobuffered_syncfifo_re = (usb0_outhandler_syncfifobuffered_syncfifo_readable & ((~usb0_outhandler_syncfifobuffered_readable) | usb0_outhandler_syncfifobuffered_re));
assign usb0_outhandler_syncfifobuffered_level1 = (usb0_outhandler_syncfifobuffered_level0 + usb0_outhandler_syncfifobuffered_readable);
always @(*) begin
	usb0_outhandler_syncfifobuffered_wrport_adr <= 7'd0;
	if (usb0_outhandler_syncfifobuffered_replace) begin
		usb0_outhandler_syncfifobuffered_wrport_adr <= (usb0_outhandler_syncfifobuffered_produce - 1'd1);
	end else begin
		usb0_outhandler_syncfifobuffered_wrport_adr <= usb0_outhandler_syncfifobuffered_produce;
	end
end
assign usb0_outhandler_syncfifobuffered_wrport_dat_w = usb0_outhandler_syncfifobuffered_syncfifo_din;
assign usb0_outhandler_syncfifobuffered_wrport_we = (usb0_outhandler_syncfifobuffered_syncfifo_we & (usb0_outhandler_syncfifobuffered_syncfifo_writable | usb0_outhandler_syncfifobuffered_replace));
assign usb0_outhandler_syncfifobuffered_do_read = (usb0_outhandler_syncfifobuffered_syncfifo_readable & usb0_outhandler_syncfifobuffered_syncfifo_re);
assign usb0_outhandler_syncfifobuffered_rdport_adr = usb0_outhandler_syncfifobuffered_consume;
assign usb0_outhandler_syncfifobuffered_syncfifo_dout = usb0_outhandler_syncfifobuffered_rdport_dat_r;
assign usb0_outhandler_syncfifobuffered_rdport_re = usb0_outhandler_syncfifobuffered_do_read;
assign usb0_outhandler_syncfifobuffered_syncfifo_writable = (usb0_outhandler_syncfifobuffered_level0 != 7'd66);
assign usb0_outhandler_syncfifobuffered_syncfifo_readable = (usb0_outhandler_syncfifobuffered_level0 != 1'd0);
assign usb0_outhandler_eventmanager_status_w = usb0_outhandler_packet_status;
always @(*) begin
	usb0_outhandler_packet_clear <= 1'd0;
	if ((usb0_outhandler_eventmanager_pending_re & usb0_outhandler_eventmanager_pending_r)) begin
		usb0_outhandler_packet_clear <= 1'd1;
	end
end
assign usb0_outhandler_eventmanager_pending_w = usb0_outhandler_packet_pending;
assign usb0_outhandler_irq = (usb0_outhandler_eventmanager_pending_w & usb0_outhandler_eventmanager_storage);
assign usb0_outhandler_packet_status = 1'd0;
assign usb0_ev_irq = ((usb0_setuphandler_irq | usb0_inhandler_irq) | usb0_outhandler_irq);
always @(*) begin
	usb0_usb_core_data_send_have <= 1'd0;
	usb0_inhandler_data_out_advance <= 1'd0;
	usb0_setuphandler_begin <= 1'd0;
	usb0_usb_core_data_send_payload <= 8'd0;
	usb0_outhandler_data_recv_payload <= 8'd0;
	usb0_outhandler_data_recv_put <= 1'd0;
	usb0_usb_core_arm <= 1'd0;
	usb0_usb_core_sta <= 1'd0;
	subfragments_clockdomainsrenamer_next_state <= 3'd0;
	usb0_usb_core_addr_subfragments_next_value <= 7'd0;
	usb0_usb_core_addr_subfragments_next_value_ce <= 1'd0;
	usb0_setuphandler_data_recv_put <= 1'd0;
	usb0_setuphandler_data_recv_payload <= 8'd0;
	usb0_inhandler_dtb_reset <= 1'd0;
	subfragments_clockdomainsrenamer_next_state <= subfragments_clockdomainsrenamer_state;
	case (subfragments_clockdomainsrenamer_state)
		1'd1: begin
			if (usb0_usb_core_idle) begin
				subfragments_clockdomainsrenamer_next_state <= 1'd0;
			end else begin
				if ((usb0_usb_core_tok == 4'd13)) begin
					subfragments_clockdomainsrenamer_next_state <= 2'd3;
					usb0_setuphandler_begin <= 1'd1;
					usb0_inhandler_dtb_reset <= 1'd1;
					usb0_usb_core_sta <= 1'd0;
					usb0_usb_core_arm <= 1'd1;
				end else begin
					if ((usb0_usb_core_tok == 4'd9)) begin
						subfragments_clockdomainsrenamer_next_state <= 3'd4;
						usb0_usb_core_sta <= usb0_inhandler_stalled;
						usb0_usb_core_arm <= usb0_inhandler_response;
					end else begin
						if ((usb0_usb_core_tok == 1'd1)) begin
							subfragments_clockdomainsrenamer_next_state <= 3'd5;
							usb0_usb_core_sta <= usb0_outhandler_stalled;
							usb0_usb_core_arm <= usb0_outhandler_response;
						end else begin
							subfragments_clockdomainsrenamer_next_state <= 1'd0;
						end
					end
				end
			end
		end
		2'd2: begin
			subfragments_clockdomainsrenamer_next_state <= 1'd0;
		end
		2'd3: begin
			usb0_setuphandler_data_recv_payload <= usb0_usb_core_data_recv_payload;
			usb0_setuphandler_data_recv_put <= usb0_usb_core_data_recv_put;
			usb0_usb_core_sta <= 1'd0;
			usb0_usb_core_arm <= 1'd1;
			if (usb0_debug_packet_detected) begin
				subfragments_clockdomainsrenamer_next_state <= 2'd2;
			end
			if (usb0_usb_core_end) begin
				subfragments_clockdomainsrenamer_next_state <= 1'd0;
			end
		end
		3'd4: begin
			if ((usb0_usb_core_tok == 4'd9)) begin
				usb0_usb_core_data_send_have <= usb0_inhandler_data_out_have;
				usb0_usb_core_data_send_payload <= usb0_inhandler_data_out;
				usb0_inhandler_data_out_advance <= usb0_usb_core_data_send_get;
				usb0_usb_core_sta <= usb0_inhandler_stalled;
				usb0_usb_core_arm <= usb0_inhandler_response;
				if (usb0_usb_core_end) begin
					subfragments_clockdomainsrenamer_next_state <= 1'd0;
				end
			end
		end
		3'd5: begin
			if ((usb0_usb_core_tok == 1'd1)) begin
				usb0_outhandler_data_recv_payload <= usb0_usb_core_data_recv_payload;
				usb0_outhandler_data_recv_put <= usb0_usb_core_data_recv_put;
				usb0_usb_core_sta <= usb0_outhandler_stalled;
				usb0_usb_core_arm <= usb0_outhandler_response;
				if (usb0_usb_core_end) begin
					subfragments_clockdomainsrenamer_next_state <= 1'd0;
				end
			end
		end
		default: begin
			usb0_usb_core_addr_subfragments_next_value <= usb0_csrstorage_storage;
			usb0_usb_core_addr_subfragments_next_value_ce <= 1'd1;
			if (usb0_usb_core_start) begin
				subfragments_clockdomainsrenamer_next_state <= 1'd1;
			end
		end
	endcase
end
assign usb0_csrbank_sel = (usb0_csrbank_bus_adr[13:9] == 1'd0);
assign usb0_csrbank_pullup_out0_r = usb0_csrbank_bus_dat_w[0];
assign usb0_csrbank_pullup_out0_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 1'd0));
assign usb0_csrbank_pullup_out0_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 1'd0));
assign usb0_csrbank_address0_r = usb0_csrbank_bus_dat_w[6:0];
assign usb0_csrbank_address0_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 1'd1));
assign usb0_csrbank_address0_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 1'd1));
assign usb0_csrbank_next_ev_r = usb0_csrbank_bus_dat_w[3:0];
assign usb0_csrbank_next_ev_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 2'd2));
assign usb0_csrbank_next_ev_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 2'd2));
assign usb0_csrbank_setup_data_r = usb0_csrbank_bus_dat_w[7:0];
assign usb0_csrbank_setup_data_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 2'd3));
assign usb0_csrbank_setup_data_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 2'd3));
assign usb0_csrbank_setup_ctrl0_r = usb0_csrbank_bus_dat_w[5:0];
assign usb0_csrbank_setup_ctrl0_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 3'd4));
assign usb0_csrbank_setup_ctrl0_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 3'd4));
assign usb0_csrbank_setup_status_r = usb0_csrbank_bus_dat_w[7:0];
assign usb0_csrbank_setup_status_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 3'd5));
assign usb0_csrbank_setup_status_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 3'd5));
assign usb0_setuphandler_eventmanager_status_r = usb0_csrbank_bus_dat_w[1:0];
assign usb0_setuphandler_eventmanager_status_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 3'd6));
assign usb0_setuphandler_eventmanager_status_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 3'd6));
assign usb0_setuphandler_eventmanager_pending_r = usb0_csrbank_bus_dat_w[1:0];
assign usb0_setuphandler_eventmanager_pending_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 3'd7));
assign usb0_setuphandler_eventmanager_pending_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 3'd7));
assign usb0_csrbank_setup_ev_enable0_r = usb0_csrbank_bus_dat_w[1:0];
assign usb0_csrbank_setup_ev_enable0_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 4'd8));
assign usb0_csrbank_setup_ev_enable0_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 4'd8));
assign usb0_csrbank_in_data0_r = usb0_csrbank_bus_dat_w[7:0];
assign usb0_csrbank_in_data0_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 4'd9));
assign usb0_csrbank_in_data0_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 4'd9));
assign usb0_csrbank_in_ctrl0_r = usb0_csrbank_bus_dat_w[6:0];
assign usb0_csrbank_in_ctrl0_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 4'd10));
assign usb0_csrbank_in_ctrl0_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 4'd10));
assign usb0_csrbank_in_status_r = usb0_csrbank_bus_dat_w[5:0];
assign usb0_csrbank_in_status_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 4'd11));
assign usb0_csrbank_in_status_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 4'd11));
assign usb0_inhandler_eventmanager_status_r = usb0_csrbank_bus_dat_w[0];
assign usb0_inhandler_eventmanager_status_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 4'd12));
assign usb0_inhandler_eventmanager_status_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 4'd12));
assign usb0_inhandler_eventmanager_pending_r = usb0_csrbank_bus_dat_w[0];
assign usb0_inhandler_eventmanager_pending_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 4'd13));
assign usb0_inhandler_eventmanager_pending_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 4'd13));
assign usb0_csrbank_in_ev_enable0_r = usb0_csrbank_bus_dat_w[0];
assign usb0_csrbank_in_ev_enable0_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 4'd14));
assign usb0_csrbank_in_ev_enable0_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 4'd14));
assign usb0_csrbank_out_data_r = usb0_csrbank_bus_dat_w[7:0];
assign usb0_csrbank_out_data_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 4'd15));
assign usb0_csrbank_out_data_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 4'd15));
assign usb0_csrbank_out_ctrl0_r = usb0_csrbank_bus_dat_w[6:0];
assign usb0_csrbank_out_ctrl0_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 5'd16));
assign usb0_csrbank_out_ctrl0_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 5'd16));
assign usb0_csrbank_out_status_r = usb0_csrbank_bus_dat_w[5:0];
assign usb0_csrbank_out_status_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 5'd17));
assign usb0_csrbank_out_status_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 5'd17));
assign usb0_outhandler_eventmanager_status_r = usb0_csrbank_bus_dat_w[0];
assign usb0_outhandler_eventmanager_status_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 5'd18));
assign usb0_outhandler_eventmanager_status_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 5'd18));
assign usb0_outhandler_eventmanager_pending_r = usb0_csrbank_bus_dat_w[0];
assign usb0_outhandler_eventmanager_pending_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 5'd19));
assign usb0_outhandler_eventmanager_pending_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 5'd19));
assign usb0_csrbank_out_ev_enable0_r = usb0_csrbank_bus_dat_w[0];
assign usb0_csrbank_out_ev_enable0_re = ((usb0_csrbank_sel & usb0_csrbank_bus_we) & (usb0_csrbank_bus_adr[4:0] == 5'd20));
assign usb0_csrbank_out_ev_enable0_we = ((usb0_csrbank_sel & (~usb0_csrbank_bus_we)) & (usb0_csrbank_bus_adr[4:0] == 5'd20));
assign usb0_csrbank_pullup_out0_w = usb0_pullup_storage;
assign usb0_csrfield_addr = usb0_csrstorage_storage[6:0];
assign usb0_csrbank_address0_w = usb0_csrstorage_storage[6:0];
always @(*) begin
	usb0_next_ev_status <= 4'd0;
	usb0_next_ev_status[0] <= usb0_csrfield_in;
	usb0_next_ev_status[1] <= usb0_csrfield_out;
	usb0_next_ev_status[2] <= usb0_csrfield_setup;
	usb0_next_ev_status[3] <= usb0_csrfield_reset;
end
assign usb0_csrbank_next_ev_w = usb0_next_ev_status[3:0];
assign usb0_next_ev_we = usb0_csrbank_next_ev_we;
assign usb0_next_ev_re = usb0_csrbank_next_ev_re;
assign usb0_setuphandler_data_status[7:0] = usb0_setuphandler_csrfield_data0;
assign usb0_csrbank_setup_data_w = usb0_setuphandler_data_status[7:0];
assign usb0_setuphandler_data_we = usb0_csrbank_setup_data_we;
assign usb0_setuphandler_data_re = usb0_csrbank_setup_data_re;
always @(*) begin
	usb0_setuphandler_csrfield_reset <= 1'd0;
	if (usb0_setuphandler_ctrl_re) begin
		usb0_setuphandler_csrfield_reset <= usb0_setuphandler_ctrl_storage[5];
	end
end
assign usb0_csrbank_setup_ctrl0_w = usb0_setuphandler_ctrl_storage[5:0];
always @(*) begin
	usb0_setuphandler_status_status <= 8'd0;
	usb0_setuphandler_status_status[3:0] <= usb0_setuphandler_csrfield_epno;
	usb0_setuphandler_status_status[4] <= usb0_setuphandler_csrfield_have;
	usb0_setuphandler_status_status[5] <= usb0_setuphandler_csrfield_pend;
	usb0_setuphandler_status_status[6] <= usb0_setuphandler_csrfield_is_in;
	usb0_setuphandler_status_status[7] <= usb0_setuphandler_csrfield_data1;
end
assign usb0_csrbank_setup_status_w = usb0_setuphandler_status_status[7:0];
assign usb0_setuphandler_status_we = usb0_csrbank_setup_status_we;
assign usb0_setuphandler_status_re = usb0_csrbank_setup_status_re;
assign usb0_csrbank_setup_ev_enable0_w = usb0_setuphandler_eventmanager_storage[1:0];
assign usb0_inhandler_csrfield_data = usb0_inhandler_data_storage[7:0];
assign usb0_csrbank_in_data0_w = usb0_inhandler_data_storage[7:0];
assign usb0_inhandler_csrfield_epno = usb0_inhandler_ctrl_storage[3:0];
always @(*) begin
	usb0_inhandler_csrfield_reset <= 1'd0;
	if (usb0_inhandler_ctrl_re) begin
		usb0_inhandler_csrfield_reset <= usb0_inhandler_ctrl_storage[5];
	end
end
always @(*) begin
	usb0_inhandler_csrfield_stall <= 1'd0;
	if (usb0_inhandler_ctrl_re) begin
		usb0_inhandler_csrfield_stall <= usb0_inhandler_ctrl_storage[6];
	end
end
assign usb0_csrbank_in_ctrl0_w = usb0_inhandler_ctrl_storage[6:0];
always @(*) begin
	usb0_inhandler_status_status <= 6'd0;
	usb0_inhandler_status_status[0] <= usb0_inhandler_csrfield_idle;
	usb0_inhandler_status_status[4] <= usb0_inhandler_csrfield_have;
	usb0_inhandler_status_status[5] <= usb0_inhandler_csrfield_pend;
end
assign usb0_csrbank_in_status_w = usb0_inhandler_status_status[5:0];
assign usb0_inhandler_status_we = usb0_csrbank_in_status_we;
assign usb0_inhandler_status_re = usb0_csrbank_in_status_re;
assign usb0_csrbank_in_ev_enable0_w = usb0_inhandler_eventmanager_storage;
assign usb0_outhandler_data_status[7:0] = usb0_outhandler_csrfield_data;
assign usb0_csrbank_out_data_w = usb0_outhandler_data_status[7:0];
assign usb0_outhandler_data_we = usb0_csrbank_out_data_we;
assign usb0_outhandler_data_re = usb0_csrbank_out_data_re;
assign usb0_outhandler_csrfield_epno0 = usb0_outhandler_ctrl_storage[3:0];
assign usb0_outhandler_csrfield_enable = usb0_outhandler_ctrl_storage[4];
always @(*) begin
	usb0_outhandler_csrfield_reset <= 1'd0;
	if (usb0_outhandler_ctrl_re) begin
		usb0_outhandler_csrfield_reset <= usb0_outhandler_ctrl_storage[5];
	end
end
assign usb0_outhandler_csrfield_stall = usb0_outhandler_ctrl_storage[6];
assign usb0_csrbank_out_ctrl0_w = usb0_outhandler_ctrl_storage[6:0];
always @(*) begin
	usb0_outhandler_status_status <= 6'd0;
	usb0_outhandler_status_status[3:0] <= usb0_outhandler_csrfield_epno1;
	usb0_outhandler_status_status[4] <= usb0_outhandler_csrfield_have;
	usb0_outhandler_status_status[5] <= usb0_outhandler_csrfield_pend;
end
assign usb0_csrbank_out_status_w = usb0_outhandler_status_status[5:0];
assign usb0_outhandler_status_we = usb0_csrbank_out_status_we;
assign usb0_outhandler_status_re = usb0_csrbank_out_status_re;
assign usb0_csrbank_out_ev_enable0_w = usb0_outhandler_eventmanager_storage;
assign usb0_asyncfifo0_asyncfifo0_din = {usb0_asyncfifo0_fifo_in_last, usb0_asyncfifo0_fifo_in_first, usb0_asyncfifo0_fifo_in_payload_we, usb0_asyncfifo0_fifo_in_payload_dat_w, usb0_asyncfifo0_fifo_in_payload_adr};
assign {usb0_asyncfifo0_fifo_out_last, usb0_asyncfifo0_fifo_out_first, usb0_asyncfifo0_fifo_out_payload_we, usb0_asyncfifo0_fifo_out_payload_dat_w, usb0_asyncfifo0_fifo_out_payload_adr} = usb0_asyncfifo0_asyncfifo0_dout;
assign usb0_asyncfifo0_sink_ready = usb0_asyncfifo0_asyncfifo0_writable;
assign usb0_asyncfifo0_asyncfifo0_we = usb0_asyncfifo0_sink_valid;
assign usb0_asyncfifo0_fifo_in_first = usb0_asyncfifo0_sink_first;
assign usb0_asyncfifo0_fifo_in_last = usb0_asyncfifo0_sink_last;
assign usb0_asyncfifo0_fifo_in_payload_adr = usb0_asyncfifo0_sink_payload_adr;
assign usb0_asyncfifo0_fifo_in_payload_dat_w = usb0_asyncfifo0_sink_payload_dat_w;
assign usb0_asyncfifo0_fifo_in_payload_we = usb0_asyncfifo0_sink_payload_we;
assign usb0_asyncfifo0_source_valid = usb0_asyncfifo0_asyncfifo0_readable;
assign usb0_asyncfifo0_source_first = usb0_asyncfifo0_fifo_out_first;
assign usb0_asyncfifo0_source_last = usb0_asyncfifo0_fifo_out_last;
assign usb0_asyncfifo0_source_payload_adr = usb0_asyncfifo0_fifo_out_payload_adr;
assign usb0_asyncfifo0_source_payload_dat_w = usb0_asyncfifo0_fifo_out_payload_dat_w;
assign usb0_asyncfifo0_source_payload_we = usb0_asyncfifo0_fifo_out_payload_we;
assign usb0_asyncfifo0_asyncfifo0_re = usb0_asyncfifo0_source_ready;
assign usb0_asyncfifo0_graycounter0_ce = (usb0_asyncfifo0_asyncfifo0_writable & usb0_asyncfifo0_asyncfifo0_we);
assign usb0_asyncfifo0_graycounter1_ce = (usb0_asyncfifo0_asyncfifo0_readable & usb0_asyncfifo0_asyncfifo0_re);
assign usb0_asyncfifo0_asyncfifo0_writable = (((usb0_asyncfifo0_graycounter0_q[6] == usb0_asyncfifo0_consume_wdomain[6]) | (usb0_asyncfifo0_graycounter0_q[5] == usb0_asyncfifo0_consume_wdomain[5])) | (usb0_asyncfifo0_graycounter0_q[4:0] != usb0_asyncfifo0_consume_wdomain[4:0]));
assign usb0_asyncfifo0_asyncfifo0_readable = (usb0_asyncfifo0_graycounter1_q != usb0_asyncfifo0_produce_rdomain);
assign usb0_asyncfifo0_wrport_adr = usb0_asyncfifo0_graycounter0_q_binary[5:0];
assign usb0_asyncfifo0_wrport_dat_w = usb0_asyncfifo0_asyncfifo0_din;
assign usb0_asyncfifo0_wrport_we = usb0_asyncfifo0_graycounter0_ce;
assign usb0_asyncfifo0_rdport_adr = usb0_asyncfifo0_graycounter1_q_next_binary[5:0];
assign usb0_asyncfifo0_asyncfifo0_dout = usb0_asyncfifo0_rdport_dat_r;
always @(*) begin
	usb0_asyncfifo0_graycounter0_q_next_binary <= 7'd0;
	if (usb0_asyncfifo0_graycounter0_ce) begin
		usb0_asyncfifo0_graycounter0_q_next_binary <= (usb0_asyncfifo0_graycounter0_q_binary + 1'd1);
	end else begin
		usb0_asyncfifo0_graycounter0_q_next_binary <= usb0_asyncfifo0_graycounter0_q_binary;
	end
end
assign usb0_asyncfifo0_graycounter0_q_next = (usb0_asyncfifo0_graycounter0_q_next_binary ^ usb0_asyncfifo0_graycounter0_q_next_binary[6:1]);
always @(*) begin
	usb0_asyncfifo0_graycounter1_q_next_binary <= 7'd0;
	if (usb0_asyncfifo0_graycounter1_ce) begin
		usb0_asyncfifo0_graycounter1_q_next_binary <= (usb0_asyncfifo0_graycounter1_q_binary + 1'd1);
	end else begin
		usb0_asyncfifo0_graycounter1_q_next_binary <= usb0_asyncfifo0_graycounter1_q_binary;
	end
end
assign usb0_asyncfifo0_graycounter1_q_next = (usb0_asyncfifo0_graycounter1_q_next_binary ^ usb0_asyncfifo0_graycounter1_q_next_binary[6:1]);
assign usb0_asyncfifo1_asyncfifo1_din = {usb0_asyncfifo1_fifo_in_last, usb0_asyncfifo1_fifo_in_first, usb0_asyncfifo1_fifo_in_payload_dat_r, usb0_asyncfifo1_fifo_in_payload_adr};
assign {usb0_asyncfifo1_fifo_out_last, usb0_asyncfifo1_fifo_out_first, usb0_asyncfifo1_fifo_out_payload_dat_r, usb0_asyncfifo1_fifo_out_payload_adr} = usb0_asyncfifo1_asyncfifo1_dout;
assign usb0_asyncfifo1_sink_ready = usb0_asyncfifo1_asyncfifo1_writable;
assign usb0_asyncfifo1_asyncfifo1_we = usb0_asyncfifo1_sink_valid;
assign usb0_asyncfifo1_fifo_in_first = usb0_asyncfifo1_sink_first;
assign usb0_asyncfifo1_fifo_in_last = usb0_asyncfifo1_sink_last;
assign usb0_asyncfifo1_fifo_in_payload_adr = usb0_asyncfifo1_sink_payload_adr;
assign usb0_asyncfifo1_fifo_in_payload_dat_r = usb0_asyncfifo1_sink_payload_dat_r;
assign usb0_asyncfifo1_source_valid = usb0_asyncfifo1_asyncfifo1_readable;
assign usb0_asyncfifo1_source_first = usb0_asyncfifo1_fifo_out_first;
assign usb0_asyncfifo1_source_last = usb0_asyncfifo1_fifo_out_last;
assign usb0_asyncfifo1_source_payload_adr = usb0_asyncfifo1_fifo_out_payload_adr;
assign usb0_asyncfifo1_source_payload_dat_r = usb0_asyncfifo1_fifo_out_payload_dat_r;
assign usb0_asyncfifo1_asyncfifo1_re = usb0_asyncfifo1_source_ready;
assign usb0_asyncfifo1_graycounter2_ce = (usb0_asyncfifo1_asyncfifo1_writable & usb0_asyncfifo1_asyncfifo1_we);
assign usb0_asyncfifo1_graycounter3_ce = (usb0_asyncfifo1_asyncfifo1_readable & usb0_asyncfifo1_asyncfifo1_re);
assign usb0_asyncfifo1_asyncfifo1_writable = (((usb0_asyncfifo1_graycounter2_q[6] == usb0_asyncfifo1_consume_wdomain[6]) | (usb0_asyncfifo1_graycounter2_q[5] == usb0_asyncfifo1_consume_wdomain[5])) | (usb0_asyncfifo1_graycounter2_q[4:0] != usb0_asyncfifo1_consume_wdomain[4:0]));
assign usb0_asyncfifo1_asyncfifo1_readable = (usb0_asyncfifo1_graycounter3_q != usb0_asyncfifo1_produce_rdomain);
assign usb0_asyncfifo1_wrport_adr = usb0_asyncfifo1_graycounter2_q_binary[5:0];
assign usb0_asyncfifo1_wrport_dat_w = usb0_asyncfifo1_asyncfifo1_din;
assign usb0_asyncfifo1_wrport_we = usb0_asyncfifo1_graycounter2_ce;
assign usb0_asyncfifo1_rdport_adr = usb0_asyncfifo1_graycounter3_q_next_binary[5:0];
assign usb0_asyncfifo1_asyncfifo1_dout = usb0_asyncfifo1_rdport_dat_r;
always @(*) begin
	usb0_asyncfifo1_graycounter2_q_next_binary <= 7'd0;
	if (usb0_asyncfifo1_graycounter2_ce) begin
		usb0_asyncfifo1_graycounter2_q_next_binary <= (usb0_asyncfifo1_graycounter2_q_binary + 1'd1);
	end else begin
		usb0_asyncfifo1_graycounter2_q_next_binary <= usb0_asyncfifo1_graycounter2_q_binary;
	end
end
assign usb0_asyncfifo1_graycounter2_q_next = (usb0_asyncfifo1_graycounter2_q_next_binary ^ usb0_asyncfifo1_graycounter2_q_next_binary[6:1]);
always @(*) begin
	usb0_asyncfifo1_graycounter3_q_next_binary <= 7'd0;
	if (usb0_asyncfifo1_graycounter3_ce) begin
		usb0_asyncfifo1_graycounter3_q_next_binary <= (usb0_asyncfifo1_graycounter3_q_binary + 1'd1);
	end else begin
		usb0_asyncfifo1_graycounter3_q_next_binary <= usb0_asyncfifo1_graycounter3_q_binary;
	end
end
assign usb0_asyncfifo1_graycounter3_q_next = (usb0_asyncfifo1_graycounter3_q_next_binary ^ usb0_asyncfifo1_graycounter3_q_next_binary[6:1]);
always @(*) begin
	basesoc_basesoc_we_basesoc_next_value_ce2 <= 1'd0;
	basesoc_basesoc_wishbone_ack <= 1'd0;
	basesoc_next_state <= 2'd0;
	basesoc_basesoc_dat_w_basesoc_next_value0 <= 32'd0;
	basesoc_basesoc_dat_w_basesoc_next_value_ce0 <= 1'd0;
	basesoc_basesoc_adr_basesoc_next_value1 <= 14'd0;
	basesoc_basesoc_adr_basesoc_next_value_ce1 <= 1'd0;
	basesoc_basesoc_wishbone_dat_r <= 32'd0;
	basesoc_basesoc_we_basesoc_next_value2 <= 1'd0;
	basesoc_next_state <= basesoc_state;
	case (basesoc_state)
		1'd1: begin
			basesoc_basesoc_adr_basesoc_next_value1 <= 1'd0;
			basesoc_basesoc_adr_basesoc_next_value_ce1 <= 1'd1;
			basesoc_basesoc_we_basesoc_next_value2 <= 1'd0;
			basesoc_basesoc_we_basesoc_next_value_ce2 <= 1'd1;
			basesoc_next_state <= 2'd2;
		end
		2'd2: begin
			basesoc_basesoc_wishbone_ack <= 1'd1;
			basesoc_basesoc_wishbone_dat_r <= basesoc_basesoc_dat_r;
			basesoc_next_state <= 1'd0;
		end
		default: begin
			basesoc_basesoc_dat_w_basesoc_next_value0 <= basesoc_basesoc_wishbone_dat_w;
			basesoc_basesoc_dat_w_basesoc_next_value_ce0 <= 1'd1;
			if ((basesoc_basesoc_wishbone_cyc & basesoc_basesoc_wishbone_stb)) begin
				basesoc_basesoc_adr_basesoc_next_value1 <= basesoc_basesoc_wishbone_adr;
				basesoc_basesoc_adr_basesoc_next_value_ce1 <= 1'd1;
				basesoc_basesoc_we_basesoc_next_value2 <= (basesoc_basesoc_wishbone_we & (basesoc_basesoc_wishbone_sel != 1'd0));
				basesoc_basesoc_we_basesoc_next_value_ce2 <= 1'd1;
				basesoc_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_shared_adr = rhs_array_muxed36;
assign basesoc_shared_dat_w = rhs_array_muxed37;
assign basesoc_shared_sel = rhs_array_muxed38;
assign basesoc_shared_cyc = rhs_array_muxed39;
assign basesoc_shared_stb = rhs_array_muxed40;
assign basesoc_shared_we = rhs_array_muxed41;
assign basesoc_shared_cti = rhs_array_muxed42;
assign basesoc_shared_bte = rhs_array_muxed43;
assign cpu_ibus_dat_r = basesoc_shared_dat_r;
assign cpu_dbus_dat_r = basesoc_shared_dat_r;
assign cpu_ibus_ack = (basesoc_shared_ack & (basesoc_grant == 1'd0));
assign cpu_dbus_ack = (basesoc_shared_ack & (basesoc_grant == 1'd1));
assign cpu_ibus_err = (basesoc_shared_err & (basesoc_grant == 1'd0));
assign cpu_dbus_err = (basesoc_shared_err & (basesoc_grant == 1'd1));
assign basesoc_request = {cpu_dbus_cyc, cpu_ibus_cyc};
always @(*) begin
	basesoc_slave_sel <= 6'd0;
	basesoc_slave_sel[0] <= (basesoc_shared_adr[29:13] == 1'd0);
	basesoc_slave_sel[1] <= (basesoc_shared_adr[29:11] == 12'd2048);
	basesoc_slave_sel[2] <= (basesoc_shared_adr[29:25] == 4'd8);
	basesoc_slave_sel[3] <= (basesoc_shared_adr[29:22] == 6'd32);
	basesoc_slave_sel[4] <= (basesoc_shared_adr[29:10] == 20'd589824);
	basesoc_slave_sel[5] <= (basesoc_shared_adr[29:14] == 16'd33280);
end
assign basesoc_ram_bus_adr = basesoc_shared_adr;
assign basesoc_ram_bus_dat_w = basesoc_shared_dat_w;
assign basesoc_ram_bus_sel = basesoc_shared_sel;
assign basesoc_ram_bus_stb = basesoc_shared_stb;
assign basesoc_ram_bus_we = basesoc_shared_we;
assign basesoc_ram_bus_cti = basesoc_shared_cti;
assign basesoc_ram_bus_bte = basesoc_shared_bte;
assign ram_bus_ram_bus_adr = basesoc_shared_adr;
assign ram_bus_ram_bus_dat_w = basesoc_shared_dat_w;
assign ram_bus_ram_bus_sel = basesoc_shared_sel;
assign ram_bus_ram_bus_stb = basesoc_shared_stb;
assign ram_bus_ram_bus_we = basesoc_shared_we;
assign ram_bus_ram_bus_cti = basesoc_shared_cti;
assign ram_bus_ram_bus_bte = basesoc_shared_bte;
assign wb_sdram_adr = basesoc_shared_adr;
assign wb_sdram_dat_w = basesoc_shared_dat_w;
assign wb_sdram_sel = basesoc_shared_sel;
assign wb_sdram_stb = basesoc_shared_stb;
assign wb_sdram_we = basesoc_shared_we;
assign wb_sdram_cti = basesoc_shared_cti;
assign wb_sdram_bte = basesoc_shared_bte;
assign lxspi_bus_adr = basesoc_shared_adr;
assign lxspi_bus_dat_w = basesoc_shared_dat_w;
assign lxspi_bus_sel = basesoc_shared_sel;
assign lxspi_bus_stb = basesoc_shared_stb;
assign lxspi_bus_we = basesoc_shared_we;
assign lxspi_bus_cti = basesoc_shared_cti;
assign lxspi_bus_bte = basesoc_shared_bte;
assign usb0_bus_bus_adr = basesoc_shared_adr;
assign usb0_bus_bus_dat_w = basesoc_shared_dat_w;
assign usb0_bus_bus_sel = basesoc_shared_sel;
assign usb0_bus_bus_stb = basesoc_shared_stb;
assign usb0_bus_bus_we = basesoc_shared_we;
assign usb0_bus_bus_cti = basesoc_shared_cti;
assign usb0_bus_bus_bte = basesoc_shared_bte;
assign basesoc_basesoc_wishbone_adr = basesoc_shared_adr;
assign basesoc_basesoc_wishbone_dat_w = basesoc_shared_dat_w;
assign basesoc_basesoc_wishbone_sel = basesoc_shared_sel;
assign basesoc_basesoc_wishbone_stb = basesoc_shared_stb;
assign basesoc_basesoc_wishbone_we = basesoc_shared_we;
assign basesoc_basesoc_wishbone_cti = basesoc_shared_cti;
assign basesoc_basesoc_wishbone_bte = basesoc_shared_bte;
assign basesoc_ram_bus_cyc = (basesoc_shared_cyc & basesoc_slave_sel[0]);
assign ram_bus_ram_bus_cyc = (basesoc_shared_cyc & basesoc_slave_sel[1]);
assign wb_sdram_cyc = (basesoc_shared_cyc & basesoc_slave_sel[2]);
assign lxspi_bus_cyc = (basesoc_shared_cyc & basesoc_slave_sel[3]);
assign usb0_bus_bus_cyc = (basesoc_shared_cyc & basesoc_slave_sel[4]);
assign basesoc_basesoc_wishbone_cyc = (basesoc_shared_cyc & basesoc_slave_sel[5]);
assign basesoc_shared_err = (((((basesoc_ram_bus_err | ram_bus_ram_bus_err) | wb_sdram_err) | lxspi_bus_err) | usb0_bus_bus_err) | basesoc_basesoc_wishbone_err);
assign basesoc_wait = ((basesoc_shared_stb & basesoc_shared_cyc) & (~basesoc_shared_ack));
always @(*) begin
	basesoc_shared_dat_r <= 32'd0;
	basesoc_shared_ack <= 1'd0;
	basesoc_error <= 1'd0;
	basesoc_shared_ack <= (((((basesoc_ram_bus_ack | ram_bus_ram_bus_ack) | wb_sdram_ack) | lxspi_bus_ack) | usb0_bus_bus_ack) | basesoc_basesoc_wishbone_ack);
	basesoc_shared_dat_r <= (((((({32{basesoc_slave_sel_r[0]}} & basesoc_ram_bus_dat_r) | ({32{basesoc_slave_sel_r[1]}} & ram_bus_ram_bus_dat_r)) | ({32{basesoc_slave_sel_r[2]}} & wb_sdram_dat_r)) | ({32{basesoc_slave_sel_r[3]}} & lxspi_bus_dat_r)) | ({32{basesoc_slave_sel_r[4]}} & usb0_bus_bus_dat_r)) | ({32{basesoc_slave_sel_r[5]}} & basesoc_basesoc_wishbone_dat_r));
	if (basesoc_done) begin
		basesoc_shared_dat_r <= 32'd4294967295;
		basesoc_shared_ack <= 1'd1;
		basesoc_error <= 1'd1;
	end
end
assign basesoc_done = (basesoc_count == 1'd0);
assign basesoc_csrbank0_sel = (basesoc_interface0_bank_bus_adr[13:9] == 5'd17);
assign basesoc_csrbank0_in_r = basesoc_interface0_bank_bus_dat_w[0];
assign basesoc_csrbank0_in_re = ((basesoc_csrbank0_sel & basesoc_interface0_bank_bus_we) & (basesoc_interface0_bank_bus_adr[0] == 1'd0));
assign basesoc_csrbank0_in_we = ((basesoc_csrbank0_sel & (~basesoc_interface0_bank_bus_we)) & (basesoc_interface0_bank_bus_adr[0] == 1'd0));
assign basesoc_csrbank0_in_w = status;
assign we = basesoc_csrbank0_in_we;
assign re = basesoc_csrbank0_in_re;
assign basesoc_csrbank1_sel = (basesoc_interface1_bank_bus_adr[13:9] == 1'd0);
assign basesoc_csrbank1_reset0_r = basesoc_interface1_bank_bus_dat_w[0];
assign basesoc_csrbank1_reset0_re = ((basesoc_csrbank1_sel & basesoc_interface1_bank_bus_we) & (basesoc_interface1_bank_bus_adr[1:0] == 1'd0));
assign basesoc_csrbank1_reset0_we = ((basesoc_csrbank1_sel & (~basesoc_interface1_bank_bus_we)) & (basesoc_interface1_bank_bus_adr[1:0] == 1'd0));
assign basesoc_csrbank1_scratch0_r = basesoc_interface1_bank_bus_dat_w[31:0];
assign basesoc_csrbank1_scratch0_re = ((basesoc_csrbank1_sel & basesoc_interface1_bank_bus_we) & (basesoc_interface1_bank_bus_adr[1:0] == 1'd1));
assign basesoc_csrbank1_scratch0_we = ((basesoc_csrbank1_sel & (~basesoc_interface1_bank_bus_we)) & (basesoc_interface1_bank_bus_adr[1:0] == 1'd1));
assign basesoc_csrbank1_bus_errors_r = basesoc_interface1_bank_bus_dat_w[31:0];
assign basesoc_csrbank1_bus_errors_re = ((basesoc_csrbank1_sel & basesoc_interface1_bank_bus_we) & (basesoc_interface1_bank_bus_adr[1:0] == 2'd2));
assign basesoc_csrbank1_bus_errors_we = ((basesoc_csrbank1_sel & (~basesoc_interface1_bank_bus_we)) & (basesoc_interface1_bank_bus_adr[1:0] == 2'd2));
assign basesoc_csrbank1_reset0_w = soccontroller_reset_storage;
assign basesoc_csrbank1_scratch0_w = soccontroller_scratch_storage[31:0];
assign basesoc_csrbank1_bus_errors_w = soccontroller_bus_errors_status[31:0];
assign soccontroller_bus_errors_we = basesoc_csrbank1_bus_errors_we;
assign soccontroller_bus_errors_re = basesoc_csrbank1_bus_errors_re;
assign basesoc_csrbank2_sel = (basesoc_interface2_bank_bus_adr[13:9] == 3'd7);
assign basesoc_csrbank2_dly_sel0_r = basesoc_interface2_bank_bus_dat_w[1:0];
assign basesoc_csrbank2_dly_sel0_re = ((basesoc_csrbank2_sel & basesoc_interface2_bank_bus_we) & (basesoc_interface2_bank_bus_adr[2:0] == 1'd0));
assign basesoc_csrbank2_dly_sel0_we = ((basesoc_csrbank2_sel & (~basesoc_interface2_bank_bus_we)) & (basesoc_interface2_bank_bus_adr[2:0] == 1'd0));
assign ddrphy_rdly_dq_rst_r = basesoc_interface2_bank_bus_dat_w[0];
assign ddrphy_rdly_dq_rst_re = ((basesoc_csrbank2_sel & basesoc_interface2_bank_bus_we) & (basesoc_interface2_bank_bus_adr[2:0] == 1'd1));
assign ddrphy_rdly_dq_rst_we = ((basesoc_csrbank2_sel & (~basesoc_interface2_bank_bus_we)) & (basesoc_interface2_bank_bus_adr[2:0] == 1'd1));
assign ddrphy_rdly_dq_inc_r = basesoc_interface2_bank_bus_dat_w[0];
assign ddrphy_rdly_dq_inc_re = ((basesoc_csrbank2_sel & basesoc_interface2_bank_bus_we) & (basesoc_interface2_bank_bus_adr[2:0] == 2'd2));
assign ddrphy_rdly_dq_inc_we = ((basesoc_csrbank2_sel & (~basesoc_interface2_bank_bus_we)) & (basesoc_interface2_bank_bus_adr[2:0] == 2'd2));
assign ddrphy_rdly_dq_bitslip_rst_r = basesoc_interface2_bank_bus_dat_w[0];
assign ddrphy_rdly_dq_bitslip_rst_re = ((basesoc_csrbank2_sel & basesoc_interface2_bank_bus_we) & (basesoc_interface2_bank_bus_adr[2:0] == 2'd3));
assign ddrphy_rdly_dq_bitslip_rst_we = ((basesoc_csrbank2_sel & (~basesoc_interface2_bank_bus_we)) & (basesoc_interface2_bank_bus_adr[2:0] == 2'd3));
assign ddrphy_rdly_dq_bitslip_r = basesoc_interface2_bank_bus_dat_w[0];
assign ddrphy_rdly_dq_bitslip_re = ((basesoc_csrbank2_sel & basesoc_interface2_bank_bus_we) & (basesoc_interface2_bank_bus_adr[2:0] == 3'd4));
assign ddrphy_rdly_dq_bitslip_we = ((basesoc_csrbank2_sel & (~basesoc_interface2_bank_bus_we)) & (basesoc_interface2_bank_bus_adr[2:0] == 3'd4));
assign ddrphy_burstdet_clr_r = basesoc_interface2_bank_bus_dat_w[0];
assign ddrphy_burstdet_clr_re = ((basesoc_csrbank2_sel & basesoc_interface2_bank_bus_we) & (basesoc_interface2_bank_bus_adr[2:0] == 3'd5));
assign ddrphy_burstdet_clr_we = ((basesoc_csrbank2_sel & (~basesoc_interface2_bank_bus_we)) & (basesoc_interface2_bank_bus_adr[2:0] == 3'd5));
assign basesoc_csrbank2_burstdet_seen_r = basesoc_interface2_bank_bus_dat_w[1:0];
assign basesoc_csrbank2_burstdet_seen_re = ((basesoc_csrbank2_sel & basesoc_interface2_bank_bus_we) & (basesoc_interface2_bank_bus_adr[2:0] == 3'd6));
assign basesoc_csrbank2_burstdet_seen_we = ((basesoc_csrbank2_sel & (~basesoc_interface2_bank_bus_we)) & (basesoc_interface2_bank_bus_adr[2:0] == 3'd6));
assign basesoc_csrbank2_dly_sel0_w = ddrphy_dly_sel_storage[1:0];
assign basesoc_csrbank2_burstdet_seen_w = ddrphy_burstdet_seen_status[1:0];
assign ddrphy_burstdet_seen_we = basesoc_csrbank2_burstdet_seen_we;
assign ddrphy_burstdet_seen_re = basesoc_csrbank2_burstdet_seen_re;
assign basesoc_csrbank3_sel = (basesoc_interface3_bank_bus_adr[13:9] == 4'd11);
assign basesoc_csrbank3_oe0_r = basesoc_interface3_bank_bus_dat_w[21:0];
assign basesoc_csrbank3_oe0_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 1'd0));
assign basesoc_csrbank3_oe0_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 1'd0));
assign basesoc_csrbank3_in_r = basesoc_interface3_bank_bus_dat_w[21:0];
assign basesoc_csrbank3_in_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 1'd1));
assign basesoc_csrbank3_in_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 1'd1));
assign basesoc_csrbank3_out0_r = basesoc_interface3_bank_bus_dat_w[21:0];
assign basesoc_csrbank3_out0_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 2'd2));
assign basesoc_csrbank3_out0_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 2'd2));
assign basesoc_csrbank3_alt00_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt00_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 2'd3));
assign basesoc_csrbank3_alt00_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 2'd3));
assign basesoc_csrbank3_alt10_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt10_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 3'd4));
assign basesoc_csrbank3_alt10_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 3'd4));
assign basesoc_csrbank3_alt50_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt50_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 3'd5));
assign basesoc_csrbank3_alt50_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 3'd5));
assign basesoc_csrbank3_alt60_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt60_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 3'd6));
assign basesoc_csrbank3_alt60_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 3'd6));
assign basesoc_csrbank3_alt90_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt90_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 3'd7));
assign basesoc_csrbank3_alt90_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 3'd7));
assign basesoc_csrbank3_alt100_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt100_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd8));
assign basesoc_csrbank3_alt100_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd8));
assign basesoc_csrbank3_alt110_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt110_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd9));
assign basesoc_csrbank3_alt110_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd9));
assign basesoc_csrbank3_alt120_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt120_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd10));
assign basesoc_csrbank3_alt120_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd10));
assign basesoc_csrbank3_alt130_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt130_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd11));
assign basesoc_csrbank3_alt130_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd11));
assign basesoc_csrbank3_alt180_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt180_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd12));
assign basesoc_csrbank3_alt180_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd12));
assign basesoc_csrbank3_alt190_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt190_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd13));
assign basesoc_csrbank3_alt190_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd13));
assign basesoc_csrbank3_alt200_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt200_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd14));
assign basesoc_csrbank3_alt200_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd14));
assign basesoc_csrbank3_alt210_r = basesoc_interface3_bank_bus_dat_w[7:0];
assign basesoc_csrbank3_alt210_re = ((basesoc_csrbank3_sel & basesoc_interface3_bank_bus_we) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd15));
assign basesoc_csrbank3_alt210_we = ((basesoc_csrbank3_sel & (~basesoc_interface3_bank_bus_we)) & (basesoc_interface3_bank_bus_adr[3:0] == 4'd15));
assign basesoc_csrbank3_oe0_w = oe_storage[21:0];
always @(*) begin
	in_status <= 22'd0;
	in_status <= record0_i;
	in_status <= record1_i;
	in_status <= record2_i;
	in_status <= record3_i;
	in_status <= record4_i;
	in_status <= record5_i;
	in_status <= record6_i;
	in_status <= record7_i;
	in_status <= record8_i;
	in_status <= record9_i;
	in_status <= record10_i;
	in_status <= record11_i;
	in_status <= record12_i;
	in_status[0] <= io0;
	in_status[1] <= io1;
	in_status[5] <= io5;
	in_status[6] <= io6;
	in_status[9] <= io9;
	in_status[10] <= io10;
	in_status[11] <= io11;
	in_status[12] <= io12;
	in_status[13] <= io13;
	in_status[18] <= io18;
	in_status[19] <= io19;
	in_status[20] <= io20;
	in_status[21] <= io21;
end
assign basesoc_csrbank3_in_w = in_status[21:0];
assign in_we = basesoc_csrbank3_in_we;
assign in_re = basesoc_csrbank3_in_re;
always @(*) begin
	io0 <= 1'd0;
	io0 <= oe_storage[0];
	io0 <= out_storage[0];
end
always @(*) begin
	io1 <= 1'd0;
	io1 <= oe_storage[1];
	io1 <= out_storage[1];
end
always @(*) begin
	io5 <= 1'd0;
	io5 <= oe_storage[5];
	io5 <= out_storage[5];
end
always @(*) begin
	io6 <= 1'd0;
	io6 <= oe_storage[6];
	io6 <= out_storage[6];
end
always @(*) begin
	io9 <= 1'd0;
	io9 <= oe_storage[9];
	io9 <= out_storage[9];
end
always @(*) begin
	io10 <= 1'd0;
	io10 <= oe_storage[10];
	io10 <= out_storage[10];
end
always @(*) begin
	io11 <= 1'd0;
	io11 <= oe_storage[11];
	io11 <= out_storage[11];
end
always @(*) begin
	io12 <= 1'd0;
	io12 <= oe_storage[12];
	io12 <= out_storage[12];
end
always @(*) begin
	io13 <= 1'd0;
	io13 <= oe_storage[13];
	io13 <= out_storage[13];
end
always @(*) begin
	io18 <= 1'd0;
	io18 <= oe_storage[18];
	io18 <= out_storage[18];
end
always @(*) begin
	io19 <= 1'd0;
	io19 <= oe_storage[19];
	io19 <= out_storage[19];
end
always @(*) begin
	io20 <= 1'd0;
	io20 <= oe_storage[20];
	io20 <= out_storage[20];
end
always @(*) begin
	io21 <= 1'd0;
	io21 <= oe_storage[21];
	io21 <= out_storage[21];
end
assign basesoc_csrbank3_out0_w = out_storage[21:0];
assign basesoc_csrbank3_alt00_w = subfragments_csrstorage0_storage[7:0];
assign basesoc_csrbank3_alt10_w = subfragments_csrstorage1_storage[7:0];
assign basesoc_csrbank3_alt50_w = subfragments_csrstorage2_storage[7:0];
assign basesoc_csrbank3_alt60_w = subfragments_csrstorage3_storage[7:0];
assign basesoc_csrbank3_alt90_w = subfragments_csrstorage4_storage[7:0];
assign basesoc_csrbank3_alt100_w = subfragments_csrstorage5_storage[7:0];
assign basesoc_csrbank3_alt110_w = subfragments_csrstorage6_storage[7:0];
assign basesoc_csrbank3_alt120_w = subfragments_csrstorage7_storage[7:0];
assign basesoc_csrbank3_alt130_w = subfragments_csrstorage8_storage[7:0];
assign basesoc_csrbank3_alt180_w = subfragments_csrstorage9_storage[7:0];
assign basesoc_csrbank3_alt190_w = subfragments_csrstorage10_storage[7:0];
assign basesoc_csrbank3_alt200_w = subfragments_csrstorage11_storage[7:0];
always @(*) begin
	subfragments_ctrl <= 8'd0;
	subfragments_ctrl <= subfragments_csrstorage0_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage1_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage2_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage3_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage4_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage5_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage6_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage7_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage8_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage9_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage10_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage11_storage[7:0];
	subfragments_ctrl <= subfragments_csrstorage12_storage[7:0];
end
assign basesoc_csrbank3_alt210_w = subfragments_csrstorage12_storage[7:0];
assign basesoc_csrbank4_sel = (basesoc_interface4_bank_bus_adr[13:9] == 4'd15);
assign basesoc_csrbank4_bitbang0_r = basesoc_interface4_bank_bus_dat_w[3:0];
assign basesoc_csrbank4_bitbang0_re = ((basesoc_csrbank4_sel & basesoc_interface4_bank_bus_we) & (basesoc_interface4_bank_bus_adr[1:0] == 1'd0));
assign basesoc_csrbank4_bitbang0_we = ((basesoc_csrbank4_sel & (~basesoc_interface4_bank_bus_we)) & (basesoc_interface4_bank_bus_adr[1:0] == 1'd0));
assign basesoc_csrbank4_miso_r = basesoc_interface4_bank_bus_dat_w[0];
assign basesoc_csrbank4_miso_re = ((basesoc_csrbank4_sel & basesoc_interface4_bank_bus_we) & (basesoc_interface4_bank_bus_adr[1:0] == 1'd1));
assign basesoc_csrbank4_miso_we = ((basesoc_csrbank4_sel & (~basesoc_interface4_bank_bus_we)) & (basesoc_interface4_bank_bus_adr[1:0] == 1'd1));
assign basesoc_csrbank4_bitbang_en0_r = basesoc_interface4_bank_bus_dat_w[0];
assign basesoc_csrbank4_bitbang_en0_re = ((basesoc_csrbank4_sel & basesoc_interface4_bank_bus_we) & (basesoc_interface4_bank_bus_adr[1:0] == 2'd2));
assign basesoc_csrbank4_bitbang_en0_we = ((basesoc_csrbank4_sel & (~basesoc_interface4_bank_bus_we)) & (basesoc_interface4_bank_bus_adr[1:0] == 2'd2));
assign lxspi_csrfield_mosi = lxspi_bitbang_storage[0];
assign lxspi_csrfield_clk = lxspi_bitbang_storage[1];
assign lxspi_csrfield_cs_n = lxspi_bitbang_storage[2];
assign lxspi_csrfield_dir = lxspi_bitbang_storage[3];
assign basesoc_csrbank4_bitbang0_w = lxspi_bitbang_storage[3:0];
assign basesoc_csrbank4_miso_w = lxspi_miso_status;
assign lxspi_miso_we = basesoc_csrbank4_miso_we;
assign lxspi_miso_re = basesoc_csrbank4_miso_re;
assign basesoc_csrbank4_bitbang_en0_w = lxspi_bitbang_en_storage;
assign basesoc_csrbank5_sel = (basesoc_interface5_bank_bus_adr[13:9] == 4'd10);
assign basesoc_csrbank5_r0_r = basesoc_interface5_bank_bus_dat_w[7:0];
assign basesoc_csrbank5_r0_re = ((basesoc_csrbank5_sel & basesoc_interface5_bank_bus_we) & (basesoc_interface5_bank_bus_adr[2:0] == 1'd0));
assign basesoc_csrbank5_r0_we = ((basesoc_csrbank5_sel & (~basesoc_interface5_bank_bus_we)) & (basesoc_interface5_bank_bus_adr[2:0] == 1'd0));
assign basesoc_csrbank5_g0_r = basesoc_interface5_bank_bus_dat_w[7:0];
assign basesoc_csrbank5_g0_re = ((basesoc_csrbank5_sel & basesoc_interface5_bank_bus_we) & (basesoc_interface5_bank_bus_adr[2:0] == 1'd1));
assign basesoc_csrbank5_g0_we = ((basesoc_csrbank5_sel & (~basesoc_interface5_bank_bus_we)) & (basesoc_interface5_bank_bus_adr[2:0] == 1'd1));
assign basesoc_csrbank5_b0_r = basesoc_interface5_bank_bus_dat_w[7:0];
assign basesoc_csrbank5_b0_re = ((basesoc_csrbank5_sel & basesoc_interface5_bank_bus_we) & (basesoc_interface5_bank_bus_adr[2:0] == 2'd2));
assign basesoc_csrbank5_b0_we = ((basesoc_csrbank5_sel & (~basesoc_interface5_bank_bus_we)) & (basesoc_interface5_bank_bus_adr[2:0] == 2'd2));
assign basesoc_csrbank5_div_m0_r = basesoc_interface5_bank_bus_dat_w[31:0];
assign basesoc_csrbank5_div_m0_re = ((basesoc_csrbank5_sel & basesoc_interface5_bank_bus_we) & (basesoc_interface5_bank_bus_adr[2:0] == 2'd3));
assign basesoc_csrbank5_div_m0_we = ((basesoc_csrbank5_sel & (~basesoc_interface5_bank_bus_we)) & (basesoc_interface5_bank_bus_adr[2:0] == 2'd3));
assign basesoc_csrbank5_config0_r = basesoc_interface5_bank_bus_dat_w[1:0];
assign basesoc_csrbank5_config0_re = ((basesoc_csrbank5_sel & basesoc_interface5_bank_bus_we) & (basesoc_interface5_bank_bus_adr[2:0] == 3'd4));
assign basesoc_csrbank5_config0_we = ((basesoc_csrbank5_sel & (~basesoc_interface5_bank_bus_we)) & (basesoc_interface5_bank_bus_adr[2:0] == 3'd4));
assign basesoc_csrbank5_r0_w = r_storage[7:0];
assign basesoc_csrbank5_g0_w = g_storage[7:0];
assign basesoc_csrbank5_b0_w = b_storage[7:0];
assign basesoc_csrbank5_div_m0_w = div_m_storage[31:0];
assign breath = config_storage[0];
assign rainbow = config_storage[1];
assign basesoc_csrbank5_config0_w = config_storage[1:0];
assign basesoc_csrbank6_sel = (basesoc_interface6_bank_bus_adr[13:9] == 4'd8);
assign basesoc_csrbank6_dfii_control0_r = basesoc_interface6_bank_bus_dat_w[3:0];
assign basesoc_csrbank6_dfii_control0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 1'd0));
assign basesoc_csrbank6_dfii_control0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 1'd0));
assign basesoc_csrbank6_dfii_pi0_command0_r = basesoc_interface6_bank_bus_dat_w[5:0];
assign basesoc_csrbank6_dfii_pi0_command0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 1'd1));
assign basesoc_csrbank6_dfii_pi0_command0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 1'd1));
assign sdram_phaseinjector0_command_issue_r = basesoc_interface6_bank_bus_dat_w[0];
assign sdram_phaseinjector0_command_issue_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 2'd2));
assign sdram_phaseinjector0_command_issue_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 2'd2));
assign basesoc_csrbank6_dfii_pi0_address0_r = basesoc_interface6_bank_bus_dat_w[12:0];
assign basesoc_csrbank6_dfii_pi0_address0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 2'd3));
assign basesoc_csrbank6_dfii_pi0_address0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 2'd3));
assign basesoc_csrbank6_dfii_pi0_baddress0_r = basesoc_interface6_bank_bus_dat_w[2:0];
assign basesoc_csrbank6_dfii_pi0_baddress0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 3'd4));
assign basesoc_csrbank6_dfii_pi0_baddress0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 3'd4));
assign basesoc_csrbank6_dfii_pi0_wrdata1_r = basesoc_interface6_bank_bus_dat_w[31:0];
assign basesoc_csrbank6_dfii_pi0_wrdata1_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 3'd5));
assign basesoc_csrbank6_dfii_pi0_wrdata1_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 3'd5));
assign basesoc_csrbank6_dfii_pi0_wrdata0_r = basesoc_interface6_bank_bus_dat_w[31:0];
assign basesoc_csrbank6_dfii_pi0_wrdata0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 3'd6));
assign basesoc_csrbank6_dfii_pi0_wrdata0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 3'd6));
assign basesoc_csrbank6_dfii_pi0_rddata1_r = basesoc_interface6_bank_bus_dat_w[31:0];
assign basesoc_csrbank6_dfii_pi0_rddata1_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 3'd7));
assign basesoc_csrbank6_dfii_pi0_rddata1_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 3'd7));
assign basesoc_csrbank6_dfii_pi0_rddata0_r = basesoc_interface6_bank_bus_dat_w[31:0];
assign basesoc_csrbank6_dfii_pi0_rddata0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd8));
assign basesoc_csrbank6_dfii_pi0_rddata0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd8));
assign basesoc_csrbank6_dfii_pi1_command0_r = basesoc_interface6_bank_bus_dat_w[5:0];
assign basesoc_csrbank6_dfii_pi1_command0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd9));
assign basesoc_csrbank6_dfii_pi1_command0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd9));
assign sdram_phaseinjector1_command_issue_r = basesoc_interface6_bank_bus_dat_w[0];
assign sdram_phaseinjector1_command_issue_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd10));
assign sdram_phaseinjector1_command_issue_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd10));
assign basesoc_csrbank6_dfii_pi1_address0_r = basesoc_interface6_bank_bus_dat_w[12:0];
assign basesoc_csrbank6_dfii_pi1_address0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd11));
assign basesoc_csrbank6_dfii_pi1_address0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd11));
assign basesoc_csrbank6_dfii_pi1_baddress0_r = basesoc_interface6_bank_bus_dat_w[2:0];
assign basesoc_csrbank6_dfii_pi1_baddress0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd12));
assign basesoc_csrbank6_dfii_pi1_baddress0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd12));
assign basesoc_csrbank6_dfii_pi1_wrdata1_r = basesoc_interface6_bank_bus_dat_w[31:0];
assign basesoc_csrbank6_dfii_pi1_wrdata1_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd13));
assign basesoc_csrbank6_dfii_pi1_wrdata1_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd13));
assign basesoc_csrbank6_dfii_pi1_wrdata0_r = basesoc_interface6_bank_bus_dat_w[31:0];
assign basesoc_csrbank6_dfii_pi1_wrdata0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd14));
assign basesoc_csrbank6_dfii_pi1_wrdata0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd14));
assign basesoc_csrbank6_dfii_pi1_rddata1_r = basesoc_interface6_bank_bus_dat_w[31:0];
assign basesoc_csrbank6_dfii_pi1_rddata1_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd15));
assign basesoc_csrbank6_dfii_pi1_rddata1_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 4'd15));
assign basesoc_csrbank6_dfii_pi1_rddata0_r = basesoc_interface6_bank_bus_dat_w[31:0];
assign basesoc_csrbank6_dfii_pi1_rddata0_re = ((basesoc_csrbank6_sel & basesoc_interface6_bank_bus_we) & (basesoc_interface6_bank_bus_adr[4:0] == 5'd16));
assign basesoc_csrbank6_dfii_pi1_rddata0_we = ((basesoc_csrbank6_sel & (~basesoc_interface6_bank_bus_we)) & (basesoc_interface6_bank_bus_adr[4:0] == 5'd16));
assign sdram_sel = sdram_storage[0];
assign sdram_cke = sdram_storage[1];
assign sdram_odt = sdram_storage[2];
assign sdram_reset_n = sdram_storage[3];
assign basesoc_csrbank6_dfii_control0_w = sdram_storage[3:0];
assign basesoc_csrbank6_dfii_pi0_command0_w = sdram_phaseinjector0_command_storage[5:0];
assign basesoc_csrbank6_dfii_pi0_address0_w = sdram_phaseinjector0_address_storage[12:0];
assign basesoc_csrbank6_dfii_pi0_baddress0_w = sdram_phaseinjector0_baddress_storage[2:0];
assign basesoc_csrbank6_dfii_pi0_wrdata1_w = sdram_phaseinjector0_wrdata_storage[63:32];
assign basesoc_csrbank6_dfii_pi0_wrdata0_w = sdram_phaseinjector0_wrdata_storage[31:0];
assign basesoc_csrbank6_dfii_pi0_rddata1_w = sdram_phaseinjector0_rddata_status[63:32];
assign basesoc_csrbank6_dfii_pi0_rddata0_w = sdram_phaseinjector0_rddata_status[31:0];
assign sdram_phaseinjector0_rddata_we = basesoc_csrbank6_dfii_pi0_rddata0_we;
assign sdram_phaseinjector0_rddata_re = basesoc_csrbank6_dfii_pi0_rddata0_re;
assign basesoc_csrbank6_dfii_pi1_command0_w = sdram_phaseinjector1_command_storage[5:0];
assign basesoc_csrbank6_dfii_pi1_address0_w = sdram_phaseinjector1_address_storage[12:0];
assign basesoc_csrbank6_dfii_pi1_baddress0_w = sdram_phaseinjector1_baddress_storage[2:0];
assign basesoc_csrbank6_dfii_pi1_wrdata1_w = sdram_phaseinjector1_wrdata_storage[63:32];
assign basesoc_csrbank6_dfii_pi1_wrdata0_w = sdram_phaseinjector1_wrdata_storage[31:0];
assign basesoc_csrbank6_dfii_pi1_rddata1_w = sdram_phaseinjector1_rddata_status[63:32];
assign basesoc_csrbank6_dfii_pi1_rddata0_w = sdram_phaseinjector1_rddata_status[31:0];
assign sdram_phaseinjector1_rddata_we = basesoc_csrbank6_dfii_pi1_rddata0_we;
assign sdram_phaseinjector1_rddata_re = basesoc_csrbank6_dfii_pi1_rddata0_re;
assign basesoc_csrbank7_sel = (basesoc_interface7_bank_bus_adr[13:9] == 3'd5);
assign basesoc_csrbank7_load0_r = basesoc_interface7_bank_bus_dat_w[31:0];
assign basesoc_csrbank7_load0_re = ((basesoc_csrbank7_sel & basesoc_interface7_bank_bus_we) & (basesoc_interface7_bank_bus_adr[2:0] == 1'd0));
assign basesoc_csrbank7_load0_we = ((basesoc_csrbank7_sel & (~basesoc_interface7_bank_bus_we)) & (basesoc_interface7_bank_bus_adr[2:0] == 1'd0));
assign basesoc_csrbank7_reload0_r = basesoc_interface7_bank_bus_dat_w[31:0];
assign basesoc_csrbank7_reload0_re = ((basesoc_csrbank7_sel & basesoc_interface7_bank_bus_we) & (basesoc_interface7_bank_bus_adr[2:0] == 1'd1));
assign basesoc_csrbank7_reload0_we = ((basesoc_csrbank7_sel & (~basesoc_interface7_bank_bus_we)) & (basesoc_interface7_bank_bus_adr[2:0] == 1'd1));
assign basesoc_csrbank7_en0_r = basesoc_interface7_bank_bus_dat_w[0];
assign basesoc_csrbank7_en0_re = ((basesoc_csrbank7_sel & basesoc_interface7_bank_bus_we) & (basesoc_interface7_bank_bus_adr[2:0] == 2'd2));
assign basesoc_csrbank7_en0_we = ((basesoc_csrbank7_sel & (~basesoc_interface7_bank_bus_we)) & (basesoc_interface7_bank_bus_adr[2:0] == 2'd2));
assign basesoc_csrbank7_update_value0_r = basesoc_interface7_bank_bus_dat_w[0];
assign basesoc_csrbank7_update_value0_re = ((basesoc_csrbank7_sel & basesoc_interface7_bank_bus_we) & (basesoc_interface7_bank_bus_adr[2:0] == 2'd3));
assign basesoc_csrbank7_update_value0_we = ((basesoc_csrbank7_sel & (~basesoc_interface7_bank_bus_we)) & (basesoc_interface7_bank_bus_adr[2:0] == 2'd3));
assign basesoc_csrbank7_value_r = basesoc_interface7_bank_bus_dat_w[31:0];
assign basesoc_csrbank7_value_re = ((basesoc_csrbank7_sel & basesoc_interface7_bank_bus_we) & (basesoc_interface7_bank_bus_adr[2:0] == 3'd4));
assign basesoc_csrbank7_value_we = ((basesoc_csrbank7_sel & (~basesoc_interface7_bank_bus_we)) & (basesoc_interface7_bank_bus_adr[2:0] == 3'd4));
assign timer_eventmanager_status_r = basesoc_interface7_bank_bus_dat_w[0];
assign timer_eventmanager_status_re = ((basesoc_csrbank7_sel & basesoc_interface7_bank_bus_we) & (basesoc_interface7_bank_bus_adr[2:0] == 3'd5));
assign timer_eventmanager_status_we = ((basesoc_csrbank7_sel & (~basesoc_interface7_bank_bus_we)) & (basesoc_interface7_bank_bus_adr[2:0] == 3'd5));
assign timer_eventmanager_pending_r = basesoc_interface7_bank_bus_dat_w[0];
assign timer_eventmanager_pending_re = ((basesoc_csrbank7_sel & basesoc_interface7_bank_bus_we) & (basesoc_interface7_bank_bus_adr[2:0] == 3'd6));
assign timer_eventmanager_pending_we = ((basesoc_csrbank7_sel & (~basesoc_interface7_bank_bus_we)) & (basesoc_interface7_bank_bus_adr[2:0] == 3'd6));
assign basesoc_csrbank7_ev_enable0_r = basesoc_interface7_bank_bus_dat_w[0];
assign basesoc_csrbank7_ev_enable0_re = ((basesoc_csrbank7_sel & basesoc_interface7_bank_bus_we) & (basesoc_interface7_bank_bus_adr[2:0] == 3'd7));
assign basesoc_csrbank7_ev_enable0_we = ((basesoc_csrbank7_sel & (~basesoc_interface7_bank_bus_we)) & (basesoc_interface7_bank_bus_adr[2:0] == 3'd7));
assign basesoc_csrbank7_load0_w = timer_load_storage[31:0];
assign basesoc_csrbank7_reload0_w = timer_reload_storage[31:0];
assign basesoc_csrbank7_en0_w = timer_en_storage;
assign basesoc_csrbank7_update_value0_w = timer_update_value_storage;
assign basesoc_csrbank7_value_w = timer_value_status[31:0];
assign timer_value_we = basesoc_csrbank7_value_we;
assign timer_value_re = basesoc_csrbank7_value_re;
assign basesoc_csrbank7_ev_enable0_w = timer_eventmanager_storage;
assign basesoc_csrbank8_sel = (basesoc_interface8_bank_bus_adr[13:9] == 3'd6);
assign uart_rxtx_r = basesoc_interface8_bank_bus_dat_w[7:0];
assign uart_rxtx_re = ((basesoc_csrbank8_sel & basesoc_interface8_bank_bus_we) & (basesoc_interface8_bank_bus_adr[2:0] == 1'd0));
assign uart_rxtx_we = ((basesoc_csrbank8_sel & (~basesoc_interface8_bank_bus_we)) & (basesoc_interface8_bank_bus_adr[2:0] == 1'd0));
assign basesoc_csrbank8_txfull_r = basesoc_interface8_bank_bus_dat_w[0];
assign basesoc_csrbank8_txfull_re = ((basesoc_csrbank8_sel & basesoc_interface8_bank_bus_we) & (basesoc_interface8_bank_bus_adr[2:0] == 1'd1));
assign basesoc_csrbank8_txfull_we = ((basesoc_csrbank8_sel & (~basesoc_interface8_bank_bus_we)) & (basesoc_interface8_bank_bus_adr[2:0] == 1'd1));
assign basesoc_csrbank8_rxempty_r = basesoc_interface8_bank_bus_dat_w[0];
assign basesoc_csrbank8_rxempty_re = ((basesoc_csrbank8_sel & basesoc_interface8_bank_bus_we) & (basesoc_interface8_bank_bus_adr[2:0] == 2'd2));
assign basesoc_csrbank8_rxempty_we = ((basesoc_csrbank8_sel & (~basesoc_interface8_bank_bus_we)) & (basesoc_interface8_bank_bus_adr[2:0] == 2'd2));
assign uart_eventmanager_status_r = basesoc_interface8_bank_bus_dat_w[1:0];
assign uart_eventmanager_status_re = ((basesoc_csrbank8_sel & basesoc_interface8_bank_bus_we) & (basesoc_interface8_bank_bus_adr[2:0] == 2'd3));
assign uart_eventmanager_status_we = ((basesoc_csrbank8_sel & (~basesoc_interface8_bank_bus_we)) & (basesoc_interface8_bank_bus_adr[2:0] == 2'd3));
assign uart_eventmanager_pending_r = basesoc_interface8_bank_bus_dat_w[1:0];
assign uart_eventmanager_pending_re = ((basesoc_csrbank8_sel & basesoc_interface8_bank_bus_we) & (basesoc_interface8_bank_bus_adr[2:0] == 3'd4));
assign uart_eventmanager_pending_we = ((basesoc_csrbank8_sel & (~basesoc_interface8_bank_bus_we)) & (basesoc_interface8_bank_bus_adr[2:0] == 3'd4));
assign basesoc_csrbank8_ev_enable0_r = basesoc_interface8_bank_bus_dat_w[1:0];
assign basesoc_csrbank8_ev_enable0_re = ((basesoc_csrbank8_sel & basesoc_interface8_bank_bus_we) & (basesoc_interface8_bank_bus_adr[2:0] == 3'd5));
assign basesoc_csrbank8_ev_enable0_we = ((basesoc_csrbank8_sel & (~basesoc_interface8_bank_bus_we)) & (basesoc_interface8_bank_bus_adr[2:0] == 3'd5));
assign basesoc_csrbank8_txempty_r = basesoc_interface8_bank_bus_dat_w[0];
assign basesoc_csrbank8_txempty_re = ((basesoc_csrbank8_sel & basesoc_interface8_bank_bus_we) & (basesoc_interface8_bank_bus_adr[2:0] == 3'd6));
assign basesoc_csrbank8_txempty_we = ((basesoc_csrbank8_sel & (~basesoc_interface8_bank_bus_we)) & (basesoc_interface8_bank_bus_adr[2:0] == 3'd6));
assign basesoc_csrbank8_rxfull_r = basesoc_interface8_bank_bus_dat_w[0];
assign basesoc_csrbank8_rxfull_re = ((basesoc_csrbank8_sel & basesoc_interface8_bank_bus_we) & (basesoc_interface8_bank_bus_adr[2:0] == 3'd7));
assign basesoc_csrbank8_rxfull_we = ((basesoc_csrbank8_sel & (~basesoc_interface8_bank_bus_we)) & (basesoc_interface8_bank_bus_adr[2:0] == 3'd7));
assign basesoc_csrbank8_txfull_w = uart_txfull_status;
assign uart_txfull_we = basesoc_csrbank8_txfull_we;
assign uart_txfull_re = basesoc_csrbank8_txfull_re;
assign basesoc_csrbank8_rxempty_w = uart_rxempty_status;
assign uart_rxempty_we = basesoc_csrbank8_rxempty_we;
assign uart_rxempty_re = basesoc_csrbank8_rxempty_re;
assign basesoc_csrbank8_ev_enable0_w = uart_eventmanager_storage[1:0];
assign basesoc_csrbank8_txempty_w = uart_txempty_status;
assign uart_txempty_we = basesoc_csrbank8_txempty_we;
assign uart_txempty_re = basesoc_csrbank8_txempty_re;
assign basesoc_csrbank8_rxfull_w = uart_rxfull_status;
assign uart_rxfull_we = basesoc_csrbank8_rxfull_we;
assign uart_rxfull_re = basesoc_csrbank8_rxfull_re;
assign basesoc_csr_interconnect_adr = basesoc_basesoc_adr;
assign basesoc_csr_interconnect_we = basesoc_basesoc_we;
assign basesoc_csr_interconnect_dat_w = basesoc_basesoc_dat_w;
assign basesoc_basesoc_dat_r = basesoc_csr_interconnect_dat_r;
assign basesoc_interface0_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_interface1_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_interface2_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_interface3_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_interface4_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_interface5_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_interface6_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_interface7_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_interface8_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_interface0_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_interface1_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_interface2_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_interface3_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_interface4_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_interface5_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_interface6_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_interface7_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_interface8_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_interface0_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_interface1_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_interface2_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_interface3_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_interface4_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_interface5_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_interface6_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_interface7_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_interface8_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_interconnect_dat_r = ((((((((basesoc_interface0_bank_bus_dat_r | basesoc_interface1_bank_bus_dat_r) | basesoc_interface2_bank_bus_dat_r) | basesoc_interface3_bank_bus_dat_r) | basesoc_interface4_bank_bus_dat_r) | basesoc_interface5_bank_bus_dat_r) | basesoc_interface6_bank_bus_dat_r) | basesoc_interface7_bank_bus_dat_r) | basesoc_interface8_bank_bus_dat_r);
assign slice_proxy = 9'd1;
always @(*) begin
	rhs_array_muxed0 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[0];
		end
		1'd1: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[1];
		end
		2'd2: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[2];
		end
		2'd3: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[3];
		end
		3'd4: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[4];
		end
		3'd5: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[5];
		end
		3'd6: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[6];
		end
		default: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[7];
		end
	endcase
end
always @(*) begin
	rhs_array_muxed1 <= 13'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed1 <= sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			rhs_array_muxed1 <= sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			rhs_array_muxed1 <= sdram_bankmachine2_cmd_payload_a;
		end
		2'd3: begin
			rhs_array_muxed1 <= sdram_bankmachine3_cmd_payload_a;
		end
		3'd4: begin
			rhs_array_muxed1 <= sdram_bankmachine4_cmd_payload_a;
		end
		3'd5: begin
			rhs_array_muxed1 <= sdram_bankmachine5_cmd_payload_a;
		end
		3'd6: begin
			rhs_array_muxed1 <= sdram_bankmachine6_cmd_payload_a;
		end
		default: begin
			rhs_array_muxed1 <= sdram_bankmachine7_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed2 <= 3'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed2 <= sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			rhs_array_muxed2 <= sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			rhs_array_muxed2 <= sdram_bankmachine2_cmd_payload_ba;
		end
		2'd3: begin
			rhs_array_muxed2 <= sdram_bankmachine3_cmd_payload_ba;
		end
		3'd4: begin
			rhs_array_muxed2 <= sdram_bankmachine4_cmd_payload_ba;
		end
		3'd5: begin
			rhs_array_muxed2 <= sdram_bankmachine5_cmd_payload_ba;
		end
		3'd6: begin
			rhs_array_muxed2 <= sdram_bankmachine6_cmd_payload_ba;
		end
		default: begin
			rhs_array_muxed2 <= sdram_bankmachine7_cmd_payload_ba;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed3 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed3 <= sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			rhs_array_muxed3 <= sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			rhs_array_muxed3 <= sdram_bankmachine2_cmd_payload_is_read;
		end
		2'd3: begin
			rhs_array_muxed3 <= sdram_bankmachine3_cmd_payload_is_read;
		end
		3'd4: begin
			rhs_array_muxed3 <= sdram_bankmachine4_cmd_payload_is_read;
		end
		3'd5: begin
			rhs_array_muxed3 <= sdram_bankmachine5_cmd_payload_is_read;
		end
		3'd6: begin
			rhs_array_muxed3 <= sdram_bankmachine6_cmd_payload_is_read;
		end
		default: begin
			rhs_array_muxed3 <= sdram_bankmachine7_cmd_payload_is_read;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed4 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed4 <= sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			rhs_array_muxed4 <= sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			rhs_array_muxed4 <= sdram_bankmachine2_cmd_payload_is_write;
		end
		2'd3: begin
			rhs_array_muxed4 <= sdram_bankmachine3_cmd_payload_is_write;
		end
		3'd4: begin
			rhs_array_muxed4 <= sdram_bankmachine4_cmd_payload_is_write;
		end
		3'd5: begin
			rhs_array_muxed4 <= sdram_bankmachine5_cmd_payload_is_write;
		end
		3'd6: begin
			rhs_array_muxed4 <= sdram_bankmachine6_cmd_payload_is_write;
		end
		default: begin
			rhs_array_muxed4 <= sdram_bankmachine7_cmd_payload_is_write;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed5 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed5 <= sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			rhs_array_muxed5 <= sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			rhs_array_muxed5 <= sdram_bankmachine2_cmd_payload_is_cmd;
		end
		2'd3: begin
			rhs_array_muxed5 <= sdram_bankmachine3_cmd_payload_is_cmd;
		end
		3'd4: begin
			rhs_array_muxed5 <= sdram_bankmachine4_cmd_payload_is_cmd;
		end
		3'd5: begin
			rhs_array_muxed5 <= sdram_bankmachine5_cmd_payload_is_cmd;
		end
		3'd6: begin
			rhs_array_muxed5 <= sdram_bankmachine6_cmd_payload_is_cmd;
		end
		default: begin
			rhs_array_muxed5 <= sdram_bankmachine7_cmd_payload_is_cmd;
		end
	endcase
end
always @(*) begin
	t_array_muxed0 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			t_array_muxed0 <= sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			t_array_muxed0 <= sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			t_array_muxed0 <= sdram_bankmachine2_cmd_payload_cas;
		end
		2'd3: begin
			t_array_muxed0 <= sdram_bankmachine3_cmd_payload_cas;
		end
		3'd4: begin
			t_array_muxed0 <= sdram_bankmachine4_cmd_payload_cas;
		end
		3'd5: begin
			t_array_muxed0 <= sdram_bankmachine5_cmd_payload_cas;
		end
		3'd6: begin
			t_array_muxed0 <= sdram_bankmachine6_cmd_payload_cas;
		end
		default: begin
			t_array_muxed0 <= sdram_bankmachine7_cmd_payload_cas;
		end
	endcase
end
always @(*) begin
	t_array_muxed1 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			t_array_muxed1 <= sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			t_array_muxed1 <= sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			t_array_muxed1 <= sdram_bankmachine2_cmd_payload_ras;
		end
		2'd3: begin
			t_array_muxed1 <= sdram_bankmachine3_cmd_payload_ras;
		end
		3'd4: begin
			t_array_muxed1 <= sdram_bankmachine4_cmd_payload_ras;
		end
		3'd5: begin
			t_array_muxed1 <= sdram_bankmachine5_cmd_payload_ras;
		end
		3'd6: begin
			t_array_muxed1 <= sdram_bankmachine6_cmd_payload_ras;
		end
		default: begin
			t_array_muxed1 <= sdram_bankmachine7_cmd_payload_ras;
		end
	endcase
end
always @(*) begin
	t_array_muxed2 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			t_array_muxed2 <= sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			t_array_muxed2 <= sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			t_array_muxed2 <= sdram_bankmachine2_cmd_payload_we;
		end
		2'd3: begin
			t_array_muxed2 <= sdram_bankmachine3_cmd_payload_we;
		end
		3'd4: begin
			t_array_muxed2 <= sdram_bankmachine4_cmd_payload_we;
		end
		3'd5: begin
			t_array_muxed2 <= sdram_bankmachine5_cmd_payload_we;
		end
		3'd6: begin
			t_array_muxed2 <= sdram_bankmachine6_cmd_payload_we;
		end
		default: begin
			t_array_muxed2 <= sdram_bankmachine7_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed6 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[0];
		end
		1'd1: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[1];
		end
		2'd2: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[2];
		end
		2'd3: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[3];
		end
		3'd4: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[4];
		end
		3'd5: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[5];
		end
		3'd6: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[6];
		end
		default: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[7];
		end
	endcase
end
always @(*) begin
	rhs_array_muxed7 <= 13'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed7 <= sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			rhs_array_muxed7 <= sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			rhs_array_muxed7 <= sdram_bankmachine2_cmd_payload_a;
		end
		2'd3: begin
			rhs_array_muxed7 <= sdram_bankmachine3_cmd_payload_a;
		end
		3'd4: begin
			rhs_array_muxed7 <= sdram_bankmachine4_cmd_payload_a;
		end
		3'd5: begin
			rhs_array_muxed7 <= sdram_bankmachine5_cmd_payload_a;
		end
		3'd6: begin
			rhs_array_muxed7 <= sdram_bankmachine6_cmd_payload_a;
		end
		default: begin
			rhs_array_muxed7 <= sdram_bankmachine7_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed8 <= 3'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed8 <= sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			rhs_array_muxed8 <= sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			rhs_array_muxed8 <= sdram_bankmachine2_cmd_payload_ba;
		end
		2'd3: begin
			rhs_array_muxed8 <= sdram_bankmachine3_cmd_payload_ba;
		end
		3'd4: begin
			rhs_array_muxed8 <= sdram_bankmachine4_cmd_payload_ba;
		end
		3'd5: begin
			rhs_array_muxed8 <= sdram_bankmachine5_cmd_payload_ba;
		end
		3'd6: begin
			rhs_array_muxed8 <= sdram_bankmachine6_cmd_payload_ba;
		end
		default: begin
			rhs_array_muxed8 <= sdram_bankmachine7_cmd_payload_ba;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed9 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed9 <= sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			rhs_array_muxed9 <= sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			rhs_array_muxed9 <= sdram_bankmachine2_cmd_payload_is_read;
		end
		2'd3: begin
			rhs_array_muxed9 <= sdram_bankmachine3_cmd_payload_is_read;
		end
		3'd4: begin
			rhs_array_muxed9 <= sdram_bankmachine4_cmd_payload_is_read;
		end
		3'd5: begin
			rhs_array_muxed9 <= sdram_bankmachine5_cmd_payload_is_read;
		end
		3'd6: begin
			rhs_array_muxed9 <= sdram_bankmachine6_cmd_payload_is_read;
		end
		default: begin
			rhs_array_muxed9 <= sdram_bankmachine7_cmd_payload_is_read;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed10 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed10 <= sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			rhs_array_muxed10 <= sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			rhs_array_muxed10 <= sdram_bankmachine2_cmd_payload_is_write;
		end
		2'd3: begin
			rhs_array_muxed10 <= sdram_bankmachine3_cmd_payload_is_write;
		end
		3'd4: begin
			rhs_array_muxed10 <= sdram_bankmachine4_cmd_payload_is_write;
		end
		3'd5: begin
			rhs_array_muxed10 <= sdram_bankmachine5_cmd_payload_is_write;
		end
		3'd6: begin
			rhs_array_muxed10 <= sdram_bankmachine6_cmd_payload_is_write;
		end
		default: begin
			rhs_array_muxed10 <= sdram_bankmachine7_cmd_payload_is_write;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed11 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed11 <= sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			rhs_array_muxed11 <= sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			rhs_array_muxed11 <= sdram_bankmachine2_cmd_payload_is_cmd;
		end
		2'd3: begin
			rhs_array_muxed11 <= sdram_bankmachine3_cmd_payload_is_cmd;
		end
		3'd4: begin
			rhs_array_muxed11 <= sdram_bankmachine4_cmd_payload_is_cmd;
		end
		3'd5: begin
			rhs_array_muxed11 <= sdram_bankmachine5_cmd_payload_is_cmd;
		end
		3'd6: begin
			rhs_array_muxed11 <= sdram_bankmachine6_cmd_payload_is_cmd;
		end
		default: begin
			rhs_array_muxed11 <= sdram_bankmachine7_cmd_payload_is_cmd;
		end
	endcase
end
always @(*) begin
	t_array_muxed3 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			t_array_muxed3 <= sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			t_array_muxed3 <= sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			t_array_muxed3 <= sdram_bankmachine2_cmd_payload_cas;
		end
		2'd3: begin
			t_array_muxed3 <= sdram_bankmachine3_cmd_payload_cas;
		end
		3'd4: begin
			t_array_muxed3 <= sdram_bankmachine4_cmd_payload_cas;
		end
		3'd5: begin
			t_array_muxed3 <= sdram_bankmachine5_cmd_payload_cas;
		end
		3'd6: begin
			t_array_muxed3 <= sdram_bankmachine6_cmd_payload_cas;
		end
		default: begin
			t_array_muxed3 <= sdram_bankmachine7_cmd_payload_cas;
		end
	endcase
end
always @(*) begin
	t_array_muxed4 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			t_array_muxed4 <= sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			t_array_muxed4 <= sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			t_array_muxed4 <= sdram_bankmachine2_cmd_payload_ras;
		end
		2'd3: begin
			t_array_muxed4 <= sdram_bankmachine3_cmd_payload_ras;
		end
		3'd4: begin
			t_array_muxed4 <= sdram_bankmachine4_cmd_payload_ras;
		end
		3'd5: begin
			t_array_muxed4 <= sdram_bankmachine5_cmd_payload_ras;
		end
		3'd6: begin
			t_array_muxed4 <= sdram_bankmachine6_cmd_payload_ras;
		end
		default: begin
			t_array_muxed4 <= sdram_bankmachine7_cmd_payload_ras;
		end
	endcase
end
always @(*) begin
	t_array_muxed5 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			t_array_muxed5 <= sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			t_array_muxed5 <= sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			t_array_muxed5 <= sdram_bankmachine2_cmd_payload_we;
		end
		2'd3: begin
			t_array_muxed5 <= sdram_bankmachine3_cmd_payload_we;
		end
		3'd4: begin
			t_array_muxed5 <= sdram_bankmachine4_cmd_payload_we;
		end
		3'd5: begin
			t_array_muxed5 <= sdram_bankmachine5_cmd_payload_we;
		end
		3'd6: begin
			t_array_muxed5 <= sdram_bankmachine6_cmd_payload_we;
		end
		default: begin
			t_array_muxed5 <= sdram_bankmachine7_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed12 <= 20'd0;
	case (subfragments_roundrobin0_grant)
		default: begin
			rhs_array_muxed12 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed13 <= 1'd0;
	case (subfragments_roundrobin0_grant)
		default: begin
			rhs_array_muxed13 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed14 <= 1'd0;
	case (subfragments_roundrobin0_grant)
		default: begin
			rhs_array_muxed14 <= (((port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((subfragments_locked0 | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed15 <= 20'd0;
	case (subfragments_roundrobin1_grant)
		default: begin
			rhs_array_muxed15 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed16 <= 1'd0;
	case (subfragments_roundrobin1_grant)
		default: begin
			rhs_array_muxed16 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed17 <= 1'd0;
	case (subfragments_roundrobin1_grant)
		default: begin
			rhs_array_muxed17 <= (((port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((subfragments_locked1 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed18 <= 20'd0;
	case (subfragments_roundrobin2_grant)
		default: begin
			rhs_array_muxed18 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed19 <= 1'd0;
	case (subfragments_roundrobin2_grant)
		default: begin
			rhs_array_muxed19 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed20 <= 1'd0;
	case (subfragments_roundrobin2_grant)
		default: begin
			rhs_array_muxed20 <= (((port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((subfragments_locked2 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed21 <= 20'd0;
	case (subfragments_roundrobin3_grant)
		default: begin
			rhs_array_muxed21 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed22 <= 1'd0;
	case (subfragments_roundrobin3_grant)
		default: begin
			rhs_array_muxed22 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed23 <= 1'd0;
	case (subfragments_roundrobin3_grant)
		default: begin
			rhs_array_muxed23 <= (((port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((subfragments_locked3 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed24 <= 20'd0;
	case (subfragments_roundrobin4_grant)
		default: begin
			rhs_array_muxed24 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed25 <= 1'd0;
	case (subfragments_roundrobin4_grant)
		default: begin
			rhs_array_muxed25 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed26 <= 1'd0;
	case (subfragments_roundrobin4_grant)
		default: begin
			rhs_array_muxed26 <= (((port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((subfragments_locked4 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed27 <= 20'd0;
	case (subfragments_roundrobin5_grant)
		default: begin
			rhs_array_muxed27 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed28 <= 1'd0;
	case (subfragments_roundrobin5_grant)
		default: begin
			rhs_array_muxed28 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed29 <= 1'd0;
	case (subfragments_roundrobin5_grant)
		default: begin
			rhs_array_muxed29 <= (((port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((subfragments_locked5 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed30 <= 20'd0;
	case (subfragments_roundrobin6_grant)
		default: begin
			rhs_array_muxed30 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed31 <= 1'd0;
	case (subfragments_roundrobin6_grant)
		default: begin
			rhs_array_muxed31 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed32 <= 1'd0;
	case (subfragments_roundrobin6_grant)
		default: begin
			rhs_array_muxed32 <= (((port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((subfragments_locked6 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed33 <= 20'd0;
	case (subfragments_roundrobin7_grant)
		default: begin
			rhs_array_muxed33 <= {port_cmd_payload_addr[22:10], port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed34 <= 1'd0;
	case (subfragments_roundrobin7_grant)
		default: begin
			rhs_array_muxed34 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed35 <= 1'd0;
	case (subfragments_roundrobin7_grant)
		default: begin
			rhs_array_muxed35 <= (((port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((subfragments_locked7 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed36 <= 30'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed36 <= cpu_ibus_adr;
		end
		default: begin
			rhs_array_muxed36 <= cpu_dbus_adr;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed37 <= 32'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed37 <= cpu_ibus_dat_w;
		end
		default: begin
			rhs_array_muxed37 <= cpu_dbus_dat_w;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed38 <= 4'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed38 <= cpu_ibus_sel;
		end
		default: begin
			rhs_array_muxed38 <= cpu_dbus_sel;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed39 <= 1'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed39 <= cpu_ibus_cyc;
		end
		default: begin
			rhs_array_muxed39 <= cpu_dbus_cyc;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed40 <= 1'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed40 <= cpu_ibus_stb;
		end
		default: begin
			rhs_array_muxed40 <= cpu_dbus_stb;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed41 <= 1'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed41 <= cpu_ibus_we;
		end
		default: begin
			rhs_array_muxed41 <= cpu_dbus_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed42 <= 3'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed42 <= cpu_ibus_cti;
		end
		default: begin
			rhs_array_muxed42 <= cpu_dbus_cti;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed43 <= 2'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed43 <= cpu_ibus_bte;
		end
		default: begin
			rhs_array_muxed43 <= cpu_dbus_bte;
		end
	endcase
end
always @(*) begin
	array_muxed0 <= 3'd0;
	case (sdram_steerer_sel0)
		1'd0: begin
			array_muxed0 <= sdram_nop_ba[2:0];
		end
		1'd1: begin
			array_muxed0 <= sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			array_muxed0 <= sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			array_muxed0 <= sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	array_muxed1 <= 13'd0;
	case (sdram_steerer_sel0)
		1'd0: begin
			array_muxed1 <= sdram_nop_a;
		end
		1'd1: begin
			array_muxed1 <= sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			array_muxed1 <= sdram_choose_req_cmd_payload_a;
		end
		default: begin
			array_muxed1 <= sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	array_muxed2 <= 1'd0;
	case (sdram_steerer_sel0)
		1'd0: begin
			array_muxed2 <= 1'd0;
		end
		1'd1: begin
			array_muxed2 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			array_muxed2 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			array_muxed2 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	array_muxed3 <= 1'd0;
	case (sdram_steerer_sel0)
		1'd0: begin
			array_muxed3 <= 1'd0;
		end
		1'd1: begin
			array_muxed3 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			array_muxed3 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			array_muxed3 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	array_muxed4 <= 1'd0;
	case (sdram_steerer_sel0)
		1'd0: begin
			array_muxed4 <= 1'd0;
		end
		1'd1: begin
			array_muxed4 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			array_muxed4 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_we);
		end
		default: begin
			array_muxed4 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	array_muxed5 <= 1'd0;
	case (sdram_steerer_sel0)
		1'd0: begin
			array_muxed5 <= 1'd0;
		end
		1'd1: begin
			array_muxed5 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			array_muxed5 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			array_muxed5 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	array_muxed6 <= 1'd0;
	case (sdram_steerer_sel0)
		1'd0: begin
			array_muxed6 <= 1'd0;
		end
		1'd1: begin
			array_muxed6 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			array_muxed6 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			array_muxed6 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_write);
		end
	endcase
end
always @(*) begin
	array_muxed7 <= 3'd0;
	case (sdram_steerer_sel1)
		1'd0: begin
			array_muxed7 <= sdram_nop_ba[2:0];
		end
		1'd1: begin
			array_muxed7 <= sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			array_muxed7 <= sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			array_muxed7 <= sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	array_muxed8 <= 13'd0;
	case (sdram_steerer_sel1)
		1'd0: begin
			array_muxed8 <= sdram_nop_a;
		end
		1'd1: begin
			array_muxed8 <= sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			array_muxed8 <= sdram_choose_req_cmd_payload_a;
		end
		default: begin
			array_muxed8 <= sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	array_muxed9 <= 1'd0;
	case (sdram_steerer_sel1)
		1'd0: begin
			array_muxed9 <= 1'd0;
		end
		1'd1: begin
			array_muxed9 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			array_muxed9 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			array_muxed9 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	array_muxed10 <= 1'd0;
	case (sdram_steerer_sel1)
		1'd0: begin
			array_muxed10 <= 1'd0;
		end
		1'd1: begin
			array_muxed10 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			array_muxed10 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			array_muxed10 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	array_muxed11 <= 1'd0;
	case (sdram_steerer_sel1)
		1'd0: begin
			array_muxed11 <= 1'd0;
		end
		1'd1: begin
			array_muxed11 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			array_muxed11 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_we);
		end
		default: begin
			array_muxed11 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	array_muxed12 <= 1'd0;
	case (sdram_steerer_sel1)
		1'd0: begin
			array_muxed12 <= 1'd0;
		end
		1'd1: begin
			array_muxed12 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			array_muxed12 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			array_muxed12 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	array_muxed13 <= 1'd0;
	case (sdram_steerer_sel1)
		1'd0: begin
			array_muxed13 <= 1'd0;
		end
		1'd1: begin
			array_muxed13 <= ((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			array_muxed13 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			array_muxed13 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_write);
		end
	endcase
end
assign ddrphy_lock1 = multiregimpl0_regs1;
assign status = multiregimpl1_regs1;
assign usb_iobuf_usb_p_t_i1 = multiregimpl2_regs1;
assign usb_iobuf_usb_n_t_i1 = multiregimpl3_regs1;
assign usb0_usb_core_tx_nrzi_dat = multiregimpl4_regs2;
assign usb0_usb_core_tx_nrzi_oe1 = multiregimpl5_regs2;
assign usb0_usb_core_txstate_o_oe12 = multiregimpl6_regs;
assign usb0_usb_core_rx_payloadFifo_produce_rdomain = multiregimpl7_regs1;
assign usb0_usb_core_rx_payloadFifo_consume_wdomain = multiregimpl8_regs1;
assign usb0_usb_core_rx_flagsFifo_produce_rdomain = multiregimpl9_regs1;
assign usb0_usb_core_rx_flagsFifo_consume_wdomain = multiregimpl10_regs1;
assign usb0_asyncfifo0_produce_rdomain = multiregimpl11_regs1;
assign usb0_asyncfifo0_consume_wdomain = multiregimpl12_regs1;
assign usb0_asyncfifo1_produce_rdomain = multiregimpl13_regs1;
assign usb0_asyncfifo1_consume_wdomain = multiregimpl14_regs1;
assign usb0_irq = multiregimpl15_regs1;

always @(posedge init_clk) begin
	ddrphy_lock_d <= ddrphy_lock1;
	if ((ddrphy_counter == 4'd8)) begin
		ddrphy_freeze <= 1'd1;
	end
	if ((ddrphy_counter == 5'd16)) begin
		ddrphy_stop1 <= 1'd1;
	end
	if ((ddrphy_counter == 5'd24)) begin
		ddrphy_reset1 <= 1'd1;
	end
	if ((ddrphy_counter == 6'd32)) begin
		ddrphy_reset1 <= 1'd0;
	end
	if ((ddrphy_counter == 6'd40)) begin
		ddrphy_stop1 <= 1'd0;
	end
	if ((ddrphy_counter == 6'd48)) begin
		ddrphy_freeze <= 1'd0;
	end
	if ((ddrphy_counter == 6'd56)) begin
		ddrphy_pause1 <= 1'd1;
	end
	if ((ddrphy_counter == 7'd64)) begin
		ddrphy_update <= 1'd1;
	end
	if ((ddrphy_counter == 7'd72)) begin
		ddrphy_update <= 1'd0;
	end
	if ((ddrphy_counter == 7'd80)) begin
		ddrphy_pause1 <= 1'd0;
	end
	if ((ddrphy_counter == 7'd80)) begin
		ddrphy_counter <= 1'd0;
	end else begin
		if ((ddrphy_counter != 1'd0)) begin
			ddrphy_counter <= (ddrphy_counter + 1'd1);
		end else begin
			if (ddrphy_new_lock) begin
				ddrphy_counter <= 1'd1;
			end
		end
	end
	if (init_rst) begin
		ddrphy_update <= 1'd0;
		ddrphy_stop1 <= 1'd0;
		ddrphy_freeze <= 1'd0;
		ddrphy_pause1 <= 1'd0;
		ddrphy_reset1 <= 1'd0;
		ddrphy_lock_d <= 1'd0;
		ddrphy_counter <= 7'd0;
	end
	multiregimpl0_regs0 <= ddrphy_lock0;
	multiregimpl0_regs1 <= multiregimpl0_regs0;
end

always @(posedge por_clk) begin
	if ((~crg_por_done)) begin
		crg_por_count <= (crg_por_count - 1'd1);
	end
end

always @(posedge sys_clk) begin
	if ((soccontroller_bus_errors != 32'd4294967295)) begin
		if (soccontroller_bus_error) begin
			soccontroller_bus_errors <= (soccontroller_bus_errors + 1'd1);
		end
	end
	basesoc_ram_bus_ack <= 1'd0;
	if (((basesoc_ram_bus_cyc & basesoc_ram_bus_stb) & (~basesoc_ram_bus_ack))) begin
		basesoc_ram_bus_ack <= 1'd1;
	end
	ram_bus_ram_bus_ack <= 1'd0;
	if (((ram_bus_ram_bus_cyc & ram_bus_ram_bus_stb) & (~ram_bus_ram_bus_ack))) begin
		ram_bus_ram_bus_ack <= 1'd1;
	end
	if (uart_tx_clear) begin
		uart_tx_pending <= 1'd0;
	end
	uart_tx_old_trigger <= uart_tx_trigger;
	if (((~uart_tx_trigger) & uart_tx_old_trigger)) begin
		uart_tx_pending <= 1'd1;
	end
	if (uart_rx_clear) begin
		uart_rx_pending <= 1'd0;
	end
	uart_rx_old_trigger <= uart_rx_trigger;
	if (((~uart_rx_trigger) & uart_rx_old_trigger)) begin
		uart_rx_pending <= 1'd1;
	end
	if (timer_en_storage) begin
		if ((timer_value == 1'd0)) begin
			timer_value <= timer_reload_storage;
		end else begin
			timer_value <= (timer_value - 1'd1);
		end
	end else begin
		timer_value <= timer_load_storage;
	end
	if (timer_update_value_re) begin
		timer_value_status <= timer_value;
	end
	if (timer_zero_clear) begin
		timer_zero_pending <= 1'd0;
	end
	timer_zero_old_trigger <= timer_zero_trigger;
	if (((~timer_zero_trigger) & timer_zero_old_trigger)) begin
		timer_zero_pending <= 1'd1;
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_rst_re)) begin
		ddrphy_rdly0 <= 1'd0;
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_inc_re)) begin
		ddrphy_rdly0 <= (ddrphy_rdly0 + 1'd1);
	end
	ddrphy_burstdet_d0 <= ddrphy_burstdet0;
	if (ddrphy_burstdet_clr_re) begin
		ddrphy_burstdet_seen_status[0] <= 1'd0;
	end
	if ((ddrphy_burstdet0 & (~ddrphy_burstdet_d0))) begin
		ddrphy_burstdet_seen_status[0] <= 1'd1;
	end
	ddrphy_dm_o_data_d0 <= ddrphy_dm_o_data0;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dm_o_data_muxed0 <= ddrphy_dm_o_data0[3:0];
		end
		1'd1: begin
			ddrphy_dm_o_data_muxed0 <= ddrphy_dm_o_data_d0[7:4];
		end
	endcase
	ddrphy_dq_o_data_d0 <= ddrphy_dq_o_data0;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed0 <= ddrphy_dq_o_data0[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed0 <= ddrphy_dq_o_data_d0[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d0 <= ddrphy_bitslip0_o;
	ddrphy_dq_o_data_d1 <= ddrphy_dq_o_data1;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed1 <= ddrphy_dq_o_data1[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed1 <= ddrphy_dq_o_data_d1[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d1 <= ddrphy_bitslip1_o;
	ddrphy_dq_o_data_d2 <= ddrphy_dq_o_data2;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed2 <= ddrphy_dq_o_data2[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed2 <= ddrphy_dq_o_data_d2[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d2 <= ddrphy_bitslip2_o;
	ddrphy_dq_o_data_d3 <= ddrphy_dq_o_data3;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed3 <= ddrphy_dq_o_data3[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed3 <= ddrphy_dq_o_data_d3[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d3 <= ddrphy_bitslip3_o;
	ddrphy_dq_o_data_d4 <= ddrphy_dq_o_data4;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed4 <= ddrphy_dq_o_data4[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed4 <= ddrphy_dq_o_data_d4[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d4 <= ddrphy_bitslip4_o;
	ddrphy_dq_o_data_d5 <= ddrphy_dq_o_data5;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed5 <= ddrphy_dq_o_data5[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed5 <= ddrphy_dq_o_data_d5[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d5 <= ddrphy_bitslip5_o;
	ddrphy_dq_o_data_d6 <= ddrphy_dq_o_data6;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed6 <= ddrphy_dq_o_data6[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed6 <= ddrphy_dq_o_data_d6[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d6 <= ddrphy_bitslip6_o;
	ddrphy_dq_o_data_d7 <= ddrphy_dq_o_data7;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed7 <= ddrphy_dq_o_data7[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed7 <= ddrphy_dq_o_data_d7[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d7 <= ddrphy_bitslip7_o;
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_rst_re)) begin
		ddrphy_rdly1 <= 1'd0;
	end
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_inc_re)) begin
		ddrphy_rdly1 <= (ddrphy_rdly1 + 1'd1);
	end
	ddrphy_burstdet_d1 <= ddrphy_burstdet1;
	if (ddrphy_burstdet_clr_re) begin
		ddrphy_burstdet_seen_status[1] <= 1'd0;
	end
	if ((ddrphy_burstdet1 & (~ddrphy_burstdet_d1))) begin
		ddrphy_burstdet_seen_status[1] <= 1'd1;
	end
	ddrphy_dm_o_data_d1 <= ddrphy_dm_o_data1;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dm_o_data_muxed1 <= ddrphy_dm_o_data1[3:0];
		end
		1'd1: begin
			ddrphy_dm_o_data_muxed1 <= ddrphy_dm_o_data_d1[7:4];
		end
	endcase
	ddrphy_dq_o_data_d8 <= ddrphy_dq_o_data8;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed8 <= ddrphy_dq_o_data8[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed8 <= ddrphy_dq_o_data_d8[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d8 <= ddrphy_bitslip8_o;
	ddrphy_dq_o_data_d9 <= ddrphy_dq_o_data9;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed9 <= ddrphy_dq_o_data9[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed9 <= ddrphy_dq_o_data_d9[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d9 <= ddrphy_bitslip9_o;
	ddrphy_dq_o_data_d10 <= ddrphy_dq_o_data10;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed10 <= ddrphy_dq_o_data10[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed10 <= ddrphy_dq_o_data_d10[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d10 <= ddrphy_bitslip10_o;
	ddrphy_dq_o_data_d11 <= ddrphy_dq_o_data11;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed11 <= ddrphy_dq_o_data11[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed11 <= ddrphy_dq_o_data_d11[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d11 <= ddrphy_bitslip11_o;
	ddrphy_dq_o_data_d12 <= ddrphy_dq_o_data12;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed12 <= ddrphy_dq_o_data12[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed12 <= ddrphy_dq_o_data_d12[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d12 <= ddrphy_bitslip12_o;
	ddrphy_dq_o_data_d13 <= ddrphy_dq_o_data13;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed13 <= ddrphy_dq_o_data13[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed13 <= ddrphy_dq_o_data_d13[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d13 <= ddrphy_bitslip13_o;
	ddrphy_dq_o_data_d14 <= ddrphy_dq_o_data14;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed14 <= ddrphy_dq_o_data14[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed14 <= ddrphy_dq_o_data_d14[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d14 <= ddrphy_bitslip14_o;
	ddrphy_dq_o_data_d15 <= ddrphy_dq_o_data15;
	case (ddrphy_bl8_chunk)
		1'd0: begin
			ddrphy_dq_o_data_muxed15 <= ddrphy_dq_o_data15[3:0];
		end
		1'd1: begin
			ddrphy_dq_o_data_muxed15 <= ddrphy_dq_o_data_d15[7:4];
		end
	endcase
	ddrphy_dq_i_bitslip_o_d15 <= ddrphy_bitslip15_o;
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip0_value <= (ddrphy_bitslip0_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip0_value <= 1'd0;
	end
	ddrphy_bitslip0_r <= {ddrphy_bitslip0_i, ddrphy_bitslip0_r[7:4]};
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip1_value <= (ddrphy_bitslip1_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip1_value <= 1'd0;
	end
	ddrphy_bitslip1_r <= {ddrphy_bitslip1_i, ddrphy_bitslip1_r[7:4]};
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip2_value <= (ddrphy_bitslip2_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip2_value <= 1'd0;
	end
	ddrphy_bitslip2_r <= {ddrphy_bitslip2_i, ddrphy_bitslip2_r[7:4]};
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip3_value <= (ddrphy_bitslip3_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip3_value <= 1'd0;
	end
	ddrphy_bitslip3_r <= {ddrphy_bitslip3_i, ddrphy_bitslip3_r[7:4]};
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip4_value <= (ddrphy_bitslip4_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip4_value <= 1'd0;
	end
	ddrphy_bitslip4_r <= {ddrphy_bitslip4_i, ddrphy_bitslip4_r[7:4]};
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip5_value <= (ddrphy_bitslip5_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip5_value <= 1'd0;
	end
	ddrphy_bitslip5_r <= {ddrphy_bitslip5_i, ddrphy_bitslip5_r[7:4]};
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip6_value <= (ddrphy_bitslip6_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip6_value <= 1'd0;
	end
	ddrphy_bitslip6_r <= {ddrphy_bitslip6_i, ddrphy_bitslip6_r[7:4]};
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip7_value <= (ddrphy_bitslip7_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[0] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip7_value <= 1'd0;
	end
	ddrphy_bitslip7_r <= {ddrphy_bitslip7_i, ddrphy_bitslip7_r[7:4]};
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip8_value <= (ddrphy_bitslip8_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip8_value <= 1'd0;
	end
	ddrphy_bitslip8_r <= {ddrphy_bitslip8_i, ddrphy_bitslip8_r[7:4]};
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip9_value <= (ddrphy_bitslip9_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip9_value <= 1'd0;
	end
	ddrphy_bitslip9_r <= {ddrphy_bitslip9_i, ddrphy_bitslip9_r[7:4]};
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip10_value <= (ddrphy_bitslip10_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip10_value <= 1'd0;
	end
	ddrphy_bitslip10_r <= {ddrphy_bitslip10_i, ddrphy_bitslip10_r[7:4]};
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip11_value <= (ddrphy_bitslip11_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip11_value <= 1'd0;
	end
	ddrphy_bitslip11_r <= {ddrphy_bitslip11_i, ddrphy_bitslip11_r[7:4]};
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip12_value <= (ddrphy_bitslip12_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip12_value <= 1'd0;
	end
	ddrphy_bitslip12_r <= {ddrphy_bitslip12_i, ddrphy_bitslip12_r[7:4]};
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip13_value <= (ddrphy_bitslip13_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip13_value <= 1'd0;
	end
	ddrphy_bitslip13_r <= {ddrphy_bitslip13_i, ddrphy_bitslip13_r[7:4]};
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip14_value <= (ddrphy_bitslip14_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip14_value <= 1'd0;
	end
	ddrphy_bitslip14_r <= {ddrphy_bitslip14_i, ddrphy_bitslip14_r[7:4]};
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_re)) begin
		ddrphy_bitslip15_value <= (ddrphy_bitslip15_value + 1'd1);
	end
	if ((ddrphy_dly_sel_storage[1] & ddrphy_rdly_dq_bitslip_rst_re)) begin
		ddrphy_bitslip15_value <= 1'd0;
	end
	ddrphy_bitslip15_r <= {ddrphy_bitslip15_i, ddrphy_bitslip15_r[7:4]};
	ddrphy_rddata_en_tappeddelayline0 <= (ddrphy_dfi_p0_rddata_en | ddrphy_dfi_p1_rddata_en);
	ddrphy_rddata_en_tappeddelayline1 <= ddrphy_rddata_en_tappeddelayline0;
	ddrphy_rddata_en_tappeddelayline2 <= ddrphy_rddata_en_tappeddelayline1;
	ddrphy_rddata_en_tappeddelayline3 <= ddrphy_rddata_en_tappeddelayline2;
	ddrphy_rddata_en_tappeddelayline4 <= ddrphy_rddata_en_tappeddelayline3;
	ddrphy_rddata_en_tappeddelayline5 <= ddrphy_rddata_en_tappeddelayline4;
	ddrphy_rddata_en_tappeddelayline6 <= ddrphy_rddata_en_tappeddelayline5;
	ddrphy_rddata_en_tappeddelayline7 <= ddrphy_rddata_en_tappeddelayline6;
	ddrphy_rddata_en_tappeddelayline8 <= ddrphy_rddata_en_tappeddelayline7;
	ddrphy_rddata_en_tappeddelayline9 <= ddrphy_rddata_en_tappeddelayline8;
	ddrphy_rddata_en_tappeddelayline10 <= ddrphy_rddata_en_tappeddelayline9;
	ddrphy_rddata_en_tappeddelayline11 <= ddrphy_rddata_en_tappeddelayline10;
	ddrphy_rddata_en_tappeddelayline12 <= ddrphy_rddata_en_tappeddelayline11;
	ddrphy_wrdata_en_tappeddelayline0 <= (ddrphy_dfi_p0_wrdata_en | ddrphy_dfi_p1_wrdata_en);
	ddrphy_wrdata_en_tappeddelayline1 <= ddrphy_wrdata_en_tappeddelayline0;
	ddrphy_wrdata_en_tappeddelayline2 <= ddrphy_wrdata_en_tappeddelayline1;
	ddrphy_wrdata_en_tappeddelayline3 <= ddrphy_wrdata_en_tappeddelayline2;
	ddrphy_wrdata_en_tappeddelayline4 <= ddrphy_wrdata_en_tappeddelayline3;
	ddrphy_wrdata_en_tappeddelayline5 <= ddrphy_wrdata_en_tappeddelayline4;
	ddrphy_wrdata_en_tappeddelayline6 <= ddrphy_wrdata_en_tappeddelayline5;
	if (sdram_inti_p0_rddata_valid) begin
		sdram_phaseinjector0_rddata_status <= sdram_inti_p0_rddata;
	end
	if (sdram_inti_p1_rddata_valid) begin
		sdram_phaseinjector1_rddata_status <= sdram_inti_p1_rddata;
	end
	if ((sdram_timer_wait & (~sdram_timer_done0))) begin
		sdram_timer_count1 <= (sdram_timer_count1 - 1'd1);
	end else begin
		sdram_timer_count1 <= 9'd374;
	end
	sdram_postponer_req_o <= 1'd0;
	if (sdram_postponer_req_i) begin
		sdram_postponer_count <= (sdram_postponer_count - 1'd1);
		if ((sdram_postponer_count == 1'd0)) begin
			sdram_postponer_count <= 1'd0;
			sdram_postponer_req_o <= 1'd1;
		end
	end
	if (sdram_sequencer_start0) begin
		sdram_sequencer_count <= 1'd0;
	end else begin
		if (sdram_sequencer_done1) begin
			if ((sdram_sequencer_count != 1'd0)) begin
				sdram_sequencer_count <= (sdram_sequencer_count - 1'd1);
			end
		end
	end
	sdram_cmd_payload_a <= 1'd0;
	sdram_cmd_payload_ba <= 1'd0;
	sdram_cmd_payload_cas <= 1'd0;
	sdram_cmd_payload_ras <= 1'd0;
	sdram_cmd_payload_we <= 1'd0;
	sdram_sequencer_done1 <= 1'd0;
	if ((sdram_sequencer_start1 & (sdram_sequencer_counter == 1'd0))) begin
		sdram_cmd_payload_a <= 11'd1024;
		sdram_cmd_payload_ba <= 1'd0;
		sdram_cmd_payload_cas <= 1'd0;
		sdram_cmd_payload_ras <= 1'd1;
		sdram_cmd_payload_we <= 1'd1;
	end
	if ((sdram_sequencer_counter == 2'd2)) begin
		sdram_cmd_payload_a <= 1'd0;
		sdram_cmd_payload_ba <= 1'd0;
		sdram_cmd_payload_cas <= 1'd1;
		sdram_cmd_payload_ras <= 1'd1;
		sdram_cmd_payload_we <= 1'd0;
	end
	if ((sdram_sequencer_counter == 7'd66)) begin
		sdram_cmd_payload_a <= 1'd0;
		sdram_cmd_payload_ba <= 1'd0;
		sdram_cmd_payload_cas <= 1'd0;
		sdram_cmd_payload_ras <= 1'd0;
		sdram_cmd_payload_we <= 1'd0;
		sdram_sequencer_done1 <= 1'd1;
	end
	if ((sdram_sequencer_counter == 7'd66)) begin
		sdram_sequencer_counter <= 1'd0;
	end else begin
		if ((sdram_sequencer_counter != 1'd0)) begin
			sdram_sequencer_counter <= (sdram_sequencer_counter + 1'd1);
		end else begin
			if (sdram_sequencer_start1) begin
				sdram_sequencer_counter <= 1'd1;
			end
		end
	end
	if ((sdram_zqcs_timer_wait & (~sdram_zqcs_timer_done0))) begin
		sdram_zqcs_timer_count1 <= (sdram_zqcs_timer_count1 - 1'd1);
	end else begin
		sdram_zqcs_timer_count1 <= 26'd47999999;
	end
	sdram_zqcs_executer_done <= 1'd0;
	if ((sdram_zqcs_executer_start & (sdram_zqcs_executer_counter == 1'd0))) begin
		sdram_cmd_payload_a <= 11'd1024;
		sdram_cmd_payload_ba <= 1'd0;
		sdram_cmd_payload_cas <= 1'd0;
		sdram_cmd_payload_ras <= 1'd1;
		sdram_cmd_payload_we <= 1'd1;
	end
	if ((sdram_zqcs_executer_counter == 2'd2)) begin
		sdram_cmd_payload_a <= 1'd0;
		sdram_cmd_payload_ba <= 1'd0;
		sdram_cmd_payload_cas <= 1'd0;
		sdram_cmd_payload_ras <= 1'd0;
		sdram_cmd_payload_we <= 1'd1;
	end
	if ((sdram_zqcs_executer_counter == 6'd34)) begin
		sdram_cmd_payload_a <= 1'd0;
		sdram_cmd_payload_ba <= 1'd0;
		sdram_cmd_payload_cas <= 1'd0;
		sdram_cmd_payload_ras <= 1'd0;
		sdram_cmd_payload_we <= 1'd0;
		sdram_zqcs_executer_done <= 1'd1;
	end
	if ((sdram_zqcs_executer_counter == 6'd34)) begin
		sdram_zqcs_executer_counter <= 1'd0;
	end else begin
		if ((sdram_zqcs_executer_counter != 1'd0)) begin
			sdram_zqcs_executer_counter <= (sdram_zqcs_executer_counter + 1'd1);
		end else begin
			if (sdram_zqcs_executer_start) begin
				sdram_zqcs_executer_counter <= 1'd1;
			end
		end
	end
	subfragments_refresher_state <= subfragments_refresher_next_state;
	if (sdram_bankmachine0_row_close) begin
		sdram_bankmachine0_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine0_row_open) begin
			sdram_bankmachine0_row_opened <= 1'd1;
			sdram_bankmachine0_row <= sdram_bankmachine0_cmd_buffer_source_payload_addr[19:7];
		end
	end
	if (((sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine0_cmd_buffer_lookahead_produce <= (sdram_bankmachine0_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine0_cmd_buffer_lookahead_consume <= (sdram_bankmachine0_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine0_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine0_cmd_buffer_lookahead_level <= (sdram_bankmachine0_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine0_cmd_buffer_lookahead_level <= (sdram_bankmachine0_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine0_cmd_buffer_source_valid) | sdram_bankmachine0_cmd_buffer_source_ready)) begin
		sdram_bankmachine0_cmd_buffer_source_valid <= sdram_bankmachine0_cmd_buffer_sink_valid;
		sdram_bankmachine0_cmd_buffer_source_first <= sdram_bankmachine0_cmd_buffer_sink_first;
		sdram_bankmachine0_cmd_buffer_source_last <= sdram_bankmachine0_cmd_buffer_sink_last;
		sdram_bankmachine0_cmd_buffer_source_payload_we <= sdram_bankmachine0_cmd_buffer_sink_payload_we;
		sdram_bankmachine0_cmd_buffer_source_payload_addr <= sdram_bankmachine0_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine0_twtpcon_valid) begin
		sdram_bankmachine0_twtpcon_count <= 3'd6;
		if (1'd0) begin
			sdram_bankmachine0_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine0_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine0_twtpcon_ready)) begin
			sdram_bankmachine0_twtpcon_count <= (sdram_bankmachine0_twtpcon_count - 1'd1);
			if ((sdram_bankmachine0_twtpcon_count == 1'd1)) begin
				sdram_bankmachine0_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine0_trccon_valid) begin
		sdram_bankmachine0_trccon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine0_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine0_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine0_trccon_ready)) begin
			sdram_bankmachine0_trccon_count <= (sdram_bankmachine0_trccon_count - 1'd1);
			if ((sdram_bankmachine0_trccon_count == 1'd1)) begin
				sdram_bankmachine0_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine0_trascon_valid) begin
		sdram_bankmachine0_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine0_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine0_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine0_trascon_ready)) begin
			sdram_bankmachine0_trascon_count <= (sdram_bankmachine0_trascon_count - 1'd1);
			if ((sdram_bankmachine0_trascon_count == 1'd1)) begin
				sdram_bankmachine0_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine0_state <= subfragments_bankmachine0_next_state;
	if (sdram_bankmachine1_row_close) begin
		sdram_bankmachine1_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine1_row_open) begin
			sdram_bankmachine1_row_opened <= 1'd1;
			sdram_bankmachine1_row <= sdram_bankmachine1_cmd_buffer_source_payload_addr[19:7];
		end
	end
	if (((sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine1_cmd_buffer_lookahead_produce <= (sdram_bankmachine1_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine1_cmd_buffer_lookahead_consume <= (sdram_bankmachine1_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine1_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine1_cmd_buffer_lookahead_level <= (sdram_bankmachine1_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine1_cmd_buffer_lookahead_level <= (sdram_bankmachine1_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine1_cmd_buffer_source_valid) | sdram_bankmachine1_cmd_buffer_source_ready)) begin
		sdram_bankmachine1_cmd_buffer_source_valid <= sdram_bankmachine1_cmd_buffer_sink_valid;
		sdram_bankmachine1_cmd_buffer_source_first <= sdram_bankmachine1_cmd_buffer_sink_first;
		sdram_bankmachine1_cmd_buffer_source_last <= sdram_bankmachine1_cmd_buffer_sink_last;
		sdram_bankmachine1_cmd_buffer_source_payload_we <= sdram_bankmachine1_cmd_buffer_sink_payload_we;
		sdram_bankmachine1_cmd_buffer_source_payload_addr <= sdram_bankmachine1_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine1_twtpcon_valid) begin
		sdram_bankmachine1_twtpcon_count <= 3'd6;
		if (1'd0) begin
			sdram_bankmachine1_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine1_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine1_twtpcon_ready)) begin
			sdram_bankmachine1_twtpcon_count <= (sdram_bankmachine1_twtpcon_count - 1'd1);
			if ((sdram_bankmachine1_twtpcon_count == 1'd1)) begin
				sdram_bankmachine1_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine1_trccon_valid) begin
		sdram_bankmachine1_trccon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine1_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine1_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine1_trccon_ready)) begin
			sdram_bankmachine1_trccon_count <= (sdram_bankmachine1_trccon_count - 1'd1);
			if ((sdram_bankmachine1_trccon_count == 1'd1)) begin
				sdram_bankmachine1_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine1_trascon_valid) begin
		sdram_bankmachine1_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine1_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine1_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine1_trascon_ready)) begin
			sdram_bankmachine1_trascon_count <= (sdram_bankmachine1_trascon_count - 1'd1);
			if ((sdram_bankmachine1_trascon_count == 1'd1)) begin
				sdram_bankmachine1_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine1_state <= subfragments_bankmachine1_next_state;
	if (sdram_bankmachine2_row_close) begin
		sdram_bankmachine2_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine2_row_open) begin
			sdram_bankmachine2_row_opened <= 1'd1;
			sdram_bankmachine2_row <= sdram_bankmachine2_cmd_buffer_source_payload_addr[19:7];
		end
	end
	if (((sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine2_cmd_buffer_lookahead_produce <= (sdram_bankmachine2_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine2_cmd_buffer_lookahead_consume <= (sdram_bankmachine2_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine2_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine2_cmd_buffer_lookahead_level <= (sdram_bankmachine2_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine2_cmd_buffer_lookahead_level <= (sdram_bankmachine2_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine2_cmd_buffer_source_valid) | sdram_bankmachine2_cmd_buffer_source_ready)) begin
		sdram_bankmachine2_cmd_buffer_source_valid <= sdram_bankmachine2_cmd_buffer_sink_valid;
		sdram_bankmachine2_cmd_buffer_source_first <= sdram_bankmachine2_cmd_buffer_sink_first;
		sdram_bankmachine2_cmd_buffer_source_last <= sdram_bankmachine2_cmd_buffer_sink_last;
		sdram_bankmachine2_cmd_buffer_source_payload_we <= sdram_bankmachine2_cmd_buffer_sink_payload_we;
		sdram_bankmachine2_cmd_buffer_source_payload_addr <= sdram_bankmachine2_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine2_twtpcon_valid) begin
		sdram_bankmachine2_twtpcon_count <= 3'd6;
		if (1'd0) begin
			sdram_bankmachine2_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine2_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine2_twtpcon_ready)) begin
			sdram_bankmachine2_twtpcon_count <= (sdram_bankmachine2_twtpcon_count - 1'd1);
			if ((sdram_bankmachine2_twtpcon_count == 1'd1)) begin
				sdram_bankmachine2_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine2_trccon_valid) begin
		sdram_bankmachine2_trccon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine2_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine2_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine2_trccon_ready)) begin
			sdram_bankmachine2_trccon_count <= (sdram_bankmachine2_trccon_count - 1'd1);
			if ((sdram_bankmachine2_trccon_count == 1'd1)) begin
				sdram_bankmachine2_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine2_trascon_valid) begin
		sdram_bankmachine2_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine2_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine2_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine2_trascon_ready)) begin
			sdram_bankmachine2_trascon_count <= (sdram_bankmachine2_trascon_count - 1'd1);
			if ((sdram_bankmachine2_trascon_count == 1'd1)) begin
				sdram_bankmachine2_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine2_state <= subfragments_bankmachine2_next_state;
	if (sdram_bankmachine3_row_close) begin
		sdram_bankmachine3_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine3_row_open) begin
			sdram_bankmachine3_row_opened <= 1'd1;
			sdram_bankmachine3_row <= sdram_bankmachine3_cmd_buffer_source_payload_addr[19:7];
		end
	end
	if (((sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine3_cmd_buffer_lookahead_produce <= (sdram_bankmachine3_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine3_cmd_buffer_lookahead_consume <= (sdram_bankmachine3_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine3_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine3_cmd_buffer_lookahead_level <= (sdram_bankmachine3_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine3_cmd_buffer_lookahead_level <= (sdram_bankmachine3_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine3_cmd_buffer_source_valid) | sdram_bankmachine3_cmd_buffer_source_ready)) begin
		sdram_bankmachine3_cmd_buffer_source_valid <= sdram_bankmachine3_cmd_buffer_sink_valid;
		sdram_bankmachine3_cmd_buffer_source_first <= sdram_bankmachine3_cmd_buffer_sink_first;
		sdram_bankmachine3_cmd_buffer_source_last <= sdram_bankmachine3_cmd_buffer_sink_last;
		sdram_bankmachine3_cmd_buffer_source_payload_we <= sdram_bankmachine3_cmd_buffer_sink_payload_we;
		sdram_bankmachine3_cmd_buffer_source_payload_addr <= sdram_bankmachine3_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine3_twtpcon_valid) begin
		sdram_bankmachine3_twtpcon_count <= 3'd6;
		if (1'd0) begin
			sdram_bankmachine3_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine3_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine3_twtpcon_ready)) begin
			sdram_bankmachine3_twtpcon_count <= (sdram_bankmachine3_twtpcon_count - 1'd1);
			if ((sdram_bankmachine3_twtpcon_count == 1'd1)) begin
				sdram_bankmachine3_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine3_trccon_valid) begin
		sdram_bankmachine3_trccon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine3_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine3_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine3_trccon_ready)) begin
			sdram_bankmachine3_trccon_count <= (sdram_bankmachine3_trccon_count - 1'd1);
			if ((sdram_bankmachine3_trccon_count == 1'd1)) begin
				sdram_bankmachine3_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine3_trascon_valid) begin
		sdram_bankmachine3_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine3_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine3_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine3_trascon_ready)) begin
			sdram_bankmachine3_trascon_count <= (sdram_bankmachine3_trascon_count - 1'd1);
			if ((sdram_bankmachine3_trascon_count == 1'd1)) begin
				sdram_bankmachine3_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine3_state <= subfragments_bankmachine3_next_state;
	if (sdram_bankmachine4_row_close) begin
		sdram_bankmachine4_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine4_row_open) begin
			sdram_bankmachine4_row_opened <= 1'd1;
			sdram_bankmachine4_row <= sdram_bankmachine4_cmd_buffer_source_payload_addr[19:7];
		end
	end
	if (((sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable) & (~sdram_bankmachine4_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine4_cmd_buffer_lookahead_produce <= (sdram_bankmachine4_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine4_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine4_cmd_buffer_lookahead_consume <= (sdram_bankmachine4_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable) & (~sdram_bankmachine4_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine4_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine4_cmd_buffer_lookahead_level <= (sdram_bankmachine4_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine4_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine4_cmd_buffer_lookahead_level <= (sdram_bankmachine4_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine4_cmd_buffer_source_valid) | sdram_bankmachine4_cmd_buffer_source_ready)) begin
		sdram_bankmachine4_cmd_buffer_source_valid <= sdram_bankmachine4_cmd_buffer_sink_valid;
		sdram_bankmachine4_cmd_buffer_source_first <= sdram_bankmachine4_cmd_buffer_sink_first;
		sdram_bankmachine4_cmd_buffer_source_last <= sdram_bankmachine4_cmd_buffer_sink_last;
		sdram_bankmachine4_cmd_buffer_source_payload_we <= sdram_bankmachine4_cmd_buffer_sink_payload_we;
		sdram_bankmachine4_cmd_buffer_source_payload_addr <= sdram_bankmachine4_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine4_twtpcon_valid) begin
		sdram_bankmachine4_twtpcon_count <= 3'd6;
		if (1'd0) begin
			sdram_bankmachine4_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine4_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine4_twtpcon_ready)) begin
			sdram_bankmachine4_twtpcon_count <= (sdram_bankmachine4_twtpcon_count - 1'd1);
			if ((sdram_bankmachine4_twtpcon_count == 1'd1)) begin
				sdram_bankmachine4_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine4_trccon_valid) begin
		sdram_bankmachine4_trccon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine4_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine4_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine4_trccon_ready)) begin
			sdram_bankmachine4_trccon_count <= (sdram_bankmachine4_trccon_count - 1'd1);
			if ((sdram_bankmachine4_trccon_count == 1'd1)) begin
				sdram_bankmachine4_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine4_trascon_valid) begin
		sdram_bankmachine4_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine4_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine4_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine4_trascon_ready)) begin
			sdram_bankmachine4_trascon_count <= (sdram_bankmachine4_trascon_count - 1'd1);
			if ((sdram_bankmachine4_trascon_count == 1'd1)) begin
				sdram_bankmachine4_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine4_state <= subfragments_bankmachine4_next_state;
	if (sdram_bankmachine5_row_close) begin
		sdram_bankmachine5_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine5_row_open) begin
			sdram_bankmachine5_row_opened <= 1'd1;
			sdram_bankmachine5_row <= sdram_bankmachine5_cmd_buffer_source_payload_addr[19:7];
		end
	end
	if (((sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable) & (~sdram_bankmachine5_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine5_cmd_buffer_lookahead_produce <= (sdram_bankmachine5_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine5_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine5_cmd_buffer_lookahead_consume <= (sdram_bankmachine5_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable) & (~sdram_bankmachine5_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine5_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine5_cmd_buffer_lookahead_level <= (sdram_bankmachine5_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine5_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine5_cmd_buffer_lookahead_level <= (sdram_bankmachine5_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine5_cmd_buffer_source_valid) | sdram_bankmachine5_cmd_buffer_source_ready)) begin
		sdram_bankmachine5_cmd_buffer_source_valid <= sdram_bankmachine5_cmd_buffer_sink_valid;
		sdram_bankmachine5_cmd_buffer_source_first <= sdram_bankmachine5_cmd_buffer_sink_first;
		sdram_bankmachine5_cmd_buffer_source_last <= sdram_bankmachine5_cmd_buffer_sink_last;
		sdram_bankmachine5_cmd_buffer_source_payload_we <= sdram_bankmachine5_cmd_buffer_sink_payload_we;
		sdram_bankmachine5_cmd_buffer_source_payload_addr <= sdram_bankmachine5_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine5_twtpcon_valid) begin
		sdram_bankmachine5_twtpcon_count <= 3'd6;
		if (1'd0) begin
			sdram_bankmachine5_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine5_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine5_twtpcon_ready)) begin
			sdram_bankmachine5_twtpcon_count <= (sdram_bankmachine5_twtpcon_count - 1'd1);
			if ((sdram_bankmachine5_twtpcon_count == 1'd1)) begin
				sdram_bankmachine5_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine5_trccon_valid) begin
		sdram_bankmachine5_trccon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine5_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine5_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine5_trccon_ready)) begin
			sdram_bankmachine5_trccon_count <= (sdram_bankmachine5_trccon_count - 1'd1);
			if ((sdram_bankmachine5_trccon_count == 1'd1)) begin
				sdram_bankmachine5_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine5_trascon_valid) begin
		sdram_bankmachine5_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine5_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine5_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine5_trascon_ready)) begin
			sdram_bankmachine5_trascon_count <= (sdram_bankmachine5_trascon_count - 1'd1);
			if ((sdram_bankmachine5_trascon_count == 1'd1)) begin
				sdram_bankmachine5_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine5_state <= subfragments_bankmachine5_next_state;
	if (sdram_bankmachine6_row_close) begin
		sdram_bankmachine6_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine6_row_open) begin
			sdram_bankmachine6_row_opened <= 1'd1;
			sdram_bankmachine6_row <= sdram_bankmachine6_cmd_buffer_source_payload_addr[19:7];
		end
	end
	if (((sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable) & (~sdram_bankmachine6_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine6_cmd_buffer_lookahead_produce <= (sdram_bankmachine6_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine6_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine6_cmd_buffer_lookahead_consume <= (sdram_bankmachine6_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable) & (~sdram_bankmachine6_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine6_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine6_cmd_buffer_lookahead_level <= (sdram_bankmachine6_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine6_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine6_cmd_buffer_lookahead_level <= (sdram_bankmachine6_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine6_cmd_buffer_source_valid) | sdram_bankmachine6_cmd_buffer_source_ready)) begin
		sdram_bankmachine6_cmd_buffer_source_valid <= sdram_bankmachine6_cmd_buffer_sink_valid;
		sdram_bankmachine6_cmd_buffer_source_first <= sdram_bankmachine6_cmd_buffer_sink_first;
		sdram_bankmachine6_cmd_buffer_source_last <= sdram_bankmachine6_cmd_buffer_sink_last;
		sdram_bankmachine6_cmd_buffer_source_payload_we <= sdram_bankmachine6_cmd_buffer_sink_payload_we;
		sdram_bankmachine6_cmd_buffer_source_payload_addr <= sdram_bankmachine6_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine6_twtpcon_valid) begin
		sdram_bankmachine6_twtpcon_count <= 3'd6;
		if (1'd0) begin
			sdram_bankmachine6_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine6_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine6_twtpcon_ready)) begin
			sdram_bankmachine6_twtpcon_count <= (sdram_bankmachine6_twtpcon_count - 1'd1);
			if ((sdram_bankmachine6_twtpcon_count == 1'd1)) begin
				sdram_bankmachine6_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine6_trccon_valid) begin
		sdram_bankmachine6_trccon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine6_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine6_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine6_trccon_ready)) begin
			sdram_bankmachine6_trccon_count <= (sdram_bankmachine6_trccon_count - 1'd1);
			if ((sdram_bankmachine6_trccon_count == 1'd1)) begin
				sdram_bankmachine6_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine6_trascon_valid) begin
		sdram_bankmachine6_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine6_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine6_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine6_trascon_ready)) begin
			sdram_bankmachine6_trascon_count <= (sdram_bankmachine6_trascon_count - 1'd1);
			if ((sdram_bankmachine6_trascon_count == 1'd1)) begin
				sdram_bankmachine6_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine6_state <= subfragments_bankmachine6_next_state;
	if (sdram_bankmachine7_row_close) begin
		sdram_bankmachine7_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine7_row_open) begin
			sdram_bankmachine7_row_opened <= 1'd1;
			sdram_bankmachine7_row <= sdram_bankmachine7_cmd_buffer_source_payload_addr[19:7];
		end
	end
	if (((sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable) & (~sdram_bankmachine7_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine7_cmd_buffer_lookahead_produce <= (sdram_bankmachine7_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine7_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine7_cmd_buffer_lookahead_consume <= (sdram_bankmachine7_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable) & (~sdram_bankmachine7_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine7_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine7_cmd_buffer_lookahead_level <= (sdram_bankmachine7_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine7_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine7_cmd_buffer_lookahead_level <= (sdram_bankmachine7_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine7_cmd_buffer_source_valid) | sdram_bankmachine7_cmd_buffer_source_ready)) begin
		sdram_bankmachine7_cmd_buffer_source_valid <= sdram_bankmachine7_cmd_buffer_sink_valid;
		sdram_bankmachine7_cmd_buffer_source_first <= sdram_bankmachine7_cmd_buffer_sink_first;
		sdram_bankmachine7_cmd_buffer_source_last <= sdram_bankmachine7_cmd_buffer_sink_last;
		sdram_bankmachine7_cmd_buffer_source_payload_we <= sdram_bankmachine7_cmd_buffer_sink_payload_we;
		sdram_bankmachine7_cmd_buffer_source_payload_addr <= sdram_bankmachine7_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine7_twtpcon_valid) begin
		sdram_bankmachine7_twtpcon_count <= 3'd6;
		if (1'd0) begin
			sdram_bankmachine7_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine7_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine7_twtpcon_ready)) begin
			sdram_bankmachine7_twtpcon_count <= (sdram_bankmachine7_twtpcon_count - 1'd1);
			if ((sdram_bankmachine7_twtpcon_count == 1'd1)) begin
				sdram_bankmachine7_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine7_trccon_valid) begin
		sdram_bankmachine7_trccon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine7_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine7_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine7_trccon_ready)) begin
			sdram_bankmachine7_trccon_count <= (sdram_bankmachine7_trccon_count - 1'd1);
			if ((sdram_bankmachine7_trccon_count == 1'd1)) begin
				sdram_bankmachine7_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine7_trascon_valid) begin
		sdram_bankmachine7_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine7_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine7_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine7_trascon_ready)) begin
			sdram_bankmachine7_trascon_count <= (sdram_bankmachine7_trascon_count - 1'd1);
			if ((sdram_bankmachine7_trascon_count == 1'd1)) begin
				sdram_bankmachine7_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine7_state <= subfragments_bankmachine7_next_state;
	if ((~sdram_en0)) begin
		sdram_time0 <= 5'd31;
	end else begin
		if ((~sdram_max_time0)) begin
			sdram_time0 <= (sdram_time0 - 1'd1);
		end
	end
	if ((~sdram_en1)) begin
		sdram_time1 <= 4'd15;
	end else begin
		if ((~sdram_max_time1)) begin
			sdram_time1 <= (sdram_time1 - 1'd1);
		end
	end
	if (sdram_choose_cmd_ce) begin
		case (sdram_choose_cmd_grant)
			1'd0: begin
				if (sdram_choose_cmd_request[1]) begin
					sdram_choose_cmd_grant <= 1'd1;
				end else begin
					if (sdram_choose_cmd_request[2]) begin
						sdram_choose_cmd_grant <= 2'd2;
					end else begin
						if (sdram_choose_cmd_request[3]) begin
							sdram_choose_cmd_grant <= 2'd3;
						end else begin
							if (sdram_choose_cmd_request[4]) begin
								sdram_choose_cmd_grant <= 3'd4;
							end else begin
								if (sdram_choose_cmd_request[5]) begin
									sdram_choose_cmd_grant <= 3'd5;
								end else begin
									if (sdram_choose_cmd_request[6]) begin
										sdram_choose_cmd_grant <= 3'd6;
									end else begin
										if (sdram_choose_cmd_request[7]) begin
											sdram_choose_cmd_grant <= 3'd7;
										end
									end
								end
							end
						end
					end
				end
			end
			1'd1: begin
				if (sdram_choose_cmd_request[2]) begin
					sdram_choose_cmd_grant <= 2'd2;
				end else begin
					if (sdram_choose_cmd_request[3]) begin
						sdram_choose_cmd_grant <= 2'd3;
					end else begin
						if (sdram_choose_cmd_request[4]) begin
							sdram_choose_cmd_grant <= 3'd4;
						end else begin
							if (sdram_choose_cmd_request[5]) begin
								sdram_choose_cmd_grant <= 3'd5;
							end else begin
								if (sdram_choose_cmd_request[6]) begin
									sdram_choose_cmd_grant <= 3'd6;
								end else begin
									if (sdram_choose_cmd_request[7]) begin
										sdram_choose_cmd_grant <= 3'd7;
									end else begin
										if (sdram_choose_cmd_request[0]) begin
											sdram_choose_cmd_grant <= 1'd0;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd2: begin
				if (sdram_choose_cmd_request[3]) begin
					sdram_choose_cmd_grant <= 2'd3;
				end else begin
					if (sdram_choose_cmd_request[4]) begin
						sdram_choose_cmd_grant <= 3'd4;
					end else begin
						if (sdram_choose_cmd_request[5]) begin
							sdram_choose_cmd_grant <= 3'd5;
						end else begin
							if (sdram_choose_cmd_request[6]) begin
								sdram_choose_cmd_grant <= 3'd6;
							end else begin
								if (sdram_choose_cmd_request[7]) begin
									sdram_choose_cmd_grant <= 3'd7;
								end else begin
									if (sdram_choose_cmd_request[0]) begin
										sdram_choose_cmd_grant <= 1'd0;
									end else begin
										if (sdram_choose_cmd_request[1]) begin
											sdram_choose_cmd_grant <= 1'd1;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd3: begin
				if (sdram_choose_cmd_request[4]) begin
					sdram_choose_cmd_grant <= 3'd4;
				end else begin
					if (sdram_choose_cmd_request[5]) begin
						sdram_choose_cmd_grant <= 3'd5;
					end else begin
						if (sdram_choose_cmd_request[6]) begin
							sdram_choose_cmd_grant <= 3'd6;
						end else begin
							if (sdram_choose_cmd_request[7]) begin
								sdram_choose_cmd_grant <= 3'd7;
							end else begin
								if (sdram_choose_cmd_request[0]) begin
									sdram_choose_cmd_grant <= 1'd0;
								end else begin
									if (sdram_choose_cmd_request[1]) begin
										sdram_choose_cmd_grant <= 1'd1;
									end else begin
										if (sdram_choose_cmd_request[2]) begin
											sdram_choose_cmd_grant <= 2'd2;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd4: begin
				if (sdram_choose_cmd_request[5]) begin
					sdram_choose_cmd_grant <= 3'd5;
				end else begin
					if (sdram_choose_cmd_request[6]) begin
						sdram_choose_cmd_grant <= 3'd6;
					end else begin
						if (sdram_choose_cmd_request[7]) begin
							sdram_choose_cmd_grant <= 3'd7;
						end else begin
							if (sdram_choose_cmd_request[0]) begin
								sdram_choose_cmd_grant <= 1'd0;
							end else begin
								if (sdram_choose_cmd_request[1]) begin
									sdram_choose_cmd_grant <= 1'd1;
								end else begin
									if (sdram_choose_cmd_request[2]) begin
										sdram_choose_cmd_grant <= 2'd2;
									end else begin
										if (sdram_choose_cmd_request[3]) begin
											sdram_choose_cmd_grant <= 2'd3;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd5: begin
				if (sdram_choose_cmd_request[6]) begin
					sdram_choose_cmd_grant <= 3'd6;
				end else begin
					if (sdram_choose_cmd_request[7]) begin
						sdram_choose_cmd_grant <= 3'd7;
					end else begin
						if (sdram_choose_cmd_request[0]) begin
							sdram_choose_cmd_grant <= 1'd0;
						end else begin
							if (sdram_choose_cmd_request[1]) begin
								sdram_choose_cmd_grant <= 1'd1;
							end else begin
								if (sdram_choose_cmd_request[2]) begin
									sdram_choose_cmd_grant <= 2'd2;
								end else begin
									if (sdram_choose_cmd_request[3]) begin
										sdram_choose_cmd_grant <= 2'd3;
									end else begin
										if (sdram_choose_cmd_request[4]) begin
											sdram_choose_cmd_grant <= 3'd4;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd6: begin
				if (sdram_choose_cmd_request[7]) begin
					sdram_choose_cmd_grant <= 3'd7;
				end else begin
					if (sdram_choose_cmd_request[0]) begin
						sdram_choose_cmd_grant <= 1'd0;
					end else begin
						if (sdram_choose_cmd_request[1]) begin
							sdram_choose_cmd_grant <= 1'd1;
						end else begin
							if (sdram_choose_cmd_request[2]) begin
								sdram_choose_cmd_grant <= 2'd2;
							end else begin
								if (sdram_choose_cmd_request[3]) begin
									sdram_choose_cmd_grant <= 2'd3;
								end else begin
									if (sdram_choose_cmd_request[4]) begin
										sdram_choose_cmd_grant <= 3'd4;
									end else begin
										if (sdram_choose_cmd_request[5]) begin
											sdram_choose_cmd_grant <= 3'd5;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd7: begin
				if (sdram_choose_cmd_request[0]) begin
					sdram_choose_cmd_grant <= 1'd0;
				end else begin
					if (sdram_choose_cmd_request[1]) begin
						sdram_choose_cmd_grant <= 1'd1;
					end else begin
						if (sdram_choose_cmd_request[2]) begin
							sdram_choose_cmd_grant <= 2'd2;
						end else begin
							if (sdram_choose_cmd_request[3]) begin
								sdram_choose_cmd_grant <= 2'd3;
							end else begin
								if (sdram_choose_cmd_request[4]) begin
									sdram_choose_cmd_grant <= 3'd4;
								end else begin
									if (sdram_choose_cmd_request[5]) begin
										sdram_choose_cmd_grant <= 3'd5;
									end else begin
										if (sdram_choose_cmd_request[6]) begin
											sdram_choose_cmd_grant <= 3'd6;
										end
									end
								end
							end
						end
					end
				end
			end
		endcase
	end
	if (sdram_choose_req_ce) begin
		case (sdram_choose_req_grant)
			1'd0: begin
				if (sdram_choose_req_request[1]) begin
					sdram_choose_req_grant <= 1'd1;
				end else begin
					if (sdram_choose_req_request[2]) begin
						sdram_choose_req_grant <= 2'd2;
					end else begin
						if (sdram_choose_req_request[3]) begin
							sdram_choose_req_grant <= 2'd3;
						end else begin
							if (sdram_choose_req_request[4]) begin
								sdram_choose_req_grant <= 3'd4;
							end else begin
								if (sdram_choose_req_request[5]) begin
									sdram_choose_req_grant <= 3'd5;
								end else begin
									if (sdram_choose_req_request[6]) begin
										sdram_choose_req_grant <= 3'd6;
									end else begin
										if (sdram_choose_req_request[7]) begin
											sdram_choose_req_grant <= 3'd7;
										end
									end
								end
							end
						end
					end
				end
			end
			1'd1: begin
				if (sdram_choose_req_request[2]) begin
					sdram_choose_req_grant <= 2'd2;
				end else begin
					if (sdram_choose_req_request[3]) begin
						sdram_choose_req_grant <= 2'd3;
					end else begin
						if (sdram_choose_req_request[4]) begin
							sdram_choose_req_grant <= 3'd4;
						end else begin
							if (sdram_choose_req_request[5]) begin
								sdram_choose_req_grant <= 3'd5;
							end else begin
								if (sdram_choose_req_request[6]) begin
									sdram_choose_req_grant <= 3'd6;
								end else begin
									if (sdram_choose_req_request[7]) begin
										sdram_choose_req_grant <= 3'd7;
									end else begin
										if (sdram_choose_req_request[0]) begin
											sdram_choose_req_grant <= 1'd0;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd2: begin
				if (sdram_choose_req_request[3]) begin
					sdram_choose_req_grant <= 2'd3;
				end else begin
					if (sdram_choose_req_request[4]) begin
						sdram_choose_req_grant <= 3'd4;
					end else begin
						if (sdram_choose_req_request[5]) begin
							sdram_choose_req_grant <= 3'd5;
						end else begin
							if (sdram_choose_req_request[6]) begin
								sdram_choose_req_grant <= 3'd6;
							end else begin
								if (sdram_choose_req_request[7]) begin
									sdram_choose_req_grant <= 3'd7;
								end else begin
									if (sdram_choose_req_request[0]) begin
										sdram_choose_req_grant <= 1'd0;
									end else begin
										if (sdram_choose_req_request[1]) begin
											sdram_choose_req_grant <= 1'd1;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd3: begin
				if (sdram_choose_req_request[4]) begin
					sdram_choose_req_grant <= 3'd4;
				end else begin
					if (sdram_choose_req_request[5]) begin
						sdram_choose_req_grant <= 3'd5;
					end else begin
						if (sdram_choose_req_request[6]) begin
							sdram_choose_req_grant <= 3'd6;
						end else begin
							if (sdram_choose_req_request[7]) begin
								sdram_choose_req_grant <= 3'd7;
							end else begin
								if (sdram_choose_req_request[0]) begin
									sdram_choose_req_grant <= 1'd0;
								end else begin
									if (sdram_choose_req_request[1]) begin
										sdram_choose_req_grant <= 1'd1;
									end else begin
										if (sdram_choose_req_request[2]) begin
											sdram_choose_req_grant <= 2'd2;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd4: begin
				if (sdram_choose_req_request[5]) begin
					sdram_choose_req_grant <= 3'd5;
				end else begin
					if (sdram_choose_req_request[6]) begin
						sdram_choose_req_grant <= 3'd6;
					end else begin
						if (sdram_choose_req_request[7]) begin
							sdram_choose_req_grant <= 3'd7;
						end else begin
							if (sdram_choose_req_request[0]) begin
								sdram_choose_req_grant <= 1'd0;
							end else begin
								if (sdram_choose_req_request[1]) begin
									sdram_choose_req_grant <= 1'd1;
								end else begin
									if (sdram_choose_req_request[2]) begin
										sdram_choose_req_grant <= 2'd2;
									end else begin
										if (sdram_choose_req_request[3]) begin
											sdram_choose_req_grant <= 2'd3;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd5: begin
				if (sdram_choose_req_request[6]) begin
					sdram_choose_req_grant <= 3'd6;
				end else begin
					if (sdram_choose_req_request[7]) begin
						sdram_choose_req_grant <= 3'd7;
					end else begin
						if (sdram_choose_req_request[0]) begin
							sdram_choose_req_grant <= 1'd0;
						end else begin
							if (sdram_choose_req_request[1]) begin
								sdram_choose_req_grant <= 1'd1;
							end else begin
								if (sdram_choose_req_request[2]) begin
									sdram_choose_req_grant <= 2'd2;
								end else begin
									if (sdram_choose_req_request[3]) begin
										sdram_choose_req_grant <= 2'd3;
									end else begin
										if (sdram_choose_req_request[4]) begin
											sdram_choose_req_grant <= 3'd4;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd6: begin
				if (sdram_choose_req_request[7]) begin
					sdram_choose_req_grant <= 3'd7;
				end else begin
					if (sdram_choose_req_request[0]) begin
						sdram_choose_req_grant <= 1'd0;
					end else begin
						if (sdram_choose_req_request[1]) begin
							sdram_choose_req_grant <= 1'd1;
						end else begin
							if (sdram_choose_req_request[2]) begin
								sdram_choose_req_grant <= 2'd2;
							end else begin
								if (sdram_choose_req_request[3]) begin
									sdram_choose_req_grant <= 2'd3;
								end else begin
									if (sdram_choose_req_request[4]) begin
										sdram_choose_req_grant <= 3'd4;
									end else begin
										if (sdram_choose_req_request[5]) begin
											sdram_choose_req_grant <= 3'd5;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd7: begin
				if (sdram_choose_req_request[0]) begin
					sdram_choose_req_grant <= 1'd0;
				end else begin
					if (sdram_choose_req_request[1]) begin
						sdram_choose_req_grant <= 1'd1;
					end else begin
						if (sdram_choose_req_request[2]) begin
							sdram_choose_req_grant <= 2'd2;
						end else begin
							if (sdram_choose_req_request[3]) begin
								sdram_choose_req_grant <= 2'd3;
							end else begin
								if (sdram_choose_req_request[4]) begin
									sdram_choose_req_grant <= 3'd4;
								end else begin
									if (sdram_choose_req_request[5]) begin
										sdram_choose_req_grant <= 3'd5;
									end else begin
										if (sdram_choose_req_request[6]) begin
											sdram_choose_req_grant <= 3'd6;
										end
									end
								end
							end
						end
					end
				end
			end
		endcase
	end
	sdram_dfi_p0_cs_n <= 1'd0;
	sdram_dfi_p0_bank <= array_muxed0;
	sdram_dfi_p0_address <= array_muxed1;
	sdram_dfi_p0_cas_n <= (~array_muxed2);
	sdram_dfi_p0_ras_n <= (~array_muxed3);
	sdram_dfi_p0_we_n <= (~array_muxed4);
	sdram_dfi_p0_rddata_en <= array_muxed5;
	sdram_dfi_p0_wrdata_en <= array_muxed6;
	sdram_dfi_p1_cs_n <= 1'd0;
	sdram_dfi_p1_bank <= array_muxed7;
	sdram_dfi_p1_address <= array_muxed8;
	sdram_dfi_p1_cas_n <= (~array_muxed9);
	sdram_dfi_p1_ras_n <= (~array_muxed10);
	sdram_dfi_p1_we_n <= (~array_muxed11);
	sdram_dfi_p1_rddata_en <= array_muxed12;
	sdram_dfi_p1_wrdata_en <= array_muxed13;
	if (sdram_trrdcon_valid) begin
		sdram_trrdcon_count <= 1'd1;
		if (1'd0) begin
			sdram_trrdcon_ready <= 1'd1;
		end else begin
			sdram_trrdcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_trrdcon_ready)) begin
			sdram_trrdcon_count <= (sdram_trrdcon_count - 1'd1);
			if ((sdram_trrdcon_count == 1'd1)) begin
				sdram_trrdcon_ready <= 1'd1;
			end
		end
	end
	sdram_tfawcon_window <= {sdram_tfawcon_window, sdram_tfawcon_valid};
	if ((sdram_tfawcon_count < 3'd4)) begin
		if ((sdram_tfawcon_count == 2'd3)) begin
			sdram_tfawcon_ready <= (~sdram_tfawcon_valid);
		end else begin
			sdram_tfawcon_ready <= 1'd1;
		end
	end
	if (sdram_tccdcon_valid) begin
		sdram_tccdcon_count <= 1'd1;
		if (1'd0) begin
			sdram_tccdcon_ready <= 1'd1;
		end else begin
			sdram_tccdcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_tccdcon_ready)) begin
			sdram_tccdcon_count <= (sdram_tccdcon_count - 1'd1);
			if ((sdram_tccdcon_count == 1'd1)) begin
				sdram_tccdcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_twtrcon_valid) begin
		sdram_twtrcon_count <= 3'd6;
		if (1'd0) begin
			sdram_twtrcon_ready <= 1'd1;
		end else begin
			sdram_twtrcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_twtrcon_ready)) begin
			sdram_twtrcon_count <= (sdram_twtrcon_count - 1'd1);
			if ((sdram_twtrcon_count == 1'd1)) begin
				sdram_twtrcon_ready <= 1'd1;
			end
		end
	end
	subfragments_multiplexer_state <= subfragments_multiplexer_next_state;
	subfragments_new_master_wdata_ready0 <= ((((((((1'd0 | ((subfragments_roundrobin0_grant == 1'd0) & sdram_interface_bank0_wdata_ready)) | ((subfragments_roundrobin1_grant == 1'd0) & sdram_interface_bank1_wdata_ready)) | ((subfragments_roundrobin2_grant == 1'd0) & sdram_interface_bank2_wdata_ready)) | ((subfragments_roundrobin3_grant == 1'd0) & sdram_interface_bank3_wdata_ready)) | ((subfragments_roundrobin4_grant == 1'd0) & sdram_interface_bank4_wdata_ready)) | ((subfragments_roundrobin5_grant == 1'd0) & sdram_interface_bank5_wdata_ready)) | ((subfragments_roundrobin6_grant == 1'd0) & sdram_interface_bank6_wdata_ready)) | ((subfragments_roundrobin7_grant == 1'd0) & sdram_interface_bank7_wdata_ready));
	subfragments_new_master_wdata_ready1 <= subfragments_new_master_wdata_ready0;
	subfragments_new_master_wdata_ready2 <= subfragments_new_master_wdata_ready1;
	subfragments_new_master_wdata_ready3 <= subfragments_new_master_wdata_ready2;
	subfragments_new_master_rdata_valid0 <= ((((((((1'd0 | ((subfragments_roundrobin0_grant == 1'd0) & sdram_interface_bank0_rdata_valid)) | ((subfragments_roundrobin1_grant == 1'd0) & sdram_interface_bank1_rdata_valid)) | ((subfragments_roundrobin2_grant == 1'd0) & sdram_interface_bank2_rdata_valid)) | ((subfragments_roundrobin3_grant == 1'd0) & sdram_interface_bank3_rdata_valid)) | ((subfragments_roundrobin4_grant == 1'd0) & sdram_interface_bank4_rdata_valid)) | ((subfragments_roundrobin5_grant == 1'd0) & sdram_interface_bank5_rdata_valid)) | ((subfragments_roundrobin6_grant == 1'd0) & sdram_interface_bank6_rdata_valid)) | ((subfragments_roundrobin7_grant == 1'd0) & sdram_interface_bank7_rdata_valid));
	subfragments_new_master_rdata_valid1 <= subfragments_new_master_rdata_valid0;
	subfragments_new_master_rdata_valid2 <= subfragments_new_master_rdata_valid1;
	subfragments_new_master_rdata_valid3 <= subfragments_new_master_rdata_valid2;
	subfragments_new_master_rdata_valid4 <= subfragments_new_master_rdata_valid3;
	subfragments_new_master_rdata_valid5 <= subfragments_new_master_rdata_valid4;
	subfragments_new_master_rdata_valid6 <= subfragments_new_master_rdata_valid5;
	subfragments_new_master_rdata_valid7 <= subfragments_new_master_rdata_valid6;
	subfragments_new_master_rdata_valid8 <= subfragments_new_master_rdata_valid7;
	subfragments_new_master_rdata_valid9 <= subfragments_new_master_rdata_valid8;
	subfragments_new_master_rdata_valid10 <= subfragments_new_master_rdata_valid9;
	subfragments_new_master_rdata_valid11 <= subfragments_new_master_rdata_valid10;
	subfragments_new_master_rdata_valid12 <= subfragments_new_master_rdata_valid11;
	subfragments_new_master_rdata_valid13 <= subfragments_new_master_rdata_valid12;
	adr_offset_r <= wb_sdram_adr[1:0];
	subfragments_state <= subfragments_next_state;
	if (interface_ack) begin
		cmd_consumed <= 1'd0;
		wdata_consumed <= 1'd0;
	end else begin
		if ((port_cmd_valid & port_cmd_ready)) begin
			cmd_consumed <= 1'd1;
		end
		if ((port_wdata_valid & port_wdata_ready)) begin
			wdata_consumed <= 1'd1;
		end
	end
	if ((div_m_counter >= div_m_storage)) begin
		div_m_counter <= 1'd0;
	end else begin
		div_m_counter <= (div_m_counter + 1'd1);
	end
	pdm_r_sigma <= (pdm_r_sigma + {pdm_r_out, pdm_r_out, pdm_r_level_corr});
	pdm_g_sigma <= (pdm_g_sigma + {pdm_g_out, pdm_g_out, pdm_g_level_corr});
	pdm_b_sigma <= (pdm_b_sigma + {pdm_b_out, pdm_b_out, pdm_b_level_corr});
	if (strobe) begin
		pwm0_counter_value <= (pwm0_counter_value + 1'd1);
	end
	pwm0_pwm_counter <= (pwm0_pwm_counter + 1'd1);
	if ((lxspi_i1 == 1'd0)) begin
		lxspi_clk <= 1'd1;
		lxspi_dqi <= lxspi_i0;
	end
	if ((lxspi_i1 == 1'd1)) begin
		lxspi_i1 <= 1'd0;
		lxspi_clk <= 1'd0;
		lxspi_sr <= {lxspi_sr[27:0], lxspi_dqi};
	end else begin
		lxspi_i1 <= (lxspi_i1 + 1'd1);
	end
	if ((((lxspi_bus_cyc & lxspi_bus_stb) & (lxspi_i1 == 1'd1)) & (lxspi_counter == 1'd0))) begin
		lxspi_dq_oe <= 1'd1;
		lxspi_cs_n <= 1'd0;
		lxspi_sr[31:0] <= 32'd4294901503;
	end
	if ((lxspi_counter == 5'd16)) begin
		lxspi_sr[31:8] <= {lxspi_bus_adr, {2{1'd0}}};
	end
	if ((lxspi_counter == 5'd28)) begin
		lxspi_dq_oe <= 1'd0;
	end
	if ((lxspi_counter == 6'd56)) begin
		lxspi_bus_ack <= 1'd1;
		lxspi_cs_n <= 1'd1;
	end
	if ((lxspi_counter == 6'd57)) begin
		lxspi_bus_ack <= 1'd0;
	end
	if ((lxspi_counter == 6'd59)) begin
	end
	if ((lxspi_counter == 6'd59)) begin
		lxspi_counter <= 1'd0;
	end else begin
		if ((lxspi_counter != 1'd0)) begin
			lxspi_counter <= (lxspi_counter + 1'd1);
		end else begin
			if (((lxspi_bus_cyc & lxspi_bus_stb) & (lxspi_i1 == 1'd1))) begin
				lxspi_counter <= 1'd1;
			end
		end
	end
	usb0_ack <= 1'd0;
	if (usb0_asyncfifo1_source_valid) begin
		usb0_ack <= (usb0_bus_bus_adr[13:0] == usb0_asyncfifo1_source_payload_adr);
		usb0_bus_csr_dat_r <= usb0_asyncfifo1_source_payload_dat_r;
	end
	subfragments_wb2csr_state <= subfragments_wb2csr_next_state;
	usb0_asyncfifo0_graycounter0_q_binary <= usb0_asyncfifo0_graycounter0_q_next_binary;
	usb0_asyncfifo0_graycounter0_q <= usb0_asyncfifo0_graycounter0_q_next;
	usb0_asyncfifo1_graycounter3_q_binary <= usb0_asyncfifo1_graycounter3_q_next_binary;
	usb0_asyncfifo1_graycounter3_q <= usb0_asyncfifo1_graycounter3_q_next;
	basesoc_state <= basesoc_next_state;
	if (basesoc_basesoc_dat_w_basesoc_next_value_ce0) begin
		basesoc_basesoc_dat_w <= basesoc_basesoc_dat_w_basesoc_next_value0;
	end
	if (basesoc_basesoc_adr_basesoc_next_value_ce1) begin
		basesoc_basesoc_adr <= basesoc_basesoc_adr_basesoc_next_value1;
	end
	if (basesoc_basesoc_we_basesoc_next_value_ce2) begin
		basesoc_basesoc_we <= basesoc_basesoc_we_basesoc_next_value2;
	end
	case (basesoc_grant)
		1'd0: begin
			if ((~basesoc_request[0])) begin
				if (basesoc_request[1]) begin
					basesoc_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~basesoc_request[1])) begin
				if (basesoc_request[0]) begin
					basesoc_grant <= 1'd0;
				end
			end
		end
	endcase
	basesoc_slave_sel_r <= basesoc_slave_sel;
	if (basesoc_wait) begin
		if ((~basesoc_done)) begin
			basesoc_count <= (basesoc_count - 1'd1);
		end
	end else begin
		basesoc_count <= 20'd1000000;
	end
	basesoc_interface0_bank_bus_dat_r <= 1'd0;
	if (basesoc_csrbank0_sel) begin
		case (basesoc_interface0_bank_bus_adr[0])
			1'd0: begin
				basesoc_interface0_bank_bus_dat_r <= basesoc_csrbank0_in_w;
			end
		endcase
	end
	basesoc_interface1_bank_bus_dat_r <= 1'd0;
	if (basesoc_csrbank1_sel) begin
		case (basesoc_interface1_bank_bus_adr[1:0])
			1'd0: begin
				basesoc_interface1_bank_bus_dat_r <= basesoc_csrbank1_reset0_w;
			end
			1'd1: begin
				basesoc_interface1_bank_bus_dat_r <= basesoc_csrbank1_scratch0_w;
			end
			2'd2: begin
				basesoc_interface1_bank_bus_dat_r <= basesoc_csrbank1_bus_errors_w;
			end
		endcase
	end
	if (basesoc_csrbank1_reset0_re) begin
		soccontroller_reset_storage <= basesoc_csrbank1_reset0_r;
	end
	soccontroller_reset_re <= basesoc_csrbank1_reset0_re;
	if (basesoc_csrbank1_scratch0_re) begin
		soccontroller_scratch_storage[31:0] <= basesoc_csrbank1_scratch0_r;
	end
	soccontroller_scratch_re <= basesoc_csrbank1_scratch0_re;
	basesoc_interface2_bank_bus_dat_r <= 1'd0;
	if (basesoc_csrbank2_sel) begin
		case (basesoc_interface2_bank_bus_adr[2:0])
			1'd0: begin
				basesoc_interface2_bank_bus_dat_r <= basesoc_csrbank2_dly_sel0_w;
			end
			1'd1: begin
				basesoc_interface2_bank_bus_dat_r <= ddrphy_rdly_dq_rst_w;
			end
			2'd2: begin
				basesoc_interface2_bank_bus_dat_r <= ddrphy_rdly_dq_inc_w;
			end
			2'd3: begin
				basesoc_interface2_bank_bus_dat_r <= ddrphy_rdly_dq_bitslip_rst_w;
			end
			3'd4: begin
				basesoc_interface2_bank_bus_dat_r <= ddrphy_rdly_dq_bitslip_w;
			end
			3'd5: begin
				basesoc_interface2_bank_bus_dat_r <= ddrphy_burstdet_clr_w;
			end
			3'd6: begin
				basesoc_interface2_bank_bus_dat_r <= basesoc_csrbank2_burstdet_seen_w;
			end
		endcase
	end
	if (basesoc_csrbank2_dly_sel0_re) begin
		ddrphy_dly_sel_storage[1:0] <= basesoc_csrbank2_dly_sel0_r;
	end
	ddrphy_dly_sel_re <= basesoc_csrbank2_dly_sel0_re;
	basesoc_interface3_bank_bus_dat_r <= 1'd0;
	if (basesoc_csrbank3_sel) begin
		case (basesoc_interface3_bank_bus_adr[3:0])
			1'd0: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_oe0_w;
			end
			1'd1: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_in_w;
			end
			2'd2: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_out0_w;
			end
			2'd3: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt00_w;
			end
			3'd4: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt10_w;
			end
			3'd5: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt50_w;
			end
			3'd6: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt60_w;
			end
			3'd7: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt90_w;
			end
			4'd8: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt100_w;
			end
			4'd9: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt110_w;
			end
			4'd10: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt120_w;
			end
			4'd11: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt130_w;
			end
			4'd12: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt180_w;
			end
			4'd13: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt190_w;
			end
			4'd14: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt200_w;
			end
			4'd15: begin
				basesoc_interface3_bank_bus_dat_r <= basesoc_csrbank3_alt210_w;
			end
		endcase
	end
	if (basesoc_csrbank3_oe0_re) begin
		oe_storage[21:0] <= basesoc_csrbank3_oe0_r;
	end
	oe_re <= basesoc_csrbank3_oe0_re;
	if (basesoc_csrbank3_out0_re) begin
		out_storage[21:0] <= basesoc_csrbank3_out0_r;
	end
	out_re <= basesoc_csrbank3_out0_re;
	if (basesoc_csrbank3_alt00_re) begin
		subfragments_csrstorage0_storage[7:0] <= basesoc_csrbank3_alt00_r;
	end
	subfragments_csrstorage0_re <= basesoc_csrbank3_alt00_re;
	if (basesoc_csrbank3_alt10_re) begin
		subfragments_csrstorage1_storage[7:0] <= basesoc_csrbank3_alt10_r;
	end
	subfragments_csrstorage1_re <= basesoc_csrbank3_alt10_re;
	if (basesoc_csrbank3_alt50_re) begin
		subfragments_csrstorage2_storage[7:0] <= basesoc_csrbank3_alt50_r;
	end
	subfragments_csrstorage2_re <= basesoc_csrbank3_alt50_re;
	if (basesoc_csrbank3_alt60_re) begin
		subfragments_csrstorage3_storage[7:0] <= basesoc_csrbank3_alt60_r;
	end
	subfragments_csrstorage3_re <= basesoc_csrbank3_alt60_re;
	if (basesoc_csrbank3_alt90_re) begin
		subfragments_csrstorage4_storage[7:0] <= basesoc_csrbank3_alt90_r;
	end
	subfragments_csrstorage4_re <= basesoc_csrbank3_alt90_re;
	if (basesoc_csrbank3_alt100_re) begin
		subfragments_csrstorage5_storage[7:0] <= basesoc_csrbank3_alt100_r;
	end
	subfragments_csrstorage5_re <= basesoc_csrbank3_alt100_re;
	if (basesoc_csrbank3_alt110_re) begin
		subfragments_csrstorage6_storage[7:0] <= basesoc_csrbank3_alt110_r;
	end
	subfragments_csrstorage6_re <= basesoc_csrbank3_alt110_re;
	if (basesoc_csrbank3_alt120_re) begin
		subfragments_csrstorage7_storage[7:0] <= basesoc_csrbank3_alt120_r;
	end
	subfragments_csrstorage7_re <= basesoc_csrbank3_alt120_re;
	if (basesoc_csrbank3_alt130_re) begin
		subfragments_csrstorage8_storage[7:0] <= basesoc_csrbank3_alt130_r;
	end
	subfragments_csrstorage8_re <= basesoc_csrbank3_alt130_re;
	if (basesoc_csrbank3_alt180_re) begin
		subfragments_csrstorage9_storage[7:0] <= basesoc_csrbank3_alt180_r;
	end
	subfragments_csrstorage9_re <= basesoc_csrbank3_alt180_re;
	if (basesoc_csrbank3_alt190_re) begin
		subfragments_csrstorage10_storage[7:0] <= basesoc_csrbank3_alt190_r;
	end
	subfragments_csrstorage10_re <= basesoc_csrbank3_alt190_re;
	if (basesoc_csrbank3_alt200_re) begin
		subfragments_csrstorage11_storage[7:0] <= basesoc_csrbank3_alt200_r;
	end
	subfragments_csrstorage11_re <= basesoc_csrbank3_alt200_re;
	if (basesoc_csrbank3_alt210_re) begin
		subfragments_csrstorage12_storage[7:0] <= basesoc_csrbank3_alt210_r;
	end
	subfragments_csrstorage12_re <= basesoc_csrbank3_alt210_re;
	basesoc_interface4_bank_bus_dat_r <= 1'd0;
	if (basesoc_csrbank4_sel) begin
		case (basesoc_interface4_bank_bus_adr[1:0])
			1'd0: begin
				basesoc_interface4_bank_bus_dat_r <= basesoc_csrbank4_bitbang0_w;
			end
			1'd1: begin
				basesoc_interface4_bank_bus_dat_r <= basesoc_csrbank4_miso_w;
			end
			2'd2: begin
				basesoc_interface4_bank_bus_dat_r <= basesoc_csrbank4_bitbang_en0_w;
			end
		endcase
	end
	if (basesoc_csrbank4_bitbang0_re) begin
		lxspi_bitbang_storage[3:0] <= basesoc_csrbank4_bitbang0_r;
	end
	lxspi_bitbang_re <= basesoc_csrbank4_bitbang0_re;
	if (basesoc_csrbank4_bitbang_en0_re) begin
		lxspi_bitbang_en_storage <= basesoc_csrbank4_bitbang_en0_r;
	end
	lxspi_bitbang_en_re <= basesoc_csrbank4_bitbang_en0_re;
	basesoc_interface5_bank_bus_dat_r <= 1'd0;
	if (basesoc_csrbank5_sel) begin
		case (basesoc_interface5_bank_bus_adr[2:0])
			1'd0: begin
				basesoc_interface5_bank_bus_dat_r <= basesoc_csrbank5_r0_w;
			end
			1'd1: begin
				basesoc_interface5_bank_bus_dat_r <= basesoc_csrbank5_g0_w;
			end
			2'd2: begin
				basesoc_interface5_bank_bus_dat_r <= basesoc_csrbank5_b0_w;
			end
			2'd3: begin
				basesoc_interface5_bank_bus_dat_r <= basesoc_csrbank5_div_m0_w;
			end
			3'd4: begin
				basesoc_interface5_bank_bus_dat_r <= basesoc_csrbank5_config0_w;
			end
		endcase
	end
	if (basesoc_csrbank5_r0_re) begin
		r_storage[7:0] <= basesoc_csrbank5_r0_r;
	end
	r_re <= basesoc_csrbank5_r0_re;
	if (basesoc_csrbank5_g0_re) begin
		g_storage[7:0] <= basesoc_csrbank5_g0_r;
	end
	g_re <= basesoc_csrbank5_g0_re;
	if (basesoc_csrbank5_b0_re) begin
		b_storage[7:0] <= basesoc_csrbank5_b0_r;
	end
	b_re <= basesoc_csrbank5_b0_re;
	if (basesoc_csrbank5_div_m0_re) begin
		div_m_storage[31:0] <= basesoc_csrbank5_div_m0_r;
	end
	div_m_re <= basesoc_csrbank5_div_m0_re;
	if (basesoc_csrbank5_config0_re) begin
		config_storage[1:0] <= basesoc_csrbank5_config0_r;
	end
	config_re <= basesoc_csrbank5_config0_re;
	basesoc_interface6_bank_bus_dat_r <= 1'd0;
	if (basesoc_csrbank6_sel) begin
		case (basesoc_interface6_bank_bus_adr[4:0])
			1'd0: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_control0_w;
			end
			1'd1: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi0_command0_w;
			end
			2'd2: begin
				basesoc_interface6_bank_bus_dat_r <= sdram_phaseinjector0_command_issue_w;
			end
			2'd3: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi0_address0_w;
			end
			3'd4: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi0_baddress0_w;
			end
			3'd5: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi0_wrdata1_w;
			end
			3'd6: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi0_wrdata0_w;
			end
			3'd7: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi0_rddata1_w;
			end
			4'd8: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi0_rddata0_w;
			end
			4'd9: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi1_command0_w;
			end
			4'd10: begin
				basesoc_interface6_bank_bus_dat_r <= sdram_phaseinjector1_command_issue_w;
			end
			4'd11: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi1_address0_w;
			end
			4'd12: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi1_baddress0_w;
			end
			4'd13: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi1_wrdata1_w;
			end
			4'd14: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi1_wrdata0_w;
			end
			4'd15: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi1_rddata1_w;
			end
			5'd16: begin
				basesoc_interface6_bank_bus_dat_r <= basesoc_csrbank6_dfii_pi1_rddata0_w;
			end
		endcase
	end
	if (basesoc_csrbank6_dfii_control0_re) begin
		sdram_storage[3:0] <= basesoc_csrbank6_dfii_control0_r;
	end
	sdram_re <= basesoc_csrbank6_dfii_control0_re;
	if (basesoc_csrbank6_dfii_pi0_command0_re) begin
		sdram_phaseinjector0_command_storage[5:0] <= basesoc_csrbank6_dfii_pi0_command0_r;
	end
	sdram_phaseinjector0_command_re <= basesoc_csrbank6_dfii_pi0_command0_re;
	if (basesoc_csrbank6_dfii_pi0_address0_re) begin
		sdram_phaseinjector0_address_storage[12:0] <= basesoc_csrbank6_dfii_pi0_address0_r;
	end
	sdram_phaseinjector0_address_re <= basesoc_csrbank6_dfii_pi0_address0_re;
	if (basesoc_csrbank6_dfii_pi0_baddress0_re) begin
		sdram_phaseinjector0_baddress_storage[2:0] <= basesoc_csrbank6_dfii_pi0_baddress0_r;
	end
	sdram_phaseinjector0_baddress_re <= basesoc_csrbank6_dfii_pi0_baddress0_re;
	if (basesoc_csrbank6_dfii_pi0_wrdata1_re) begin
		sdram_phaseinjector0_wrdata_storage[63:32] <= basesoc_csrbank6_dfii_pi0_wrdata1_r;
	end
	if (basesoc_csrbank6_dfii_pi0_wrdata0_re) begin
		sdram_phaseinjector0_wrdata_storage[31:0] <= basesoc_csrbank6_dfii_pi0_wrdata0_r;
	end
	sdram_phaseinjector0_wrdata_re <= basesoc_csrbank6_dfii_pi0_wrdata0_re;
	if (basesoc_csrbank6_dfii_pi1_command0_re) begin
		sdram_phaseinjector1_command_storage[5:0] <= basesoc_csrbank6_dfii_pi1_command0_r;
	end
	sdram_phaseinjector1_command_re <= basesoc_csrbank6_dfii_pi1_command0_re;
	if (basesoc_csrbank6_dfii_pi1_address0_re) begin
		sdram_phaseinjector1_address_storage[12:0] <= basesoc_csrbank6_dfii_pi1_address0_r;
	end
	sdram_phaseinjector1_address_re <= basesoc_csrbank6_dfii_pi1_address0_re;
	if (basesoc_csrbank6_dfii_pi1_baddress0_re) begin
		sdram_phaseinjector1_baddress_storage[2:0] <= basesoc_csrbank6_dfii_pi1_baddress0_r;
	end
	sdram_phaseinjector1_baddress_re <= basesoc_csrbank6_dfii_pi1_baddress0_re;
	if (basesoc_csrbank6_dfii_pi1_wrdata1_re) begin
		sdram_phaseinjector1_wrdata_storage[63:32] <= basesoc_csrbank6_dfii_pi1_wrdata1_r;
	end
	if (basesoc_csrbank6_dfii_pi1_wrdata0_re) begin
		sdram_phaseinjector1_wrdata_storage[31:0] <= basesoc_csrbank6_dfii_pi1_wrdata0_r;
	end
	sdram_phaseinjector1_wrdata_re <= basesoc_csrbank6_dfii_pi1_wrdata0_re;
	basesoc_interface7_bank_bus_dat_r <= 1'd0;
	if (basesoc_csrbank7_sel) begin
		case (basesoc_interface7_bank_bus_adr[2:0])
			1'd0: begin
				basesoc_interface7_bank_bus_dat_r <= basesoc_csrbank7_load0_w;
			end
			1'd1: begin
				basesoc_interface7_bank_bus_dat_r <= basesoc_csrbank7_reload0_w;
			end
			2'd2: begin
				basesoc_interface7_bank_bus_dat_r <= basesoc_csrbank7_en0_w;
			end
			2'd3: begin
				basesoc_interface7_bank_bus_dat_r <= basesoc_csrbank7_update_value0_w;
			end
			3'd4: begin
				basesoc_interface7_bank_bus_dat_r <= basesoc_csrbank7_value_w;
			end
			3'd5: begin
				basesoc_interface7_bank_bus_dat_r <= timer_eventmanager_status_w;
			end
			3'd6: begin
				basesoc_interface7_bank_bus_dat_r <= timer_eventmanager_pending_w;
			end
			3'd7: begin
				basesoc_interface7_bank_bus_dat_r <= basesoc_csrbank7_ev_enable0_w;
			end
		endcase
	end
	if (basesoc_csrbank7_load0_re) begin
		timer_load_storage[31:0] <= basesoc_csrbank7_load0_r;
	end
	timer_load_re <= basesoc_csrbank7_load0_re;
	if (basesoc_csrbank7_reload0_re) begin
		timer_reload_storage[31:0] <= basesoc_csrbank7_reload0_r;
	end
	timer_reload_re <= basesoc_csrbank7_reload0_re;
	if (basesoc_csrbank7_en0_re) begin
		timer_en_storage <= basesoc_csrbank7_en0_r;
	end
	timer_en_re <= basesoc_csrbank7_en0_re;
	if (basesoc_csrbank7_update_value0_re) begin
		timer_update_value_storage <= basesoc_csrbank7_update_value0_r;
	end
	timer_update_value_re <= basesoc_csrbank7_update_value0_re;
	if (basesoc_csrbank7_ev_enable0_re) begin
		timer_eventmanager_storage <= basesoc_csrbank7_ev_enable0_r;
	end
	timer_eventmanager_re <= basesoc_csrbank7_ev_enable0_re;
	basesoc_interface8_bank_bus_dat_r <= 1'd0;
	if (basesoc_csrbank8_sel) begin
		case (basesoc_interface8_bank_bus_adr[2:0])
			1'd0: begin
				basesoc_interface8_bank_bus_dat_r <= uart_rxtx_w;
			end
			1'd1: begin
				basesoc_interface8_bank_bus_dat_r <= basesoc_csrbank8_txfull_w;
			end
			2'd2: begin
				basesoc_interface8_bank_bus_dat_r <= basesoc_csrbank8_rxempty_w;
			end
			2'd3: begin
				basesoc_interface8_bank_bus_dat_r <= uart_eventmanager_status_w;
			end
			3'd4: begin
				basesoc_interface8_bank_bus_dat_r <= uart_eventmanager_pending_w;
			end
			3'd5: begin
				basesoc_interface8_bank_bus_dat_r <= basesoc_csrbank8_ev_enable0_w;
			end
			3'd6: begin
				basesoc_interface8_bank_bus_dat_r <= basesoc_csrbank8_txempty_w;
			end
			3'd7: begin
				basesoc_interface8_bank_bus_dat_r <= basesoc_csrbank8_rxfull_w;
			end
		endcase
	end
	if (basesoc_csrbank8_ev_enable0_re) begin
		uart_eventmanager_storage[1:0] <= basesoc_csrbank8_ev_enable0_r;
	end
	uart_eventmanager_re <= basesoc_csrbank8_ev_enable0_re;
	if (sys_rst) begin
		soccontroller_reset_storage <= 1'd0;
		soccontroller_reset_re <= 1'd0;
		soccontroller_scratch_storage <= 32'd305419896;
		soccontroller_scratch_re <= 1'd0;
		soccontroller_bus_errors <= 32'd0;
		basesoc_ram_bus_ack <= 1'd0;
		ram_bus_ram_bus_ack <= 1'd0;
		uart_tx_pending <= 1'd0;
		uart_tx_old_trigger <= 1'd0;
		uart_rx_pending <= 1'd0;
		uart_rx_old_trigger <= 1'd0;
		uart_eventmanager_storage <= 2'd0;
		uart_eventmanager_re <= 1'd0;
		timer_load_storage <= 32'd0;
		timer_load_re <= 1'd0;
		timer_reload_storage <= 32'd0;
		timer_reload_re <= 1'd0;
		timer_en_storage <= 1'd0;
		timer_en_re <= 1'd0;
		timer_update_value_storage <= 1'd0;
		timer_update_value_re <= 1'd0;
		timer_value_status <= 32'd0;
		timer_zero_pending <= 1'd0;
		timer_zero_old_trigger <= 1'd0;
		timer_eventmanager_storage <= 1'd0;
		timer_eventmanager_re <= 1'd0;
		timer_value <= 32'd0;
		ddrphy_dly_sel_storage <= 2'd0;
		ddrphy_dly_sel_re <= 1'd0;
		ddrphy_burstdet_seen_status <= 2'd0;
		ddrphy_rdly0 <= 7'd0;
		ddrphy_burstdet_d0 <= 1'd0;
		ddrphy_dm_o_data_d0 <= 8'd0;
		ddrphy_dm_o_data_muxed0 <= 4'd0;
		ddrphy_dq_o_data_d0 <= 8'd0;
		ddrphy_dq_o_data_muxed0 <= 4'd0;
		ddrphy_bitslip0_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d0 <= 4'd0;
		ddrphy_dq_o_data_d1 <= 8'd0;
		ddrphy_dq_o_data_muxed1 <= 4'd0;
		ddrphy_bitslip1_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d1 <= 4'd0;
		ddrphy_dq_o_data_d2 <= 8'd0;
		ddrphy_dq_o_data_muxed2 <= 4'd0;
		ddrphy_bitslip2_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d2 <= 4'd0;
		ddrphy_dq_o_data_d3 <= 8'd0;
		ddrphy_dq_o_data_muxed3 <= 4'd0;
		ddrphy_bitslip3_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d3 <= 4'd0;
		ddrphy_dq_o_data_d4 <= 8'd0;
		ddrphy_dq_o_data_muxed4 <= 4'd0;
		ddrphy_bitslip4_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d4 <= 4'd0;
		ddrphy_dq_o_data_d5 <= 8'd0;
		ddrphy_dq_o_data_muxed5 <= 4'd0;
		ddrphy_bitslip5_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d5 <= 4'd0;
		ddrphy_dq_o_data_d6 <= 8'd0;
		ddrphy_dq_o_data_muxed6 <= 4'd0;
		ddrphy_bitslip6_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d6 <= 4'd0;
		ddrphy_dq_o_data_d7 <= 8'd0;
		ddrphy_dq_o_data_muxed7 <= 4'd0;
		ddrphy_bitslip7_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d7 <= 4'd0;
		ddrphy_rdly1 <= 7'd0;
		ddrphy_burstdet_d1 <= 1'd0;
		ddrphy_dm_o_data_d1 <= 8'd0;
		ddrphy_dm_o_data_muxed1 <= 4'd0;
		ddrphy_dq_o_data_d8 <= 8'd0;
		ddrphy_dq_o_data_muxed8 <= 4'd0;
		ddrphy_bitslip8_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d8 <= 4'd0;
		ddrphy_dq_o_data_d9 <= 8'd0;
		ddrphy_dq_o_data_muxed9 <= 4'd0;
		ddrphy_bitslip9_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d9 <= 4'd0;
		ddrphy_dq_o_data_d10 <= 8'd0;
		ddrphy_dq_o_data_muxed10 <= 4'd0;
		ddrphy_bitslip10_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d10 <= 4'd0;
		ddrphy_dq_o_data_d11 <= 8'd0;
		ddrphy_dq_o_data_muxed11 <= 4'd0;
		ddrphy_bitslip11_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d11 <= 4'd0;
		ddrphy_dq_o_data_d12 <= 8'd0;
		ddrphy_dq_o_data_muxed12 <= 4'd0;
		ddrphy_bitslip12_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d12 <= 4'd0;
		ddrphy_dq_o_data_d13 <= 8'd0;
		ddrphy_dq_o_data_muxed13 <= 4'd0;
		ddrphy_bitslip13_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d13 <= 4'd0;
		ddrphy_dq_o_data_d14 <= 8'd0;
		ddrphy_dq_o_data_muxed14 <= 4'd0;
		ddrphy_bitslip14_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d14 <= 4'd0;
		ddrphy_dq_o_data_d15 <= 8'd0;
		ddrphy_dq_o_data_muxed15 <= 4'd0;
		ddrphy_bitslip15_value <= 2'd0;
		ddrphy_dq_i_bitslip_o_d15 <= 4'd0;
		ddrphy_rddata_en_tappeddelayline0 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline1 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline2 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline3 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline4 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline5 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline6 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline7 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline8 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline9 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline10 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline11 <= 1'd0;
		ddrphy_rddata_en_tappeddelayline12 <= 1'd0;
		ddrphy_wrdata_en_tappeddelayline0 <= 1'd0;
		ddrphy_wrdata_en_tappeddelayline1 <= 1'd0;
		ddrphy_wrdata_en_tappeddelayline2 <= 1'd0;
		ddrphy_wrdata_en_tappeddelayline3 <= 1'd0;
		ddrphy_wrdata_en_tappeddelayline4 <= 1'd0;
		ddrphy_wrdata_en_tappeddelayline5 <= 1'd0;
		ddrphy_wrdata_en_tappeddelayline6 <= 1'd0;
		sdram_storage <= 4'd1;
		sdram_re <= 1'd0;
		sdram_phaseinjector0_command_storage <= 6'd0;
		sdram_phaseinjector0_command_re <= 1'd0;
		sdram_phaseinjector0_address_re <= 1'd0;
		sdram_phaseinjector0_baddress_re <= 1'd0;
		sdram_phaseinjector0_wrdata_re <= 1'd0;
		sdram_phaseinjector0_rddata_status <= 64'd0;
		sdram_phaseinjector1_command_storage <= 6'd0;
		sdram_phaseinjector1_command_re <= 1'd0;
		sdram_phaseinjector1_address_re <= 1'd0;
		sdram_phaseinjector1_baddress_re <= 1'd0;
		sdram_phaseinjector1_wrdata_re <= 1'd0;
		sdram_phaseinjector1_rddata_status <= 64'd0;
		sdram_dfi_p0_address <= 13'd0;
		sdram_dfi_p0_bank <= 3'd0;
		sdram_dfi_p0_cas_n <= 1'd1;
		sdram_dfi_p0_cs_n <= 1'd1;
		sdram_dfi_p0_ras_n <= 1'd1;
		sdram_dfi_p0_we_n <= 1'd1;
		sdram_dfi_p0_wrdata_en <= 1'd0;
		sdram_dfi_p0_rddata_en <= 1'd0;
		sdram_dfi_p1_address <= 13'd0;
		sdram_dfi_p1_bank <= 3'd0;
		sdram_dfi_p1_cas_n <= 1'd1;
		sdram_dfi_p1_cs_n <= 1'd1;
		sdram_dfi_p1_ras_n <= 1'd1;
		sdram_dfi_p1_we_n <= 1'd1;
		sdram_dfi_p1_wrdata_en <= 1'd0;
		sdram_dfi_p1_rddata_en <= 1'd0;
		sdram_cmd_payload_a <= 13'd0;
		sdram_cmd_payload_ba <= 3'd0;
		sdram_cmd_payload_cas <= 1'd0;
		sdram_cmd_payload_ras <= 1'd0;
		sdram_cmd_payload_we <= 1'd0;
		sdram_timer_count1 <= 9'd374;
		sdram_postponer_req_o <= 1'd0;
		sdram_postponer_count <= 1'd0;
		sdram_sequencer_done1 <= 1'd0;
		sdram_sequencer_counter <= 7'd0;
		sdram_sequencer_count <= 1'd0;
		sdram_zqcs_timer_count1 <= 26'd47999999;
		sdram_zqcs_executer_done <= 1'd0;
		sdram_zqcs_executer_counter <= 6'd0;
		sdram_bankmachine0_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine0_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine0_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine0_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine0_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine0_cmd_buffer_source_payload_addr <= 20'd0;
		sdram_bankmachine0_row <= 13'd0;
		sdram_bankmachine0_row_opened <= 1'd0;
		sdram_bankmachine0_twtpcon_ready <= 1'd0;
		sdram_bankmachine0_twtpcon_count <= 3'd0;
		sdram_bankmachine0_trccon_ready <= 1'd0;
		sdram_bankmachine0_trccon_count <= 2'd0;
		sdram_bankmachine0_trascon_ready <= 1'd0;
		sdram_bankmachine0_trascon_count <= 2'd0;
		sdram_bankmachine1_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine1_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine1_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine1_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine1_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine1_cmd_buffer_source_payload_addr <= 20'd0;
		sdram_bankmachine1_row <= 13'd0;
		sdram_bankmachine1_row_opened <= 1'd0;
		sdram_bankmachine1_twtpcon_ready <= 1'd0;
		sdram_bankmachine1_twtpcon_count <= 3'd0;
		sdram_bankmachine1_trccon_ready <= 1'd0;
		sdram_bankmachine1_trccon_count <= 2'd0;
		sdram_bankmachine1_trascon_ready <= 1'd0;
		sdram_bankmachine1_trascon_count <= 2'd0;
		sdram_bankmachine2_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine2_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine2_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine2_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine2_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine2_cmd_buffer_source_payload_addr <= 20'd0;
		sdram_bankmachine2_row <= 13'd0;
		sdram_bankmachine2_row_opened <= 1'd0;
		sdram_bankmachine2_twtpcon_ready <= 1'd0;
		sdram_bankmachine2_twtpcon_count <= 3'd0;
		sdram_bankmachine2_trccon_ready <= 1'd0;
		sdram_bankmachine2_trccon_count <= 2'd0;
		sdram_bankmachine2_trascon_ready <= 1'd0;
		sdram_bankmachine2_trascon_count <= 2'd0;
		sdram_bankmachine3_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine3_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine3_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine3_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine3_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine3_cmd_buffer_source_payload_addr <= 20'd0;
		sdram_bankmachine3_row <= 13'd0;
		sdram_bankmachine3_row_opened <= 1'd0;
		sdram_bankmachine3_twtpcon_ready <= 1'd0;
		sdram_bankmachine3_twtpcon_count <= 3'd0;
		sdram_bankmachine3_trccon_ready <= 1'd0;
		sdram_bankmachine3_trccon_count <= 2'd0;
		sdram_bankmachine3_trascon_ready <= 1'd0;
		sdram_bankmachine3_trascon_count <= 2'd0;
		sdram_bankmachine4_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine4_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine4_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine4_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine4_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine4_cmd_buffer_source_payload_addr <= 20'd0;
		sdram_bankmachine4_row <= 13'd0;
		sdram_bankmachine4_row_opened <= 1'd0;
		sdram_bankmachine4_twtpcon_ready <= 1'd0;
		sdram_bankmachine4_twtpcon_count <= 3'd0;
		sdram_bankmachine4_trccon_ready <= 1'd0;
		sdram_bankmachine4_trccon_count <= 2'd0;
		sdram_bankmachine4_trascon_ready <= 1'd0;
		sdram_bankmachine4_trascon_count <= 2'd0;
		sdram_bankmachine5_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine5_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine5_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine5_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine5_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine5_cmd_buffer_source_payload_addr <= 20'd0;
		sdram_bankmachine5_row <= 13'd0;
		sdram_bankmachine5_row_opened <= 1'd0;
		sdram_bankmachine5_twtpcon_ready <= 1'd0;
		sdram_bankmachine5_twtpcon_count <= 3'd0;
		sdram_bankmachine5_trccon_ready <= 1'd0;
		sdram_bankmachine5_trccon_count <= 2'd0;
		sdram_bankmachine5_trascon_ready <= 1'd0;
		sdram_bankmachine5_trascon_count <= 2'd0;
		sdram_bankmachine6_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine6_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine6_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine6_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine6_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine6_cmd_buffer_source_payload_addr <= 20'd0;
		sdram_bankmachine6_row <= 13'd0;
		sdram_bankmachine6_row_opened <= 1'd0;
		sdram_bankmachine6_twtpcon_ready <= 1'd0;
		sdram_bankmachine6_twtpcon_count <= 3'd0;
		sdram_bankmachine6_trccon_ready <= 1'd0;
		sdram_bankmachine6_trccon_count <= 2'd0;
		sdram_bankmachine6_trascon_ready <= 1'd0;
		sdram_bankmachine6_trascon_count <= 2'd0;
		sdram_bankmachine7_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine7_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine7_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine7_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine7_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine7_cmd_buffer_source_payload_addr <= 20'd0;
		sdram_bankmachine7_row <= 13'd0;
		sdram_bankmachine7_row_opened <= 1'd0;
		sdram_bankmachine7_twtpcon_ready <= 1'd0;
		sdram_bankmachine7_twtpcon_count <= 3'd0;
		sdram_bankmachine7_trccon_ready <= 1'd0;
		sdram_bankmachine7_trccon_count <= 2'd0;
		sdram_bankmachine7_trascon_ready <= 1'd0;
		sdram_bankmachine7_trascon_count <= 2'd0;
		sdram_choose_cmd_grant <= 3'd0;
		sdram_choose_req_grant <= 3'd0;
		sdram_trrdcon_ready <= 1'd0;
		sdram_trrdcon_count <= 1'd0;
		sdram_tfawcon_ready <= 1'd1;
		sdram_tfawcon_window <= 3'd0;
		sdram_tccdcon_ready <= 1'd0;
		sdram_tccdcon_count <= 1'd0;
		sdram_twtrcon_ready <= 1'd0;
		sdram_twtrcon_count <= 3'd0;
		sdram_time0 <= 5'd0;
		sdram_time1 <= 4'd0;
		cmd_consumed <= 1'd0;
		wdata_consumed <= 1'd0;
		r_storage <= 8'd255;
		r_re <= 1'd0;
		g_storage <= 8'd0;
		g_re <= 1'd0;
		b_storage <= 8'd0;
		b_re <= 1'd0;
		div_m_storage <= 32'd0;
		div_m_re <= 1'd0;
		config_storage <= 2'd0;
		config_re <= 1'd0;
		div_m_counter <= 32'd0;
		pdm_r_sigma <= 17'd0;
		pdm_g_sigma <= 17'd0;
		pdm_b_sigma <= 17'd0;
		pwm0_pwm_counter <= 16'd0;
		pwm0_counter_value <= 8'd0;
		oe_storage <= 22'd0;
		oe_re <= 1'd0;
		out_storage <= 22'd0;
		out_re <= 1'd0;
		lxspi_bus_ack <= 1'd0;
		lxspi_bitbang_re <= 1'd0;
		lxspi_bitbang_en_storage <= 1'd0;
		lxspi_bitbang_en_re <= 1'd0;
		lxspi_cs_n <= 1'd1;
		lxspi_clk <= 1'd0;
		lxspi_dq_oe <= 1'd0;
		lxspi_sr <= 32'd0;
		lxspi_i1 <= 1'd0;
		lxspi_dqi <= 4'd0;
		lxspi_counter <= 6'd0;
		usb0_ack <= 1'd0;
		usb0_asyncfifo0_graycounter0_q <= 7'd0;
		usb0_asyncfifo0_graycounter0_q_binary <= 7'd0;
		usb0_asyncfifo1_graycounter3_q <= 7'd0;
		usb0_asyncfifo1_graycounter3_q_binary <= 7'd0;
		subfragments_refresher_state <= 2'd0;
		subfragments_bankmachine0_state <= 3'd0;
		subfragments_bankmachine1_state <= 3'd0;
		subfragments_bankmachine2_state <= 3'd0;
		subfragments_bankmachine3_state <= 3'd0;
		subfragments_bankmachine4_state <= 3'd0;
		subfragments_bankmachine5_state <= 3'd0;
		subfragments_bankmachine6_state <= 3'd0;
		subfragments_bankmachine7_state <= 3'd0;
		subfragments_multiplexer_state <= 4'd0;
		subfragments_new_master_wdata_ready0 <= 1'd0;
		subfragments_new_master_wdata_ready1 <= 1'd0;
		subfragments_new_master_wdata_ready2 <= 1'd0;
		subfragments_new_master_wdata_ready3 <= 1'd0;
		subfragments_new_master_rdata_valid0 <= 1'd0;
		subfragments_new_master_rdata_valid1 <= 1'd0;
		subfragments_new_master_rdata_valid2 <= 1'd0;
		subfragments_new_master_rdata_valid3 <= 1'd0;
		subfragments_new_master_rdata_valid4 <= 1'd0;
		subfragments_new_master_rdata_valid5 <= 1'd0;
		subfragments_new_master_rdata_valid6 <= 1'd0;
		subfragments_new_master_rdata_valid7 <= 1'd0;
		subfragments_new_master_rdata_valid8 <= 1'd0;
		subfragments_new_master_rdata_valid9 <= 1'd0;
		subfragments_new_master_rdata_valid10 <= 1'd0;
		subfragments_new_master_rdata_valid11 <= 1'd0;
		subfragments_new_master_rdata_valid12 <= 1'd0;
		subfragments_new_master_rdata_valid13 <= 1'd0;
		subfragments_state <= 2'd0;
		subfragments_csrstorage0_storage <= 8'd0;
		subfragments_csrstorage0_re <= 1'd0;
		subfragments_csrstorage1_storage <= 8'd0;
		subfragments_csrstorage1_re <= 1'd0;
		subfragments_csrstorage2_storage <= 8'd0;
		subfragments_csrstorage2_re <= 1'd0;
		subfragments_csrstorage3_storage <= 8'd0;
		subfragments_csrstorage3_re <= 1'd0;
		subfragments_csrstorage4_storage <= 8'd0;
		subfragments_csrstorage4_re <= 1'd0;
		subfragments_csrstorage5_storage <= 8'd0;
		subfragments_csrstorage5_re <= 1'd0;
		subfragments_csrstorage6_storage <= 8'd0;
		subfragments_csrstorage6_re <= 1'd0;
		subfragments_csrstorage7_storage <= 8'd0;
		subfragments_csrstorage7_re <= 1'd0;
		subfragments_csrstorage8_storage <= 8'd0;
		subfragments_csrstorage8_re <= 1'd0;
		subfragments_csrstorage9_storage <= 8'd0;
		subfragments_csrstorage9_re <= 1'd0;
		subfragments_csrstorage10_storage <= 8'd0;
		subfragments_csrstorage10_re <= 1'd0;
		subfragments_csrstorage11_storage <= 8'd0;
		subfragments_csrstorage11_re <= 1'd0;
		subfragments_csrstorage12_storage <= 8'd0;
		subfragments_csrstorage12_re <= 1'd0;
		subfragments_wb2csr_state <= 1'd0;
		basesoc_basesoc_we <= 1'd0;
		basesoc_grant <= 1'd0;
		basesoc_slave_sel_r <= 6'd0;
		basesoc_count <= 20'd1000000;
		basesoc_state <= 2'd0;
	end
	multiregimpl1_regs0 <= usr_btn;
	multiregimpl1_regs1 <= multiregimpl1_regs0;
	multiregimpl12_regs0 <= usb0_asyncfifo0_graycounter1_q;
	multiregimpl12_regs1 <= multiregimpl12_regs0;
	multiregimpl13_regs0 <= usb0_asyncfifo1_graycounter2_q;
	multiregimpl13_regs1 <= multiregimpl13_regs0;
	multiregimpl15_regs0 <= usb0_ev_irq;
	multiregimpl15_regs1 <= multiregimpl15_regs0;
end

always @(posedge usb_12_clk) begin
	usb0_valid <= (usb0_asyncfifo0_source_valid & (~usb0_csrbank_bus_we));
	usb0_source_adr <= usb0_bus_adr;
	usb0_usb_core_tx_bitstuff_valid_data <= (((~usb0_usb_core_tx_stall) & usb0_usb_core_tx_shifter_o_get) & usb0_usb_core_tx_i_oe);
	subfragments_clockdomainsrenamer_fsm_state <= subfragments_clockdomainsrenamer_fsm_next_state;
	if (usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value_ce0) begin
		usb0_usb_core_tx_sync_pulse <= usb0_usb_core_tx_sync_pulse_subfragments_txpipeline_next_value0;
	end
	if (usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value_ce1) begin
		usb0_usb_core_tx_state_gray <= usb0_usb_core_tx_state_gray_subfragments_txpipeline_next_value1;
	end
	if (usb0_usb_core_tx_shifter_ce) begin
		usb0_usb_core_tx_shifter_pos <= (usb0_usb_core_tx_shifter_pos >>> 1'd1);
		usb0_usb_core_tx_shifter_shifter <= (usb0_usb_core_tx_shifter_shifter >>> 1'd1);
		if (usb0_usb_core_tx_shifter_empty) begin
			usb0_usb_core_tx_shifter_shifter <= usb0_usb_core_tx_shifter_i_data;
			usb0_usb_core_tx_shifter_pos <= 8'd128;
		end
		usb0_usb_core_tx_shifter_o_get <= usb0_usb_core_tx_shifter_empty;
	end
	if (usb0_usb_core_tx_shifter_reset) begin
		usb0_usb_core_tx_shifter_o_get <= 1'd0;
		usb0_usb_core_tx_shifter_shifter <= 8'd0;
		usb0_usb_core_tx_shifter_pos <= 8'd1;
	end
	if (usb0_usb_core_tx_bitstuff_stuff_bit) begin
		usb0_usb_core_tx_bitstuff_o_data <= 1'd0;
	end else begin
		usb0_usb_core_tx_bitstuff_o_data <= usb0_usb_core_tx_bitstuff_i_data;
	end
	subfragments_clockdomainsrenamer_resetinserter_state <= subfragments_clockdomainsrenamer_resetinserter_next_state;
	if (usb0_usb_core_tx_bitstuff_reset) begin
		usb0_usb_core_tx_bitstuff_o_data <= 1'd0;
		subfragments_clockdomainsrenamer_resetinserter_state <= 3'd0;
	end
	subfragments_clockdomainsrenamer_txpacketsend_state <= subfragments_clockdomainsrenamer_txpacketsend_next_state;
	if (usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value_ce0) begin
		usb0_usb_core_tx_i_oe <= usb0_usb_core_tx_i_oe_subfragments_txpacketsend_next_value0;
	end
	if (usb0_usb_core_txstate_pid_subfragments_txpacketsend_next_value_ce1) begin
		usb0_usb_core_txstate_pid <= usb0_usb_core_txstate_pid_subfragments_txpacketsend_next_value1;
	end
	if (usb0_usb_core_txstate_i_data_strobe) begin
		usb0_usb_core_txstate_crc_cur <= usb0_usb_core_txstate_crc_next;
	end
	if (usb0_usb_core_txstate_reset) begin
		usb0_usb_core_txstate_crc_cur <= 16'd65535;
	end
	if (usb0_usb_core_rx_o_pkt_start) begin
		usb0_usb_core_rx_o_pkt_in_progress <= 1'd1;
	end else begin
		if (usb0_usb_core_rx_o_pkt_end) begin
			usb0_usb_core_rx_o_pkt_in_progress <= 1'd0;
		end
	end
	usb0_usb_core_rx_payloadFifo_graycounter1_q_binary <= usb0_usb_core_rx_payloadFifo_graycounter1_q_next_binary;
	usb0_usb_core_rx_payloadFifo_graycounter1_q <= usb0_usb_core_rx_payloadFifo_graycounter1_q_next;
	usb0_usb_core_rx_flagsFifo_graycounter1_q_binary <= usb0_usb_core_rx_flagsFifo_graycounter1_q_next_binary;
	usb0_usb_core_rx_flagsFifo_graycounter1_q <= usb0_usb_core_rx_flagsFifo_graycounter1_q_next;
	subfragments_clockdomainsrenamer_packetheaderdecode_state <= subfragments_clockdomainsrenamer_packetheaderdecode_next_state;
	if (usb0_usb_core_o_pid_subfragments_packetheaderdecode_next_value_ce0) begin
		usb0_usb_core_o_pid <= usb0_usb_core_o_pid_subfragments_packetheaderdecode_next_value0;
	end
	if (subfragments_clockdomainsrenamer_packetheaderdecode_next_value_ce) begin
		usb0_usb_core_o_addr[6:0] <= subfragments_clockdomainsrenamer_packetheaderdecode_next_value;
	end
	if (usb0_usb_core_endp4_subfragments_packetheaderdecode_next_value_ce1) begin
		usb0_usb_core_endp4 <= usb0_usb_core_endp4_subfragments_packetheaderdecode_next_value1;
	end
	if (usb0_usb_core_o_endp_subfragments_packetheaderdecode_next_value_ce2) begin
		usb0_usb_core_o_endp <= usb0_usb_core_o_endp_subfragments_packetheaderdecode_next_value2;
	end
	if (usb0_usb_core_crc5_subfragments_packetheaderdecode_next_value_ce3) begin
		usb0_usb_core_crc5 <= usb0_usb_core_crc5_subfragments_packetheaderdecode_next_value3;
	end
	subfragments_clockdomainsrenamer_clockdomainsrenamer_state <= subfragments_clockdomainsrenamer_clockdomainsrenamer_next_state;
	if (usb0_usb_core_tok_subfragments_f_next_value_ce0) begin
		usb0_usb_core_tok <= usb0_usb_core_tok_subfragments_f_next_value0;
	end
	if (usb0_usb_core_endp_subfragments_f_next_value_ce1) begin
		usb0_usb_core_endp <= usb0_usb_core_endp_subfragments_f_next_value1;
	end
	if (usb0_usb_core_response_pid_subfragments_t_next_value_ce) begin
		usb0_usb_core_response_pid <= usb0_usb_core_response_pid_subfragments_t_next_value;
	end
	if (usb0_usb_core_transfer_reset) begin
		usb0_usb_core_tok <= 4'd0;
		usb0_usb_core_endp <= 4'd0;
		usb0_usb_core_response_pid <= 4'd0;
		subfragments_clockdomainsrenamer_clockdomainsrenamer_state <= 4'd1;
	end
	if (usb0_setuphandler_packet_clear) begin
		usb0_setuphandler_packet_pending <= 1'd0;
	end
	if (usb0_setuphandler_packet_trigger) begin
		usb0_setuphandler_packet_pending <= 1'd1;
	end
	if (usb0_setuphandler_reset_clear) begin
		usb0_setuphandler_reset_pending <= 1'd0;
	end
	usb0_setuphandler_reset_old_trigger <= usb0_setuphandler_reset_trigger;
	if (((~usb0_setuphandler_reset_trigger) & usb0_setuphandler_reset_old_trigger)) begin
		usb0_setuphandler_reset_pending <= 1'd1;
	end
	if (usb0_setuphandler_data_recv_put) begin
		if ((usb0_setuphandler_setuphandlerinner_data_byte == 1'd0)) begin
			usb0_setuphandler_epno <= usb0_usb_core_endp;
			usb0_setuphandler_setuphandlerinner_is_in <= usb0_setuphandler_data_recv_payload[7];
		end else begin
			if ((usb0_setuphandler_setuphandlerinner_data_byte == 3'd6)) begin
				if (usb0_setuphandler_data_recv_payload) begin
					usb0_setuphandler_setuphandlerinner_have_data_stage <= 1'd1;
				end
			end else begin
				if ((usb0_setuphandler_setuphandlerinner_data_byte == 3'd7)) begin
					if (usb0_setuphandler_data_recv_payload) begin
						usb0_setuphandler_setuphandlerinner_have_data_stage <= 1'd1;
					end
				end
			end
		end
		usb0_setuphandler_setuphandlerinner_data_byte <= (usb0_setuphandler_setuphandlerinner_data_byte + 1'd1);
	end
	if (usb0_setuphandler_setuphandlerinner_syncfifo_re) begin
		usb0_setuphandler_setuphandlerinner_readable <= 1'd1;
	end else begin
		if (usb0_setuphandler_setuphandlerinner_re) begin
			usb0_setuphandler_setuphandlerinner_readable <= 1'd0;
		end
	end
	if (((usb0_setuphandler_setuphandlerinner_syncfifo_we & usb0_setuphandler_setuphandlerinner_syncfifo_writable) & (~usb0_setuphandler_setuphandlerinner_replace))) begin
		if ((usb0_setuphandler_setuphandlerinner_produce == 4'd9)) begin
			usb0_setuphandler_setuphandlerinner_produce <= 1'd0;
		end else begin
			usb0_setuphandler_setuphandlerinner_produce <= (usb0_setuphandler_setuphandlerinner_produce + 1'd1);
		end
	end
	if (usb0_setuphandler_setuphandlerinner_do_read) begin
		if ((usb0_setuphandler_setuphandlerinner_consume == 4'd9)) begin
			usb0_setuphandler_setuphandlerinner_consume <= 1'd0;
		end else begin
			usb0_setuphandler_setuphandlerinner_consume <= (usb0_setuphandler_setuphandlerinner_consume + 1'd1);
		end
	end
	if (((usb0_setuphandler_setuphandlerinner_syncfifo_we & usb0_setuphandler_setuphandlerinner_syncfifo_writable) & (~usb0_setuphandler_setuphandlerinner_replace))) begin
		if ((~usb0_setuphandler_setuphandlerinner_do_read)) begin
			usb0_setuphandler_setuphandlerinner_level0 <= (usb0_setuphandler_setuphandlerinner_level0 + 1'd1);
		end
	end else begin
		if (usb0_setuphandler_setuphandlerinner_do_read) begin
			usb0_setuphandler_setuphandlerinner_level0 <= (usb0_setuphandler_setuphandlerinner_level0 - 1'd1);
		end
	end
	if (usb0_setuphandler_inner_reset) begin
		usb0_setuphandler_epno <= 1'd0;
		usb0_setuphandler_setuphandlerinner_readable <= 1'd0;
		usb0_setuphandler_setuphandlerinner_level0 <= 4'd0;
		usb0_setuphandler_setuphandlerinner_produce <= 4'd0;
		usb0_setuphandler_setuphandlerinner_consume <= 4'd0;
		usb0_setuphandler_setuphandlerinner_data_byte <= 4'd0;
		usb0_setuphandler_setuphandlerinner_have_data_stage <= 1'd0;
		usb0_setuphandler_setuphandlerinner_is_in <= 1'd0;
	end
	if (usb0_inhandler_csrfield_reset) begin
		usb0_inhandler_stall_status <= 1'd0;
	end else begin
		if ((usb0_usb_core_setup | (usb0_inhandler_ctrl_re & (~usb0_inhandler_csrfield_stall)))) begin
			usb0_inhandler_stall_status <= (usb0_inhandler_stall_status & (~usb0_inhandler_ep_stall_mask));
		end else begin
			if (usb0_inhandler_ctrl_re) begin
				usb0_inhandler_stall_status <= (usb0_inhandler_stall_status | usb0_inhandler_ep_stall_mask);
			end
		end
	end
	if (usb0_inhandler_csrfield_reset) begin
		usb0_inhandler_queued <= 1'd0;
		usb0_inhandler_was_queued <= 1'd0;
		usb0_inhandler_transmitted <= 1'd0;
		usb0_inhandler_dtbs <= 1'd1;
	end else begin
		if (usb0_inhandler_dtb_reset) begin
			usb0_inhandler_dtbs <= (usb0_inhandler_dtbs | 1'd1);
		end else begin
			if ((usb0_inhandler_ctrl_re & (~usb0_inhandler_csrfield_stall))) begin
				usb0_inhandler_queued <= 1'd1;
			end else begin
				if ((usb0_usb_core_poll & usb0_inhandler_response)) begin
					usb0_inhandler_transmitted <= 1'd1;
				end else begin
					if ((((usb0_usb_core_commit & usb0_inhandler_transmitted) & usb0_inhandler_response) & (~usb0_inhandler_stalled))) begin
						usb0_inhandler_queued <= 1'd0;
						usb0_inhandler_transmitted <= 1'd0;
						usb0_inhandler_dtbs <= (usb0_inhandler_dtbs ^ (1'd1 <<< usb0_inhandler_csrfield_epno));
					end else begin
						usb0_inhandler_was_queued <= usb0_inhandler_queued;
					end
				end
			end
		end
	end
	if (usb0_inhandler_syncfifobuffered_syncfifo_re) begin
		usb0_inhandler_syncfifobuffered_readable <= 1'd1;
	end else begin
		if (usb0_inhandler_syncfifobuffered_re) begin
			usb0_inhandler_syncfifobuffered_readable <= 1'd0;
		end
	end
	if (((usb0_inhandler_syncfifobuffered_syncfifo_we & usb0_inhandler_syncfifobuffered_syncfifo_writable) & (~usb0_inhandler_syncfifobuffered_replace))) begin
		usb0_inhandler_syncfifobuffered_produce <= (usb0_inhandler_syncfifobuffered_produce + 1'd1);
	end
	if (usb0_inhandler_syncfifobuffered_do_read) begin
		usb0_inhandler_syncfifobuffered_consume <= (usb0_inhandler_syncfifobuffered_consume + 1'd1);
	end
	if (((usb0_inhandler_syncfifobuffered_syncfifo_we & usb0_inhandler_syncfifobuffered_syncfifo_writable) & (~usb0_inhandler_syncfifobuffered_replace))) begin
		if ((~usb0_inhandler_syncfifobuffered_do_read)) begin
			usb0_inhandler_syncfifobuffered_level0 <= (usb0_inhandler_syncfifobuffered_level0 + 1'd1);
		end
	end else begin
		if (usb0_inhandler_syncfifobuffered_do_read) begin
			usb0_inhandler_syncfifobuffered_level0 <= (usb0_inhandler_syncfifobuffered_level0 - 1'd1);
		end
	end
	if (usb0_inhandler_data_buf_reset) begin
		usb0_inhandler_syncfifobuffered_readable <= 1'd0;
		usb0_inhandler_syncfifobuffered_level0 <= 7'd0;
		usb0_inhandler_syncfifobuffered_produce <= 6'd0;
		usb0_inhandler_syncfifobuffered_consume <= 6'd0;
	end
	if (usb0_inhandler_packet_clear) begin
		usb0_inhandler_packet_pending <= 1'd0;
	end
	if (usb0_inhandler_packet_trigger) begin
		usb0_inhandler_packet_pending <= 1'd1;
	end
	if ((usb0_outhandler_csrfield_reset | usb0_outhandler_usb_reset)) begin
		usb0_outhandler_stall_status <= 1'd0;
	end else begin
		if ((usb0_usb_core_setup | (usb0_outhandler_ctrl_re & (~usb0_outhandler_csrfield_stall)))) begin
			usb0_outhandler_stall_status <= (usb0_outhandler_stall_status & (~usb0_outhandler_ep_mask));
		end else begin
			if (usb0_outhandler_ctrl_re) begin
				usb0_outhandler_stall_status <= (usb0_outhandler_stall_status | usb0_outhandler_ep_mask);
			end
		end
	end
	if (usb0_usb_core_poll) begin
		usb0_outhandler_responding <= usb0_outhandler_response;
	end
	if (usb0_outhandler_csrfield_reset) begin
		usb0_outhandler_enable_status <= 1'd0;
	end else begin
		if ((usb0_usb_core_commit & usb0_outhandler_responding)) begin
			usb0_outhandler_epno <= usb0_usb_core_endp;
			usb0_outhandler_enable_status <= (usb0_outhandler_enable_status & (~usb0_outhandler_ep_mask));
			usb0_outhandler_responding <= 1'd0;
		end else begin
			if (usb0_outhandler_ctrl_re) begin
				if (usb0_outhandler_csrfield_enable) begin
					usb0_outhandler_enable_status <= (usb0_outhandler_enable_status | usb0_outhandler_ep_mask);
				end else begin
					usb0_outhandler_enable_status <= (usb0_outhandler_enable_status & (~usb0_outhandler_ep_mask));
				end
			end
		end
	end
	if (usb0_outhandler_syncfifobuffered_syncfifo_re) begin
		usb0_outhandler_syncfifobuffered_readable <= 1'd1;
	end else begin
		if (usb0_outhandler_syncfifobuffered_re) begin
			usb0_outhandler_syncfifobuffered_readable <= 1'd0;
		end
	end
	if (((usb0_outhandler_syncfifobuffered_syncfifo_we & usb0_outhandler_syncfifobuffered_syncfifo_writable) & (~usb0_outhandler_syncfifobuffered_replace))) begin
		if ((usb0_outhandler_syncfifobuffered_produce == 7'd65)) begin
			usb0_outhandler_syncfifobuffered_produce <= 1'd0;
		end else begin
			usb0_outhandler_syncfifobuffered_produce <= (usb0_outhandler_syncfifobuffered_produce + 1'd1);
		end
	end
	if (usb0_outhandler_syncfifobuffered_do_read) begin
		if ((usb0_outhandler_syncfifobuffered_consume == 7'd65)) begin
			usb0_outhandler_syncfifobuffered_consume <= 1'd0;
		end else begin
			usb0_outhandler_syncfifobuffered_consume <= (usb0_outhandler_syncfifobuffered_consume + 1'd1);
		end
	end
	if (((usb0_outhandler_syncfifobuffered_syncfifo_we & usb0_outhandler_syncfifobuffered_syncfifo_writable) & (~usb0_outhandler_syncfifobuffered_replace))) begin
		if ((~usb0_outhandler_syncfifobuffered_do_read)) begin
			usb0_outhandler_syncfifobuffered_level0 <= (usb0_outhandler_syncfifobuffered_level0 + 1'd1);
		end
	end else begin
		if (usb0_outhandler_syncfifobuffered_do_read) begin
			usb0_outhandler_syncfifobuffered_level0 <= (usb0_outhandler_syncfifobuffered_level0 - 1'd1);
		end
	end
	if (usb0_outhandler_data_buf_reset) begin
		usb0_outhandler_syncfifobuffered_readable <= 1'd0;
		usb0_outhandler_syncfifobuffered_level0 <= 7'd0;
		usb0_outhandler_syncfifobuffered_produce <= 7'd0;
		usb0_outhandler_syncfifobuffered_consume <= 7'd0;
	end
	if (usb0_outhandler_packet_clear) begin
		usb0_outhandler_packet_pending <= 1'd0;
	end
	if (usb0_outhandler_packet_trigger) begin
		usb0_outhandler_packet_pending <= 1'd1;
	end
	subfragments_clockdomainsrenamer_state <= subfragments_clockdomainsrenamer_next_state;
	if (usb0_usb_core_addr_subfragments_next_value_ce) begin
		usb0_usb_core_addr <= usb0_usb_core_addr_subfragments_next_value;
	end
	if (usb0_resetinserter_reset) begin
		usb0_usb_core_addr <= 7'd0;
		subfragments_clockdomainsrenamer_state <= 3'd0;
	end
	if (usb0_usb_core_usb_reset) begin
		usb0_in_next <= 1'd0;
		usb0_out_next <= 1'd0;
	end else begin
		if ((usb0_inhandler_packet_pending & (~usb0_outhandler_packet_pending))) begin
			usb0_in_next <= 1'd1;
			usb0_out_next <= 1'd0;
		end else begin
			if (((~usb0_inhandler_packet_pending) & usb0_outhandler_packet_pending)) begin
				usb0_in_next <= 1'd0;
				usb0_out_next <= 1'd1;
			end else begin
				if (((~usb0_inhandler_packet_pending) & (~usb0_outhandler_packet_pending))) begin
					usb0_in_next <= 1'd0;
					usb0_out_next <= 1'd0;
				end
			end
		end
	end
	usb0_csrbank_bus_dat_r <= 1'd0;
	if (usb0_csrbank_sel) begin
		case (usb0_csrbank_bus_adr[4:0])
			1'd0: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_pullup_out0_w;
			end
			1'd1: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_address0_w;
			end
			2'd2: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_next_ev_w;
			end
			2'd3: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_setup_data_w;
			end
			3'd4: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_setup_ctrl0_w;
			end
			3'd5: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_setup_status_w;
			end
			3'd6: begin
				usb0_csrbank_bus_dat_r <= usb0_setuphandler_eventmanager_status_w;
			end
			3'd7: begin
				usb0_csrbank_bus_dat_r <= usb0_setuphandler_eventmanager_pending_w;
			end
			4'd8: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_setup_ev_enable0_w;
			end
			4'd9: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_in_data0_w;
			end
			4'd10: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_in_ctrl0_w;
			end
			4'd11: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_in_status_w;
			end
			4'd12: begin
				usb0_csrbank_bus_dat_r <= usb0_inhandler_eventmanager_status_w;
			end
			4'd13: begin
				usb0_csrbank_bus_dat_r <= usb0_inhandler_eventmanager_pending_w;
			end
			4'd14: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_in_ev_enable0_w;
			end
			4'd15: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_out_data_w;
			end
			5'd16: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_out_ctrl0_w;
			end
			5'd17: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_out_status_w;
			end
			5'd18: begin
				usb0_csrbank_bus_dat_r <= usb0_outhandler_eventmanager_status_w;
			end
			5'd19: begin
				usb0_csrbank_bus_dat_r <= usb0_outhandler_eventmanager_pending_w;
			end
			5'd20: begin
				usb0_csrbank_bus_dat_r <= usb0_csrbank_out_ev_enable0_w;
			end
		endcase
	end
	if (usb0_csrbank_pullup_out0_re) begin
		usb0_pullup_storage <= usb0_csrbank_pullup_out0_r;
	end
	usb0_pullup_re <= usb0_csrbank_pullup_out0_re;
	if (usb0_csrbank_address0_re) begin
		usb0_csrstorage_storage[6:0] <= usb0_csrbank_address0_r;
	end
	usb0_csrstorage_re <= usb0_csrbank_address0_re;
	if (usb0_address_reset) begin
		usb0_csrstorage_storage <= 7'd0;
		usb0_csrstorage_re <= 1'd0;
	end
	if (usb0_csrbank_setup_ctrl0_re) begin
		usb0_setuphandler_ctrl_storage[5:0] <= usb0_csrbank_setup_ctrl0_r;
	end
	usb0_setuphandler_ctrl_re <= usb0_csrbank_setup_ctrl0_re;
	if (usb0_csrbank_setup_ev_enable0_re) begin
		usb0_setuphandler_eventmanager_storage[1:0] <= usb0_csrbank_setup_ev_enable0_r;
	end
	usb0_setuphandler_eventmanager_re <= usb0_csrbank_setup_ev_enable0_re;
	if (usb0_csrbank_in_data0_re) begin
		usb0_inhandler_data_storage[7:0] <= usb0_csrbank_in_data0_r;
	end
	usb0_inhandler_data_re <= usb0_csrbank_in_data0_re;
	if (usb0_csrbank_in_ctrl0_re) begin
		usb0_inhandler_ctrl_storage[6:0] <= usb0_csrbank_in_ctrl0_r;
	end
	usb0_inhandler_ctrl_re <= usb0_csrbank_in_ctrl0_re;
	if (usb0_csrbank_in_ev_enable0_re) begin
		usb0_inhandler_eventmanager_storage <= usb0_csrbank_in_ev_enable0_r;
	end
	usb0_inhandler_eventmanager_re <= usb0_csrbank_in_ev_enable0_re;
	if (usb0_csrbank_out_ctrl0_re) begin
		usb0_outhandler_ctrl_storage[6:0] <= usb0_csrbank_out_ctrl0_r;
	end
	usb0_outhandler_ctrl_re <= usb0_csrbank_out_ctrl0_re;
	if (usb0_csrbank_out_ev_enable0_re) begin
		usb0_outhandler_eventmanager_storage <= usb0_csrbank_out_ev_enable0_r;
	end
	usb0_outhandler_eventmanager_re <= usb0_csrbank_out_ev_enable0_re;
	usb0_asyncfifo0_graycounter1_q_binary <= usb0_asyncfifo0_graycounter1_q_next_binary;
	usb0_asyncfifo0_graycounter1_q <= usb0_asyncfifo0_graycounter1_q_next;
	usb0_asyncfifo1_graycounter2_q_binary <= usb0_asyncfifo1_graycounter2_q_next_binary;
	usb0_asyncfifo1_graycounter2_q <= usb0_asyncfifo1_graycounter2_q_next;
	if (usb_12_rst) begin
		usb0_usb_core_tx_i_oe <= 1'd0;
		usb0_usb_core_tx_shifter_o_get <= 1'd0;
		usb0_usb_core_tx_shifter_shifter <= 8'd0;
		usb0_usb_core_tx_shifter_pos <= 8'd1;
		usb0_usb_core_tx_bitstuff_o_data <= 1'd0;
		usb0_usb_core_tx_sync_pulse <= 8'd0;
		usb0_usb_core_tx_bitstuff_valid_data <= 1'd0;
		usb0_usb_core_tx_state_gray <= 2'd0;
		usb0_usb_core_txstate_pid <= 4'd0;
		usb0_usb_core_txstate_crc_cur <= 16'd65535;
		usb0_usb_core_rx_o_pkt_in_progress <= 1'd0;
		usb0_usb_core_rx_payloadFifo_graycounter1_q <= 2'd0;
		usb0_usb_core_rx_payloadFifo_graycounter1_q_binary <= 2'd0;
		usb0_usb_core_rx_flagsFifo_graycounter1_q <= 2'd0;
		usb0_usb_core_rx_flagsFifo_graycounter1_q_binary <= 2'd0;
		usb0_usb_core_o_pid <= 4'd0;
		usb0_usb_core_o_addr <= 7'd0;
		usb0_usb_core_endp4 <= 1'd0;
		usb0_usb_core_o_endp <= 4'd0;
		usb0_usb_core_crc5 <= 5'd0;
		usb0_usb_core_addr <= 7'd0;
		usb0_usb_core_tok <= 4'd0;
		usb0_usb_core_endp <= 4'd0;
		usb0_usb_core_response_pid <= 4'd0;
		usb0_pullup_storage <= 1'd0;
		usb0_pullup_re <= 1'd0;
		usb0_csrstorage_storage <= 7'd0;
		usb0_csrstorage_re <= 1'd0;
		usb0_setuphandler_epno <= 1'd0;
		usb0_setuphandler_ctrl_storage <= 6'd0;
		usb0_setuphandler_ctrl_re <= 1'd0;
		usb0_setuphandler_packet_pending <= 1'd0;
		usb0_setuphandler_reset_pending <= 1'd0;
		usb0_setuphandler_reset_old_trigger <= 1'd0;
		usb0_setuphandler_eventmanager_storage <= 2'd0;
		usb0_setuphandler_eventmanager_re <= 1'd0;
		usb0_setuphandler_setuphandlerinner_readable <= 1'd0;
		usb0_setuphandler_setuphandlerinner_level0 <= 4'd0;
		usb0_setuphandler_setuphandlerinner_produce <= 4'd0;
		usb0_setuphandler_setuphandlerinner_consume <= 4'd0;
		usb0_setuphandler_setuphandlerinner_data_byte <= 4'd0;
		usb0_setuphandler_setuphandlerinner_have_data_stage <= 1'd0;
		usb0_setuphandler_setuphandlerinner_is_in <= 1'd0;
		usb0_inhandler_dtbs <= 16'd1;
		usb0_inhandler_stall_status <= 16'd0;
		usb0_inhandler_syncfifobuffered_readable <= 1'd0;
		usb0_inhandler_syncfifobuffered_level0 <= 7'd0;
		usb0_inhandler_syncfifobuffered_produce <= 6'd0;
		usb0_inhandler_syncfifobuffered_consume <= 6'd0;
		usb0_inhandler_data_storage <= 8'd0;
		usb0_inhandler_data_re <= 1'd0;
		usb0_inhandler_ctrl_storage <= 7'd0;
		usb0_inhandler_ctrl_re <= 1'd0;
		usb0_inhandler_packet_pending <= 1'd0;
		usb0_inhandler_eventmanager_storage <= 1'd0;
		usb0_inhandler_eventmanager_re <= 1'd0;
		usb0_inhandler_queued <= 1'd0;
		usb0_inhandler_was_queued <= 1'd0;
		usb0_inhandler_transmitted <= 1'd0;
		usb0_outhandler_syncfifobuffered_readable <= 1'd0;
		usb0_outhandler_syncfifobuffered_level0 <= 7'd0;
		usb0_outhandler_syncfifobuffered_produce <= 7'd0;
		usb0_outhandler_syncfifobuffered_consume <= 7'd0;
		usb0_outhandler_ctrl_storage <= 7'd0;
		usb0_outhandler_ctrl_re <= 1'd0;
		usb0_outhandler_packet_pending <= 1'd0;
		usb0_outhandler_eventmanager_storage <= 1'd0;
		usb0_outhandler_eventmanager_re <= 1'd0;
		usb0_outhandler_stall_status <= 16'd0;
		usb0_outhandler_enable_status <= 16'd0;
		usb0_outhandler_epno <= 4'd0;
		usb0_outhandler_responding <= 1'd0;
		usb0_in_next <= 1'd0;
		usb0_out_next <= 1'd0;
		usb0_asyncfifo0_graycounter1_q <= 7'd0;
		usb0_asyncfifo0_graycounter1_q_binary <= 7'd0;
		usb0_asyncfifo1_graycounter2_q <= 7'd0;
		usb0_asyncfifo1_graycounter2_q_binary <= 7'd0;
		usb0_valid <= 1'd0;
		usb0_source_adr <= 32'd0;
		subfragments_clockdomainsrenamer_fsm_state <= 2'd0;
		subfragments_clockdomainsrenamer_resetinserter_state <= 3'd0;
		subfragments_clockdomainsrenamer_txpacketsend_state <= 4'd0;
		subfragments_clockdomainsrenamer_packetheaderdecode_state <= 3'd0;
		subfragments_clockdomainsrenamer_clockdomainsrenamer_state <= 4'd1;
		subfragments_clockdomainsrenamer_state <= 3'd0;
	end
	multiregimpl6_regs <= usb0_usb_core_tx_o_oe;
	multiregimpl7_regs0 <= usb0_usb_core_rx_payloadFifo_graycounter0_q;
	multiregimpl7_regs1 <= multiregimpl7_regs0;
	multiregimpl9_regs0 <= usb0_usb_core_rx_flagsFifo_graycounter0_q;
	multiregimpl9_regs1 <= multiregimpl9_regs0;
	multiregimpl11_regs0 <= usb0_asyncfifo0_graycounter0_q;
	multiregimpl11_regs1 <= multiregimpl11_regs0;
	multiregimpl14_regs0 <= usb0_asyncfifo1_graycounter3_q;
	multiregimpl14_regs1 <= multiregimpl14_regs0;
end

always @(posedge usb_48_clk) begin
	usb0_usb_core_tx_nrzi_o_oe <= usb0_usb_core_tx_nrzi_oe0;
	usb0_usb_core_tx_nrzi_o_usbp <= usb0_usb_core_tx_nrzi_usbp;
	usb0_usb_core_tx_nrzi_o_usbn <= usb0_usb_core_tx_nrzi_usbn;
	subfragments_clockdomainsrenamer_txnrziencoder_state <= subfragments_clockdomainsrenamer_txnrziencoder_next_state;
	if (usb0_usb_core_rx_line_state_valid) begin
		if (usb0_usb_core_rx_line_state_se01) begin
			if ((~usb0_usb_core_rx_reset_counter[6])) begin
				usb0_usb_core_rx_reset_counter <= (usb0_usb_core_rx_reset_counter + 1'd1);
			end
		end else begin
			usb0_usb_core_rx_reset_counter <= 1'd0;
		end
	end
	usb0_usb_core_rx_last_reset <= usb0_usb_core_rx_reset1;
	usb0_usb_core_rx_line_state_valid <= (usb0_usb_core_rx_line_state_phase == 1'd1);
	if (usb0_usb_core_rx_line_state_dt) begin
		usb0_usb_core_rx_line_state_phase <= 1'd0;
		usb0_usb_core_rx_line_state_valid <= 1'd0;
	end else begin
		usb0_usb_core_rx_line_state_phase <= (usb0_usb_core_rx_line_state_phase + 1'd1);
	end
	usb0_usb_core_rx_line_state_dj1 <= usb0_usb_core_rx_line_state_dj0;
	usb0_usb_core_rx_line_state_dk1 <= usb0_usb_core_rx_line_state_dk0;
	usb0_usb_core_rx_line_state_se01 <= usb0_usb_core_rx_line_state_se00;
	usb0_usb_core_rx_line_state_se11 <= usb0_usb_core_rx_line_state_se10;
	subfragments_clockdomainsrenamer_rxpipeline_state <= subfragments_clockdomainsrenamer_rxpipeline_next_state;
	if (usb0_usb_core_rx_nrzi_i_valid) begin
		usb0_usb_core_rx_nrzi_last_data <= usb0_usb_core_rx_nrzi_i_dk;
		usb0_usb_core_rx_nrzi_o_data <= (~(usb0_usb_core_rx_nrzi_i_dk ^ usb0_usb_core_rx_nrzi_last_data));
		usb0_usb_core_rx_nrzi_o_se0 <= ((~usb0_usb_core_rx_nrzi_i_dj) & (~usb0_usb_core_rx_nrzi_i_dk));
	end
	usb0_usb_core_rx_nrzi_o_valid <= usb0_usb_core_rx_nrzi_i_valid;
	subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_state <= subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_next_state;
	if (usb0_usb_core_rx_detect_reset) begin
		subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_state <= 3'd0;
	end
	usb0_usb_core_rx_bitstuff_o_data <= usb0_usb_core_rx_bitstuff_i_data;
	usb0_usb_core_rx_bitstuff_o_stall <= (usb0_usb_core_rx_bitstuff_drop_bit | (~usb0_usb_core_rx_bitstuff_i_valid));
	usb0_usb_core_rx_bitstuff_o_error <= ((usb0_usb_core_rx_bitstuff_drop_bit & usb0_usb_core_rx_bitstuff_i_data) & usb0_usb_core_rx_bitstuff_i_valid);
	subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_state <= subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_next_state;
	if (usb0_usb_core_rx_bitstuff_reset) begin
		usb0_usb_core_rx_bitstuff_o_data <= 1'd0;
		usb0_usb_core_rx_bitstuff_o_error <= 1'd0;
		usb0_usb_core_rx_bitstuff_o_stall <= 1'd1;
		subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_state <= 3'd0;
	end
	usb0_usb_core_rx_shifter_o_put <= ((usb0_usb_core_rx_shifter_shift_reg[7] & (~usb0_usb_core_rx_shifter_shift_reg[8])) & usb0_usb_core_rx_shifter_i_valid);
	if (usb0_usb_core_rx_shifter_i_valid) begin
		if (usb0_usb_core_rx_shifter_shift_reg[8]) begin
			usb0_usb_core_rx_shifter_shift_reg <= {slice_proxy[7:0], usb0_usb_core_rx_shifter_i_data};
		end else begin
			usb0_usb_core_rx_shifter_shift_reg <= {usb0_usb_core_rx_shifter_shift_reg[7:0], usb0_usb_core_rx_shifter_i_data};
		end
	end
	if (usb0_usb_core_rx_shifter_reset) begin
		usb0_usb_core_rx_shifter_o_put <= 1'd0;
		usb0_usb_core_rx_shifter_shift_reg <= 9'd1;
	end
	usb0_usb_core_rx_payloadFifo_graycounter0_q_binary <= usb0_usb_core_rx_payloadFifo_graycounter0_q_next_binary;
	usb0_usb_core_rx_payloadFifo_graycounter0_q <= usb0_usb_core_rx_payloadFifo_graycounter0_q_next;
	usb0_usb_core_rx_flagsFifo_graycounter0_q_binary <= usb0_usb_core_rx_flagsFifo_graycounter0_q_next_binary;
	usb0_usb_core_rx_flagsFifo_graycounter0_q <= usb0_usb_core_rx_flagsFifo_graycounter0_q_next;
	if (usb_48_rst) begin
		usb0_usb_core_tx_nrzi_o_usbp <= 1'd0;
		usb0_usb_core_tx_nrzi_o_usbn <= 1'd0;
		usb0_usb_core_tx_nrzi_o_oe <= 1'd0;
		usb0_usb_core_rx_line_state_phase <= 2'd0;
		usb0_usb_core_rx_line_state_valid <= 1'd0;
		usb0_usb_core_rx_line_state_dj1 <= 1'd0;
		usb0_usb_core_rx_line_state_dk1 <= 1'd0;
		usb0_usb_core_rx_line_state_se01 <= 1'd0;
		usb0_usb_core_rx_line_state_se11 <= 1'd0;
		usb0_usb_core_rx_reset_counter <= 7'd0;
		usb0_usb_core_rx_nrzi_o_valid <= 1'd0;
		usb0_usb_core_rx_nrzi_o_data <= 1'd0;
		usb0_usb_core_rx_nrzi_o_se0 <= 1'd0;
		usb0_usb_core_rx_nrzi_last_data <= 1'd0;
		usb0_usb_core_rx_bitstuff_o_data <= 1'd0;
		usb0_usb_core_rx_bitstuff_o_error <= 1'd0;
		usb0_usb_core_rx_bitstuff_o_stall <= 1'd1;
		usb0_usb_core_rx_last_reset <= 1'd0;
		usb0_usb_core_rx_shifter_o_put <= 1'd0;
		usb0_usb_core_rx_shifter_shift_reg <= 9'd1;
		usb0_usb_core_rx_payloadFifo_graycounter0_q <= 2'd0;
		usb0_usb_core_rx_payloadFifo_graycounter0_q_binary <= 2'd0;
		usb0_usb_core_rx_flagsFifo_graycounter0_q <= 2'd0;
		usb0_usb_core_rx_flagsFifo_graycounter0_q_binary <= 2'd0;
		subfragments_clockdomainsrenamer_txnrziencoder_state <= 3'd0;
		subfragments_clockdomainsrenamer_rxpipeline_state <= 3'd0;
		subfragments_clockdomainsrenamer_rxpipeline_rxpacketdetect_state <= 3'd0;
		subfragments_clockdomainsrenamer_rxpipeline_rxbitstuffremover_state <= 3'd0;
	end
	multiregimpl2_regs0 <= usb_iobuf_usb_p_t_i0;
	multiregimpl2_regs1 <= multiregimpl2_regs0;
	multiregimpl3_regs0 <= usb_iobuf_usb_n_t_i0;
	multiregimpl3_regs1 <= multiregimpl3_regs0;
	multiregimpl4_regs0 <= usb0_usb_core_tx_fit_dat;
	multiregimpl4_regs1 <= multiregimpl4_regs0;
	multiregimpl4_regs2 <= multiregimpl4_regs1;
	multiregimpl5_regs0 <= usb0_usb_core_tx_fit_oe;
	multiregimpl5_regs1 <= multiregimpl5_regs0;
	multiregimpl5_regs2 <= multiregimpl5_regs1;
	multiregimpl8_regs0 <= usb0_usb_core_rx_payloadFifo_graycounter1_q;
	multiregimpl8_regs1 <= multiregimpl8_regs0;
	multiregimpl10_regs0 <= usb0_usb_core_rx_flagsFifo_graycounter1_q;
	multiregimpl10_regs1 <= multiregimpl10_regs0;
end

reg [31:0] mem[0:8191];
reg [31:0] memdat;
always @(posedge sys_clk) begin
	memdat <= mem[basesoc_adr];
end

assign basesoc_dat_r = memdat;

initial begin
	$readmemh("mem.init", mem);
end

reg [31:0] mem_1[0:2047];
reg [10:0] memadr;
always @(posedge sys_clk) begin
	if (ram_we[0])
		mem_1[ram_adr][7:0] <= ram_dat_w[7:0];
	if (ram_we[1])
		mem_1[ram_adr][15:8] <= ram_dat_w[15:8];
	if (ram_we[2])
		mem_1[ram_adr][23:16] <= ram_dat_w[23:16];
	if (ram_we[3])
		mem_1[ram_adr][31:24] <= ram_dat_w[31:24];
	memadr <= ram_adr;
end

assign ram_dat_r = mem_1[memadr];

initial begin
	$readmemh("mem_1.init", mem_1);
end

OSCG #(
	.DIV(3'd6)
) OSCG (
	.OSC(crg_osc_g)
);

ECLKBRIDGECS ECLKBRIDGECS(
	.CLK0(sys2x_i_clk),
	.SEL(1'd0),
	.ECSOUT(crg_sys2x_clk_ecsout)
);

ECLKSYNCB ECLKSYNCB(
	.ECLKI(crg_sys2x_clk_ecsout),
	.STOP(crg_stop),
	.ECLKO(sys2x_clk)
);

CLKDIVF #(
	.DIV("2.0")
) CLKDIVF (
	.ALIGNWD(1'd0),
	.CLKI(sys2x_clk),
	.RST(crg_reset),
	.CDIVX(sys_clk)
);

DDRDLLA DDRDLLA(
	.CLK(sys2x_clk),
	.FREEZE(ddrphy_freeze),
	.RST(init_rst),
	.UDDCNTLN((~ddrphy_update)),
	.DDRDEL(ddrphy_delay1),
	.LOCK(ddrphy_lock0)
);

ODDRX2F ODDRX2F(
	.D0(1'd0),
	.D1(1'd1),
	.D2(1'd0),
	.D3(1'd1),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_clk_p)
);

ODDRX2F ODDRX2F_1(
	.D0(ddrphy_dfi_p0_address[0]),
	.D1(ddrphy_dfi_p0_address[0]),
	.D2(ddrphy_dfi_p1_address[0]),
	.D3(ddrphy_dfi_p1_address[0]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[0])
);

ODDRX2F ODDRX2F_2(
	.D0(ddrphy_dfi_p0_address[1]),
	.D1(ddrphy_dfi_p0_address[1]),
	.D2(ddrphy_dfi_p1_address[1]),
	.D3(ddrphy_dfi_p1_address[1]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[1])
);

ODDRX2F ODDRX2F_3(
	.D0(ddrphy_dfi_p0_address[2]),
	.D1(ddrphy_dfi_p0_address[2]),
	.D2(ddrphy_dfi_p1_address[2]),
	.D3(ddrphy_dfi_p1_address[2]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[2])
);

ODDRX2F ODDRX2F_4(
	.D0(ddrphy_dfi_p0_address[3]),
	.D1(ddrphy_dfi_p0_address[3]),
	.D2(ddrphy_dfi_p1_address[3]),
	.D3(ddrphy_dfi_p1_address[3]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[3])
);

ODDRX2F ODDRX2F_5(
	.D0(ddrphy_dfi_p0_address[4]),
	.D1(ddrphy_dfi_p0_address[4]),
	.D2(ddrphy_dfi_p1_address[4]),
	.D3(ddrphy_dfi_p1_address[4]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[4])
);

ODDRX2F ODDRX2F_6(
	.D0(ddrphy_dfi_p0_address[5]),
	.D1(ddrphy_dfi_p0_address[5]),
	.D2(ddrphy_dfi_p1_address[5]),
	.D3(ddrphy_dfi_p1_address[5]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[5])
);

ODDRX2F ODDRX2F_7(
	.D0(ddrphy_dfi_p0_address[6]),
	.D1(ddrphy_dfi_p0_address[6]),
	.D2(ddrphy_dfi_p1_address[6]),
	.D3(ddrphy_dfi_p1_address[6]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[6])
);

ODDRX2F ODDRX2F_8(
	.D0(ddrphy_dfi_p0_address[7]),
	.D1(ddrphy_dfi_p0_address[7]),
	.D2(ddrphy_dfi_p1_address[7]),
	.D3(ddrphy_dfi_p1_address[7]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[7])
);

ODDRX2F ODDRX2F_9(
	.D0(ddrphy_dfi_p0_address[8]),
	.D1(ddrphy_dfi_p0_address[8]),
	.D2(ddrphy_dfi_p1_address[8]),
	.D3(ddrphy_dfi_p1_address[8]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[8])
);

ODDRX2F ODDRX2F_10(
	.D0(ddrphy_dfi_p0_address[9]),
	.D1(ddrphy_dfi_p0_address[9]),
	.D2(ddrphy_dfi_p1_address[9]),
	.D3(ddrphy_dfi_p1_address[9]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[9])
);

ODDRX2F ODDRX2F_11(
	.D0(ddrphy_dfi_p0_address[10]),
	.D1(ddrphy_dfi_p0_address[10]),
	.D2(ddrphy_dfi_p1_address[10]),
	.D3(ddrphy_dfi_p1_address[10]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[10])
);

ODDRX2F ODDRX2F_12(
	.D0(ddrphy_dfi_p0_address[11]),
	.D1(ddrphy_dfi_p0_address[11]),
	.D2(ddrphy_dfi_p1_address[11]),
	.D3(ddrphy_dfi_p1_address[11]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[11])
);

ODDRX2F ODDRX2F_13(
	.D0(ddrphy_dfi_p0_address[12]),
	.D1(ddrphy_dfi_p0_address[12]),
	.D2(ddrphy_dfi_p1_address[12]),
	.D3(ddrphy_dfi_p1_address[12]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[12])
);

ODDRX2F ODDRX2F_14(
	.D0(ddrphy_dfi_p0_address[13]),
	.D1(ddrphy_dfi_p0_address[13]),
	.D2(ddrphy_dfi_p1_address[13]),
	.D3(ddrphy_dfi_p1_address[13]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[13])
);

ODDRX2F ODDRX2F_15(
	.D0(ddrphy_dfi_p0_address[14]),
	.D1(ddrphy_dfi_p0_address[14]),
	.D2(ddrphy_dfi_p1_address[14]),
	.D3(ddrphy_dfi_p1_address[14]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[14])
);

ODDRX2F ODDRX2F_16(
	.D0(ddrphy_dfi_p0_address[15]),
	.D1(ddrphy_dfi_p0_address[15]),
	.D2(ddrphy_dfi_p1_address[15]),
	.D3(ddrphy_dfi_p1_address[15]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_a[15])
);

ODDRX2F ODDRX2F_17(
	.D0(ddrphy_dfi_p0_bank[0]),
	.D1(ddrphy_dfi_p0_bank[0]),
	.D2(ddrphy_dfi_p1_bank[0]),
	.D3(ddrphy_dfi_p1_bank[0]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_ba[0])
);

ODDRX2F ODDRX2F_18(
	.D0(ddrphy_dfi_p0_bank[1]),
	.D1(ddrphy_dfi_p0_bank[1]),
	.D2(ddrphy_dfi_p1_bank[1]),
	.D3(ddrphy_dfi_p1_bank[1]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_ba[1])
);

ODDRX2F ODDRX2F_19(
	.D0(ddrphy_dfi_p0_bank[2]),
	.D1(ddrphy_dfi_p0_bank[2]),
	.D2(ddrphy_dfi_p1_bank[2]),
	.D3(ddrphy_dfi_p1_bank[2]),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_ba[2])
);

ODDRX2F ODDRX2F_20(
	.D0(ddrphy_dfi_p0_ras_n),
	.D1(ddrphy_dfi_p0_ras_n),
	.D2(ddrphy_dfi_p1_ras_n),
	.D3(ddrphy_dfi_p1_ras_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_ras_n)
);

ODDRX2F ODDRX2F_21(
	.D0(ddrphy_dfi_p0_cas_n),
	.D1(ddrphy_dfi_p0_cas_n),
	.D2(ddrphy_dfi_p1_cas_n),
	.D3(ddrphy_dfi_p1_cas_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_cas_n)
);

ODDRX2F ODDRX2F_22(
	.D0(ddrphy_dfi_p0_we_n),
	.D1(ddrphy_dfi_p0_we_n),
	.D2(ddrphy_dfi_p1_we_n),
	.D3(ddrphy_dfi_p1_we_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_we_n)
);

ODDRX2F ODDRX2F_23(
	.D0(ddrphy_dfi_p0_cke),
	.D1(ddrphy_dfi_p0_cke),
	.D2(ddrphy_dfi_p1_cke),
	.D3(ddrphy_dfi_p1_cke),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_cke)
);

ODDRX2F ODDRX2F_24(
	.D0(ddrphy_dfi_p0_odt),
	.D1(ddrphy_dfi_p0_odt),
	.D2(ddrphy_dfi_p1_odt),
	.D3(ddrphy_dfi_p1_odt),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_odt)
);

ODDRX2F ODDRX2F_25(
	.D0(ddrphy_dfi_p0_reset_n),
	.D1(ddrphy_dfi_p0_reset_n),
	.D2(ddrphy_dfi_p1_reset_n),
	.D3(ddrphy_dfi_p1_reset_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_reset_n)
);

ODDRX2F ODDRX2F_26(
	.D0(ddrphy_dfi_p0_cs_n),
	.D1(ddrphy_dfi_p0_cs_n),
	.D2(ddrphy_dfi_p1_cs_n),
	.D3(ddrphy_dfi_p1_cs_n),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_cs_n)
);

DQSBUFM #(
	.DQS_LI_DEL_ADJ("MINUS"),
	.DQS_LI_DEL_VAL(1'd1),
	.DQS_LO_DEL_ADJ("MINUS"),
	.DQS_LO_DEL_VAL(3'd4)
) DQSBUFM (
	.DDRDEL(ddrphy_delay0),
	.DQSI(ddrphy_dqs_i0),
	.ECLK(sys2x_clk),
	.PAUSE((ddrphy_pause0 | ddrphy_dly_sel_storage[0])),
	.RDDIRECTION(1'd1),
	.RDLOADN(1'd0),
	.RDMOVE(1'd0),
	.READ0(ddrphy_dqs_re),
	.READ1(ddrphy_dqs_re),
	.READCLKSEL0(ddrphy_rdly0[0]),
	.READCLKSEL1(ddrphy_rdly0[1]),
	.READCLKSEL2(ddrphy_rdly0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRDIRECTION(1'd1),
	.WRLOADN(1'd0),
	.WRMOVE(1'd0),
	.BURSTDET(ddrphy_burstdet0),
	.DATAVALID(ddrphy_datavalid[0]),
	.DQSR90(ddrphy_dqsr900),
	.DQSW(ddrphy_dqsw0),
	.DQSW270(ddrphy_dqsw2700),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2])
);

ODDRX2DQSB ODDRX2DQSB(
	.D0(1'd0),
	.D1(1'd1),
	.D2(1'd0),
	.D3(1'd1),
	.DQSW(ddrphy_dqsw0),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dqs0)
);

TSHX2DQSA TSHX2DQSA(
	.DQSW(ddrphy_dqsw0),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~(ddrphy_dqs_oe | ddrphy_dqs_postamble))),
	.T1((~(ddrphy_dqs_oe | ddrphy_dqs_preamble))),
	.Q(ddrphy_dqs_oe_n0)
);

ODDRX2DQA ODDRX2DQA(
	.D0(ddrphy_dm_o_data_muxed0[0]),
	.D1(ddrphy_dm_o_data_muxed0[1]),
	.D2(ddrphy_dm_o_data_muxed0[2]),
	.D3(ddrphy_dm_o_data_muxed0[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_dm[0])
);

ODDRX2DQA ODDRX2DQA_1(
	.D0(ddrphy_dq_o_data_muxed0[0]),
	.D1(ddrphy_dq_o_data_muxed0[1]),
	.D2(ddrphy_dq_o_data_muxed0[2]),
	.D3(ddrphy_dq_o_data_muxed0[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o0)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF (
	.A(ddrphy_dq_i0),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed0)
);

IDDRX2DQA IDDRX2DQA(
	.D(ddrphy_dq_i_delayed0),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip0_i[0]),
	.Q1(ddrphy_bitslip0_i[1]),
	.Q2(ddrphy_bitslip0_i[2]),
	.Q3(ddrphy_bitslip0_i[3])
);

TSHX2DQA TSHX2DQA(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n0)
);

ODDRX2DQA ODDRX2DQA_2(
	.D0(ddrphy_dq_o_data_muxed1[0]),
	.D1(ddrphy_dq_o_data_muxed1[1]),
	.D2(ddrphy_dq_o_data_muxed1[2]),
	.D3(ddrphy_dq_o_data_muxed1[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o1)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_1 (
	.A(ddrphy_dq_i1),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed1)
);

IDDRX2DQA IDDRX2DQA_1(
	.D(ddrphy_dq_i_delayed1),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip1_i[0]),
	.Q1(ddrphy_bitslip1_i[1]),
	.Q2(ddrphy_bitslip1_i[2]),
	.Q3(ddrphy_bitslip1_i[3])
);

TSHX2DQA TSHX2DQA_1(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n1)
);

ODDRX2DQA ODDRX2DQA_3(
	.D0(ddrphy_dq_o_data_muxed2[0]),
	.D1(ddrphy_dq_o_data_muxed2[1]),
	.D2(ddrphy_dq_o_data_muxed2[2]),
	.D3(ddrphy_dq_o_data_muxed2[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o2)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_2 (
	.A(ddrphy_dq_i2),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed2)
);

IDDRX2DQA IDDRX2DQA_2(
	.D(ddrphy_dq_i_delayed2),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip2_i[0]),
	.Q1(ddrphy_bitslip2_i[1]),
	.Q2(ddrphy_bitslip2_i[2]),
	.Q3(ddrphy_bitslip2_i[3])
);

TSHX2DQA TSHX2DQA_2(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n2)
);

ODDRX2DQA ODDRX2DQA_4(
	.D0(ddrphy_dq_o_data_muxed3[0]),
	.D1(ddrphy_dq_o_data_muxed3[1]),
	.D2(ddrphy_dq_o_data_muxed3[2]),
	.D3(ddrphy_dq_o_data_muxed3[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o3)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_3 (
	.A(ddrphy_dq_i3),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed3)
);

IDDRX2DQA IDDRX2DQA_3(
	.D(ddrphy_dq_i_delayed3),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip3_i[0]),
	.Q1(ddrphy_bitslip3_i[1]),
	.Q2(ddrphy_bitslip3_i[2]),
	.Q3(ddrphy_bitslip3_i[3])
);

TSHX2DQA TSHX2DQA_3(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n3)
);

ODDRX2DQA ODDRX2DQA_5(
	.D0(ddrphy_dq_o_data_muxed4[0]),
	.D1(ddrphy_dq_o_data_muxed4[1]),
	.D2(ddrphy_dq_o_data_muxed4[2]),
	.D3(ddrphy_dq_o_data_muxed4[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o4)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_4 (
	.A(ddrphy_dq_i4),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed4)
);

IDDRX2DQA IDDRX2DQA_4(
	.D(ddrphy_dq_i_delayed4),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip4_i[0]),
	.Q1(ddrphy_bitslip4_i[1]),
	.Q2(ddrphy_bitslip4_i[2]),
	.Q3(ddrphy_bitslip4_i[3])
);

TSHX2DQA TSHX2DQA_4(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n4)
);

ODDRX2DQA ODDRX2DQA_6(
	.D0(ddrphy_dq_o_data_muxed5[0]),
	.D1(ddrphy_dq_o_data_muxed5[1]),
	.D2(ddrphy_dq_o_data_muxed5[2]),
	.D3(ddrphy_dq_o_data_muxed5[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o5)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_5 (
	.A(ddrphy_dq_i5),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed5)
);

IDDRX2DQA IDDRX2DQA_5(
	.D(ddrphy_dq_i_delayed5),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip5_i[0]),
	.Q1(ddrphy_bitslip5_i[1]),
	.Q2(ddrphy_bitslip5_i[2]),
	.Q3(ddrphy_bitslip5_i[3])
);

TSHX2DQA TSHX2DQA_5(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n5)
);

ODDRX2DQA ODDRX2DQA_7(
	.D0(ddrphy_dq_o_data_muxed6[0]),
	.D1(ddrphy_dq_o_data_muxed6[1]),
	.D2(ddrphy_dq_o_data_muxed6[2]),
	.D3(ddrphy_dq_o_data_muxed6[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o6)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_6 (
	.A(ddrphy_dq_i6),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed6)
);

IDDRX2DQA IDDRX2DQA_6(
	.D(ddrphy_dq_i_delayed6),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip6_i[0]),
	.Q1(ddrphy_bitslip6_i[1]),
	.Q2(ddrphy_bitslip6_i[2]),
	.Q3(ddrphy_bitslip6_i[3])
);

TSHX2DQA TSHX2DQA_6(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n6)
);

ODDRX2DQA ODDRX2DQA_8(
	.D0(ddrphy_dq_o_data_muxed7[0]),
	.D1(ddrphy_dq_o_data_muxed7[1]),
	.D2(ddrphy_dq_o_data_muxed7[2]),
	.D3(ddrphy_dq_o_data_muxed7[3]),
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o7)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_7 (
	.A(ddrphy_dq_i7),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed7)
);

IDDRX2DQA IDDRX2DQA_7(
	.D(ddrphy_dq_i_delayed7),
	.DQSR90(ddrphy_dqsr900),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr0[0]),
	.RDPNTR1(ddrphy_rdpntr0[1]),
	.RDPNTR2(ddrphy_rdpntr0[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr0[0]),
	.WRPNTR1(ddrphy_wrpntr0[1]),
	.WRPNTR2(ddrphy_wrpntr0[2]),
	.Q0(ddrphy_bitslip7_i[0]),
	.Q1(ddrphy_bitslip7_i[1]),
	.Q2(ddrphy_bitslip7_i[2]),
	.Q3(ddrphy_bitslip7_i[3])
);

TSHX2DQA TSHX2DQA_7(
	.DQSW270(ddrphy_dqsw2700),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n7)
);

DQSBUFM #(
	.DQS_LI_DEL_ADJ("MINUS"),
	.DQS_LI_DEL_VAL(1'd1),
	.DQS_LO_DEL_ADJ("MINUS"),
	.DQS_LO_DEL_VAL(3'd4)
) DQSBUFM_1 (
	.DDRDEL(ddrphy_delay0),
	.DQSI(ddrphy_dqs_i1),
	.ECLK(sys2x_clk),
	.PAUSE((ddrphy_pause0 | ddrphy_dly_sel_storage[1])),
	.RDDIRECTION(1'd1),
	.RDLOADN(1'd0),
	.RDMOVE(1'd0),
	.READ0(ddrphy_dqs_re),
	.READ1(ddrphy_dqs_re),
	.READCLKSEL0(ddrphy_rdly1[0]),
	.READCLKSEL1(ddrphy_rdly1[1]),
	.READCLKSEL2(ddrphy_rdly1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRDIRECTION(1'd1),
	.WRLOADN(1'd0),
	.WRMOVE(1'd0),
	.BURSTDET(ddrphy_burstdet1),
	.DATAVALID(ddrphy_datavalid[1]),
	.DQSR90(ddrphy_dqsr901),
	.DQSW(ddrphy_dqsw1),
	.DQSW270(ddrphy_dqsw2701),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2])
);

ODDRX2DQSB ODDRX2DQSB_1(
	.D0(1'd0),
	.D1(1'd1),
	.D2(1'd0),
	.D3(1'd1),
	.DQSW(ddrphy_dqsw1),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dqs1)
);

TSHX2DQSA TSHX2DQSA_1(
	.DQSW(ddrphy_dqsw1),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~(ddrphy_dqs_oe | ddrphy_dqs_postamble))),
	.T1((~(ddrphy_dqs_oe | ddrphy_dqs_preamble))),
	.Q(ddrphy_dqs_oe_n1)
);

ODDRX2DQA ODDRX2DQA_9(
	.D0(ddrphy_dm_o_data_muxed1[0]),
	.D1(ddrphy_dm_o_data_muxed1[1]),
	.D2(ddrphy_dm_o_data_muxed1[2]),
	.D3(ddrphy_dm_o_data_muxed1[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddram_dm[1])
);

ODDRX2DQA ODDRX2DQA_10(
	.D0(ddrphy_dq_o_data_muxed8[0]),
	.D1(ddrphy_dq_o_data_muxed8[1]),
	.D2(ddrphy_dq_o_data_muxed8[2]),
	.D3(ddrphy_dq_o_data_muxed8[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o8)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_8 (
	.A(ddrphy_dq_i8),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed8)
);

IDDRX2DQA IDDRX2DQA_8(
	.D(ddrphy_dq_i_delayed8),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip8_i[0]),
	.Q1(ddrphy_bitslip8_i[1]),
	.Q2(ddrphy_bitslip8_i[2]),
	.Q3(ddrphy_bitslip8_i[3])
);

TSHX2DQA TSHX2DQA_8(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n8)
);

ODDRX2DQA ODDRX2DQA_11(
	.D0(ddrphy_dq_o_data_muxed9[0]),
	.D1(ddrphy_dq_o_data_muxed9[1]),
	.D2(ddrphy_dq_o_data_muxed9[2]),
	.D3(ddrphy_dq_o_data_muxed9[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o9)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_9 (
	.A(ddrphy_dq_i9),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed9)
);

IDDRX2DQA IDDRX2DQA_9(
	.D(ddrphy_dq_i_delayed9),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip9_i[0]),
	.Q1(ddrphy_bitslip9_i[1]),
	.Q2(ddrphy_bitslip9_i[2]),
	.Q3(ddrphy_bitslip9_i[3])
);

TSHX2DQA TSHX2DQA_9(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n9)
);

ODDRX2DQA ODDRX2DQA_12(
	.D0(ddrphy_dq_o_data_muxed10[0]),
	.D1(ddrphy_dq_o_data_muxed10[1]),
	.D2(ddrphy_dq_o_data_muxed10[2]),
	.D3(ddrphy_dq_o_data_muxed10[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o10)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_10 (
	.A(ddrphy_dq_i10),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed10)
);

IDDRX2DQA IDDRX2DQA_10(
	.D(ddrphy_dq_i_delayed10),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip10_i[0]),
	.Q1(ddrphy_bitslip10_i[1]),
	.Q2(ddrphy_bitslip10_i[2]),
	.Q3(ddrphy_bitslip10_i[3])
);

TSHX2DQA TSHX2DQA_10(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n10)
);

ODDRX2DQA ODDRX2DQA_13(
	.D0(ddrphy_dq_o_data_muxed11[0]),
	.D1(ddrphy_dq_o_data_muxed11[1]),
	.D2(ddrphy_dq_o_data_muxed11[2]),
	.D3(ddrphy_dq_o_data_muxed11[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o11)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_11 (
	.A(ddrphy_dq_i11),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed11)
);

IDDRX2DQA IDDRX2DQA_11(
	.D(ddrphy_dq_i_delayed11),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip11_i[0]),
	.Q1(ddrphy_bitslip11_i[1]),
	.Q2(ddrphy_bitslip11_i[2]),
	.Q3(ddrphy_bitslip11_i[3])
);

TSHX2DQA TSHX2DQA_11(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n11)
);

ODDRX2DQA ODDRX2DQA_14(
	.D0(ddrphy_dq_o_data_muxed12[0]),
	.D1(ddrphy_dq_o_data_muxed12[1]),
	.D2(ddrphy_dq_o_data_muxed12[2]),
	.D3(ddrphy_dq_o_data_muxed12[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o12)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_12 (
	.A(ddrphy_dq_i12),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed12)
);

IDDRX2DQA IDDRX2DQA_12(
	.D(ddrphy_dq_i_delayed12),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip12_i[0]),
	.Q1(ddrphy_bitslip12_i[1]),
	.Q2(ddrphy_bitslip12_i[2]),
	.Q3(ddrphy_bitslip12_i[3])
);

TSHX2DQA TSHX2DQA_12(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n12)
);

ODDRX2DQA ODDRX2DQA_15(
	.D0(ddrphy_dq_o_data_muxed13[0]),
	.D1(ddrphy_dq_o_data_muxed13[1]),
	.D2(ddrphy_dq_o_data_muxed13[2]),
	.D3(ddrphy_dq_o_data_muxed13[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o13)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_13 (
	.A(ddrphy_dq_i13),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed13)
);

IDDRX2DQA IDDRX2DQA_13(
	.D(ddrphy_dq_i_delayed13),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip13_i[0]),
	.Q1(ddrphy_bitslip13_i[1]),
	.Q2(ddrphy_bitslip13_i[2]),
	.Q3(ddrphy_bitslip13_i[3])
);

TSHX2DQA TSHX2DQA_13(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n13)
);

ODDRX2DQA ODDRX2DQA_16(
	.D0(ddrphy_dq_o_data_muxed14[0]),
	.D1(ddrphy_dq_o_data_muxed14[1]),
	.D2(ddrphy_dq_o_data_muxed14[2]),
	.D3(ddrphy_dq_o_data_muxed14[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o14)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_14 (
	.A(ddrphy_dq_i14),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed14)
);

IDDRX2DQA IDDRX2DQA_14(
	.D(ddrphy_dq_i_delayed14),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip14_i[0]),
	.Q1(ddrphy_bitslip14_i[1]),
	.Q2(ddrphy_bitslip14_i[2]),
	.Q3(ddrphy_bitslip14_i[3])
);

TSHX2DQA TSHX2DQA_14(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n14)
);

ODDRX2DQA ODDRX2DQA_17(
	.D0(ddrphy_dq_o_data_muxed15[0]),
	.D1(ddrphy_dq_o_data_muxed15[1]),
	.D2(ddrphy_dq_o_data_muxed15[2]),
	.D3(ddrphy_dq_o_data_muxed15[3]),
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.Q(ddrphy_dq_o15)
);

DELAYF #(
	.DEL_MODE("DQS_ALIGNED_X2")
) DELAYF_15 (
	.A(ddrphy_dq_i15),
	.DIRECTION(1'd0),
	.LOADN(1'd0),
	.MOVE(1'd0),
	.Z(ddrphy_dq_i_delayed15)
);

IDDRX2DQA IDDRX2DQA_15(
	.D(ddrphy_dq_i_delayed15),
	.DQSR90(ddrphy_dqsr901),
	.ECLK(sys2x_clk),
	.RDPNTR0(ddrphy_rdpntr1[0]),
	.RDPNTR1(ddrphy_rdpntr1[1]),
	.RDPNTR2(ddrphy_rdpntr1[2]),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.WRPNTR0(ddrphy_wrpntr1[0]),
	.WRPNTR1(ddrphy_wrpntr1[1]),
	.WRPNTR2(ddrphy_wrpntr1[2]),
	.Q0(ddrphy_bitslip15_i[0]),
	.Q1(ddrphy_bitslip15_i[1]),
	.Q2(ddrphy_bitslip15_i[2]),
	.Q3(ddrphy_bitslip15_i[3])
);

TSHX2DQA TSHX2DQA_15(
	.DQSW270(ddrphy_dqsw2701),
	.ECLK(sys2x_clk),
	.RST(sys_rst),
	.SCLK(sys_clk),
	.T0((~ddrphy_dq_oe)),
	.T1((~ddrphy_dq_oe)),
	.Q(ddrphy_dq_oe_n15)
);

reg [22:0] storage[0:7];
reg [22:0] memdat_1;
always @(posedge sys_clk) begin
	if (sdram_bankmachine0_cmd_buffer_lookahead_wrport_we)
		storage[sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
	memdat_1 <= storage[sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r = memdat_1;
assign sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r = storage[sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr];

reg [22:0] storage_1[0:7];
reg [22:0] memdat_2;
always @(posedge sys_clk) begin
	if (sdram_bankmachine1_cmd_buffer_lookahead_wrport_we)
		storage_1[sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
	memdat_2 <= storage_1[sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r = memdat_2;
assign sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r = storage_1[sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr];

reg [22:0] storage_2[0:7];
reg [22:0] memdat_3;
always @(posedge sys_clk) begin
	if (sdram_bankmachine2_cmd_buffer_lookahead_wrport_we)
		storage_2[sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
	memdat_3 <= storage_2[sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r = memdat_3;
assign sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r = storage_2[sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr];

reg [22:0] storage_3[0:7];
reg [22:0] memdat_4;
always @(posedge sys_clk) begin
	if (sdram_bankmachine3_cmd_buffer_lookahead_wrport_we)
		storage_3[sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
	memdat_4 <= storage_3[sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r = memdat_4;
assign sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r = storage_3[sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr];

reg [22:0] storage_4[0:7];
reg [22:0] memdat_5;
always @(posedge sys_clk) begin
	if (sdram_bankmachine4_cmd_buffer_lookahead_wrport_we)
		storage_4[sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w;
	memdat_5 <= storage_4[sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_r = memdat_5;
assign sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r = storage_4[sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr];

reg [22:0] storage_5[0:7];
reg [22:0] memdat_6;
always @(posedge sys_clk) begin
	if (sdram_bankmachine5_cmd_buffer_lookahead_wrport_we)
		storage_5[sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w;
	memdat_6 <= storage_5[sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_r = memdat_6;
assign sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r = storage_5[sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr];

reg [22:0] storage_6[0:7];
reg [22:0] memdat_7;
always @(posedge sys_clk) begin
	if (sdram_bankmachine6_cmd_buffer_lookahead_wrport_we)
		storage_6[sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w;
	memdat_7 <= storage_6[sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_r = memdat_7;
assign sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r = storage_6[sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr];

reg [22:0] storage_7[0:7];
reg [22:0] memdat_8;
always @(posedge sys_clk) begin
	if (sdram_bankmachine7_cmd_buffer_lookahead_wrport_we)
		storage_7[sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w;
	memdat_8 <= storage_7[sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_r = memdat_8;
assign sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r = storage_7[sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr];

reg [23:0] tag_mem[0:511];
reg [8:0] memadr_1;
always @(posedge sys_clk) begin
	if (tag_port_we)
		tag_mem[tag_port_adr] <= tag_port_dat_w;
	memadr_1 <= tag_port_adr;
end

assign tag_port_dat_r = tag_mem[memadr_1];

reg [15:0] mem_2[0:255];
reg [7:0] memadr_2;
always @(posedge sys_clk) begin
	memadr_2 <= pdm_r_adr;
end

assign pdm_r_dat_r = mem_2[memadr_2];

initial begin
	$readmemh("mem_2.init", mem_2);
end

reg [15:0] mem_3[0:255];
reg [7:0] memadr_3;
always @(posedge sys_clk) begin
	memadr_3 <= pdm_g_adr;
end

assign pdm_g_dat_r = mem_3[memadr_3];

initial begin
	$readmemh("mem_3.init", mem_3);
end

reg [15:0] mem_4[0:255];
reg [7:0] memadr_4;
always @(posedge sys_clk) begin
	memadr_4 <= pdm_b_adr;
end

assign pdm_b_dat_r = mem_4[memadr_4];

initial begin
	$readmemh("mem_4.init", mem_4);
end

reg [15:0] mem_5[0:255];
reg [7:0] memadr_5;
always @(posedge sys_clk) begin
	memadr_5 <= pwm0_adr;
end

assign pwm0_dat_r = mem_5[memadr_5];

initial begin
	$readmemh("mem_5.init", mem_5);
end

USRMCLK USRMCLK(
	.USRMCLKI(lxspi_spiflashdualquad_clk),
	.USRMCLKTS(1'd0)
);

reg [7:0] storage_8[0:1];
reg [0:0] memadr_6;
reg [0:0] memadr_7;
always @(posedge usb_48_clk) begin
	if (usb0_usb_core_rx_payloadFifo_wrport_we)
		storage_8[usb0_usb_core_rx_payloadFifo_wrport_adr] <= usb0_usb_core_rx_payloadFifo_wrport_dat_w;
	memadr_6 <= usb0_usb_core_rx_payloadFifo_wrport_adr;
end

always @(posedge usb_12_clk) begin
	memadr_7 <= usb0_usb_core_rx_payloadFifo_rdport_adr;
end

assign usb0_usb_core_rx_payloadFifo_wrport_dat_r = storage_8[memadr_6];
assign usb0_usb_core_rx_payloadFifo_rdport_dat_r = storage_8[memadr_7];

reg [1:0] storage_9[0:1];
reg [0:0] memadr_8;
reg [0:0] memadr_9;
always @(posedge usb_48_clk) begin
	if (usb0_usb_core_rx_flagsFifo_wrport_we)
		storage_9[usb0_usb_core_rx_flagsFifo_wrport_adr] <= usb0_usb_core_rx_flagsFifo_wrport_dat_w;
	memadr_8 <= usb0_usb_core_rx_flagsFifo_wrport_adr;
end

always @(posedge usb_12_clk) begin
	memadr_9 <= usb0_usb_core_rx_flagsFifo_rdport_adr;
end

assign usb0_usb_core_rx_flagsFifo_wrport_dat_r = storage_9[memadr_8];
assign usb0_usb_core_rx_flagsFifo_rdport_dat_r = storage_9[memadr_9];

reg [7:0] storage_10[0:9];
reg [7:0] memdat_9;
reg [7:0] memdat_10;
always @(posedge usb_12_clk) begin
	if (usb0_setuphandler_setuphandlerinner_wrport_we)
		storage_10[usb0_setuphandler_setuphandlerinner_wrport_adr] <= usb0_setuphandler_setuphandlerinner_wrport_dat_w;
	memdat_9 <= storage_10[usb0_setuphandler_setuphandlerinner_wrport_adr];
end

always @(posedge usb_12_clk) begin
	if (usb0_setuphandler_setuphandlerinner_rdport_re)
		memdat_10 <= storage_10[usb0_setuphandler_setuphandlerinner_rdport_adr];
end

assign usb0_setuphandler_setuphandlerinner_wrport_dat_r = memdat_9;
assign usb0_setuphandler_setuphandlerinner_rdport_dat_r = memdat_10;

reg [7:0] storage_11[0:63];
reg [7:0] memdat_11;
reg [7:0] memdat_12;
always @(posedge usb_12_clk) begin
	if (usb0_inhandler_syncfifobuffered_wrport_we)
		storage_11[usb0_inhandler_syncfifobuffered_wrport_adr] <= usb0_inhandler_syncfifobuffered_wrport_dat_w;
	memdat_11 <= storage_11[usb0_inhandler_syncfifobuffered_wrport_adr];
end

always @(posedge usb_12_clk) begin
	if (usb0_inhandler_syncfifobuffered_rdport_re)
		memdat_12 <= storage_11[usb0_inhandler_syncfifobuffered_rdport_adr];
end

assign usb0_inhandler_syncfifobuffered_wrport_dat_r = memdat_11;
assign usb0_inhandler_syncfifobuffered_rdport_dat_r = memdat_12;

reg [7:0] storage_12[0:65];
reg [7:0] memdat_13;
reg [7:0] memdat_14;
always @(posedge usb_12_clk) begin
	if (usb0_outhandler_syncfifobuffered_wrport_we)
		storage_12[usb0_outhandler_syncfifobuffered_wrport_adr] <= usb0_outhandler_syncfifobuffered_wrport_dat_w;
	memdat_13 <= storage_12[usb0_outhandler_syncfifobuffered_wrport_adr];
end

always @(posedge usb_12_clk) begin
	if (usb0_outhandler_syncfifobuffered_rdport_re)
		memdat_14 <= storage_12[usb0_outhandler_syncfifobuffered_rdport_adr];
end

assign usb0_outhandler_syncfifobuffered_wrport_dat_r = memdat_13;
assign usb0_outhandler_syncfifobuffered_rdport_dat_r = memdat_14;

reg [66:0] storage_13[0:63];
reg [5:0] memadr_10;
reg [5:0] memadr_11;
always @(posedge sys_clk) begin
	if (usb0_asyncfifo0_wrport_we)
		storage_13[usb0_asyncfifo0_wrport_adr] <= usb0_asyncfifo0_wrport_dat_w;
	memadr_10 <= usb0_asyncfifo0_wrport_adr;
end

always @(posedge usb_12_clk) begin
	memadr_11 <= usb0_asyncfifo0_rdport_adr;
end

assign usb0_asyncfifo0_wrport_dat_r = storage_13[memadr_10];
assign usb0_asyncfifo0_rdport_dat_r = storage_13[memadr_11];

reg [65:0] storage_14[0:63];
reg [5:0] memadr_12;
reg [5:0] memadr_13;
always @(posedge usb_12_clk) begin
	if (usb0_asyncfifo1_wrport_we)
		storage_14[usb0_asyncfifo1_wrport_adr] <= usb0_asyncfifo1_wrport_dat_w;
	memadr_12 <= usb0_asyncfifo1_wrport_adr;
end

always @(posedge sys_clk) begin
	memadr_13 <= usb0_asyncfifo1_rdport_adr;
end

assign usb0_asyncfifo1_wrport_dat_r = storage_14[memadr_12];
assign usb0_asyncfifo1_rdport_dat_r = storage_14[memadr_13];

VexRiscv VexRiscv(
	.clk(sys_clk),
	.dBusWishbone_ACK(cpu_dbus_ack),
	.dBusWishbone_DAT_MISO(cpu_dbus_dat_r),
	.dBusWishbone_ERR(cpu_dbus_err),
	.externalInterruptArray(cpu_interrupt),
	.externalResetVector(vexriscv),
	.iBusWishbone_ACK(cpu_ibus_ack),
	.iBusWishbone_DAT_MISO(cpu_ibus_dat_r),
	.iBusWishbone_ERR(cpu_ibus_err),
	.reset((sys_rst | cpu_reset)),
	.softwareInterrupt(1'd0),
	.timerInterrupt(1'd0),
	.dBusWishbone_ADR(cpu_dbus_adr),
	.dBusWishbone_BTE(cpu_dbus_bte),
	.dBusWishbone_CTI(cpu_dbus_cti),
	.dBusWishbone_CYC(cpu_dbus_cyc),
	.dBusWishbone_DAT_MOSI(cpu_dbus_dat_w),
	.dBusWishbone_SEL(cpu_dbus_sel),
	.dBusWishbone_STB(cpu_dbus_stb),
	.dBusWishbone_WE(cpu_dbus_we),
	.iBusWishbone_ADR(cpu_ibus_adr),
	.iBusWishbone_BTE(cpu_ibus_bte),
	.iBusWishbone_CTI(cpu_ibus_cti),
	.iBusWishbone_CYC(cpu_ibus_cyc),
	.iBusWishbone_DAT_MOSI(cpu_ibus_dat_w),
	.iBusWishbone_SEL(cpu_ibus_sel),
	.iBusWishbone_STB(cpu_ibus_stb),
	.iBusWishbone_WE(cpu_ibus_we)
);

(* FREQUENCY_PIN_CLKI = "48.0", ICP_CURRENT = "6", LPF_RESISTOR = "16", MFG_ENABLE_FILTEROPAMP = "1", MFG_GMCREF_SEL = "2" *) EHXPLLL #(
	.CLKFB_DIV(4'd10),
	.CLKI_DIV(1'd1),
	.CLKOP_CPHASE(3'd4),
	.CLKOP_DIV(3'd5),
	.CLKOP_ENABLE("ENABLED"),
	.CLKOP_FPHASE(1'd0),
	.CLKOS3_CPHASE(5'd23),
	.CLKOS3_DIV(1'd1),
	.CLKOS3_ENABLE("ENABLED"),
	.CLKOS3_FPHASE(1'd0),
	.FEEDBK_PATH("INT_OS3")
) EHXPLLL (
	.CLKI(crg_ecp5pll0_clkin),
	.RST(crg_pll_reset),
	.CLKOP(crg_ecp5pll0_clkout),
	.LOCK(crg_pll_locked)
);

(* FREQUENCY_PIN_CLKI = "48.0", ICP_CURRENT = "6", LPF_RESISTOR = "16", MFG_ENABLE_FILTEROPAMP = "1", MFG_GMCREF_SEL = "2" *) EHXPLLL #(
	.CLKFB_DIV(4'd9),
	.CLKI_DIV(1'd1),
	.CLKOP_CPHASE(4'd8),
	.CLKOP_DIV(4'd9),
	.CLKOP_ENABLE("ENABLED"),
	.CLKOP_FPHASE(1'd0),
	.CLKOS3_CPHASE(5'd23),
	.CLKOS3_DIV(1'd1),
	.CLKOS3_ENABLE("ENABLED"),
	.CLKOS3_FPHASE(1'd0),
	.CLKOS_CPHASE(6'd35),
	.CLKOS_DIV(6'd36),
	.CLKOS_ENABLE("ENABLED"),
	.CLKOS_FPHASE(1'd0),
	.FEEDBK_PATH("INT_OS3")
) EHXPLLL_1 (
	.CLKI(crg_ecp5pll1_clkin),
	.RST(crg_usb_pll_reset),
	.CLKOP(crg_ecp5pll1_clkout0),
	.CLKOS(crg_ecp5pll1_clkout1),
	.LOCK(crg_usb_pll_locked)
);

reg [7:0] data_mem_grain0[0:511];
reg [8:0] memadr_14;
always @(posedge sys_clk) begin
	if (data_port_we[0])
		data_mem_grain0[data_port_adr] <= data_port_dat_w[7:0];
	memadr_14 <= data_port_adr;
end

assign data_port_dat_r[7:0] = data_mem_grain0[memadr_14];

reg [7:0] data_mem_grain1[0:511];
reg [8:0] memadr_15;
always @(posedge sys_clk) begin
	if (data_port_we[1])
		data_mem_grain1[data_port_adr] <= data_port_dat_w[15:8];
	memadr_15 <= data_port_adr;
end

assign data_port_dat_r[15:8] = data_mem_grain1[memadr_15];

reg [7:0] data_mem_grain2[0:511];
reg [8:0] memadr_16;
always @(posedge sys_clk) begin
	if (data_port_we[2])
		data_mem_grain2[data_port_adr] <= data_port_dat_w[23:16];
	memadr_16 <= data_port_adr;
end

assign data_port_dat_r[23:16] = data_mem_grain2[memadr_16];

reg [7:0] data_mem_grain3[0:511];
reg [8:0] memadr_17;
always @(posedge sys_clk) begin
	if (data_port_we[3])
		data_mem_grain3[data_port_adr] <= data_port_dat_w[31:24];
	memadr_17 <= data_port_adr;
end

assign data_port_dat_r[31:24] = data_mem_grain3[memadr_17];

reg [7:0] data_mem_grain4[0:511];
reg [8:0] memadr_18;
always @(posedge sys_clk) begin
	if (data_port_we[4])
		data_mem_grain4[data_port_adr] <= data_port_dat_w[39:32];
	memadr_18 <= data_port_adr;
end

assign data_port_dat_r[39:32] = data_mem_grain4[memadr_18];

reg [7:0] data_mem_grain5[0:511];
reg [8:0] memadr_19;
always @(posedge sys_clk) begin
	if (data_port_we[5])
		data_mem_grain5[data_port_adr] <= data_port_dat_w[47:40];
	memadr_19 <= data_port_adr;
end

assign data_port_dat_r[47:40] = data_mem_grain5[memadr_19];

reg [7:0] data_mem_grain6[0:511];
reg [8:0] memadr_20;
always @(posedge sys_clk) begin
	if (data_port_we[6])
		data_mem_grain6[data_port_adr] <= data_port_dat_w[55:48];
	memadr_20 <= data_port_adr;
end

assign data_port_dat_r[55:48] = data_mem_grain6[memadr_20];

reg [7:0] data_mem_grain7[0:511];
reg [8:0] memadr_21;
always @(posedge sys_clk) begin
	if (data_port_we[7])
		data_mem_grain7[data_port_adr] <= data_port_dat_w[63:56];
	memadr_21 <= data_port_adr;
end

assign data_port_dat_r[63:56] = data_mem_grain7[memadr_21];

reg [7:0] data_mem_grain8[0:511];
reg [8:0] memadr_22;
always @(posedge sys_clk) begin
	if (data_port_we[8])
		data_mem_grain8[data_port_adr] <= data_port_dat_w[71:64];
	memadr_22 <= data_port_adr;
end

assign data_port_dat_r[71:64] = data_mem_grain8[memadr_22];

reg [7:0] data_mem_grain9[0:511];
reg [8:0] memadr_23;
always @(posedge sys_clk) begin
	if (data_port_we[9])
		data_mem_grain9[data_port_adr] <= data_port_dat_w[79:72];
	memadr_23 <= data_port_adr;
end

assign data_port_dat_r[79:72] = data_mem_grain9[memadr_23];

reg [7:0] data_mem_grain10[0:511];
reg [8:0] memadr_24;
always @(posedge sys_clk) begin
	if (data_port_we[10])
		data_mem_grain10[data_port_adr] <= data_port_dat_w[87:80];
	memadr_24 <= data_port_adr;
end

assign data_port_dat_r[87:80] = data_mem_grain10[memadr_24];

reg [7:0] data_mem_grain11[0:511];
reg [8:0] memadr_25;
always @(posedge sys_clk) begin
	if (data_port_we[11])
		data_mem_grain11[data_port_adr] <= data_port_dat_w[95:88];
	memadr_25 <= data_port_adr;
end

assign data_port_dat_r[95:88] = data_mem_grain11[memadr_25];

reg [7:0] data_mem_grain12[0:511];
reg [8:0] memadr_26;
always @(posedge sys_clk) begin
	if (data_port_we[12])
		data_mem_grain12[data_port_adr] <= data_port_dat_w[103:96];
	memadr_26 <= data_port_adr;
end

assign data_port_dat_r[103:96] = data_mem_grain12[memadr_26];

reg [7:0] data_mem_grain13[0:511];
reg [8:0] memadr_27;
always @(posedge sys_clk) begin
	if (data_port_we[13])
		data_mem_grain13[data_port_adr] <= data_port_dat_w[111:104];
	memadr_27 <= data_port_adr;
end

assign data_port_dat_r[111:104] = data_mem_grain13[memadr_27];

reg [7:0] data_mem_grain14[0:511];
reg [8:0] memadr_28;
always @(posedge sys_clk) begin
	if (data_port_we[14])
		data_mem_grain14[data_port_adr] <= data_port_dat_w[119:112];
	memadr_28 <= data_port_adr;
end

assign data_port_dat_r[119:112] = data_mem_grain14[memadr_28];

reg [7:0] data_mem_grain15[0:511];
reg [8:0] memadr_29;
always @(posedge sys_clk) begin
	if (data_port_we[15])
		data_mem_grain15[data_port_adr] <= data_port_dat_w[127:120];
	memadr_29 <= data_port_adr;
end

assign data_port_dat_r[127:120] = data_mem_grain15[memadr_29];

FD1S3BX FD1S3BX(
	.CK(sys2x_i_clk),
	.D(1'd0),
	.PD(((~crg_pll_locked) | crg_pll_reset)),
	.Q(rst10)
);

FD1S3BX FD1S3BX_1(
	.CK(sys2x_i_clk),
	.D(rst10),
	.PD(((~crg_pll_locked) | crg_pll_reset)),
	.Q(sys2x_i_rst)
);

FD1S3BX FD1S3BX_2(
	.CK(sys2x_i_clk),
	.D(1'd0),
	.PD((~crg_pll_locked)),
	.Q(rst11)
);

FD1S3BX FD1S3BX_3(
	.CK(sys2x_i_clk),
	.D(rst11),
	.PD((~crg_pll_locked)),
	.Q(sys2x_i_rst)
);

FD1S3BX FD1S3BX_4(
	.CK(usb_48_clk),
	.D(1'd0),
	.PD(((~crg_usb_pll_locked) | crg_usb_pll_reset)),
	.Q(rst12)
);

FD1S3BX FD1S3BX_5(
	.CK(usb_48_clk),
	.D(rst12),
	.PD(((~crg_usb_pll_locked) | crg_usb_pll_reset)),
	.Q(usb_48_rst)
);

FD1S3BX FD1S3BX_6(
	.CK(usb_12_clk),
	.D(1'd0),
	.PD(((~crg_usb_pll_locked) | crg_usb_pll_reset)),
	.Q(rst13)
);

FD1S3BX FD1S3BX_7(
	.CK(usb_12_clk),
	.D(rst13),
	.PD(((~crg_usb_pll_locked) | crg_usb_pll_reset)),
	.Q(usb_12_rst)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO (
	.B(ddram_dqs_p[0]),
	.I(ddrphy_dqs0),
	.T((~(~ddrphy_dqs_oe_n0))),
	.O(ddrphy_dqs_i0)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_1 (
	.B(ddram_dq[0]),
	.I(ddrphy_dq_o0),
	.T((~(~ddrphy_dq_oe_n0))),
	.O(ddrphy_dq_i0)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_2 (
	.B(ddram_dq[1]),
	.I(ddrphy_dq_o1),
	.T((~(~ddrphy_dq_oe_n1))),
	.O(ddrphy_dq_i1)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_3 (
	.B(ddram_dq[2]),
	.I(ddrphy_dq_o2),
	.T((~(~ddrphy_dq_oe_n2))),
	.O(ddrphy_dq_i2)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_4 (
	.B(ddram_dq[3]),
	.I(ddrphy_dq_o3),
	.T((~(~ddrphy_dq_oe_n3))),
	.O(ddrphy_dq_i3)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_5 (
	.B(ddram_dq[4]),
	.I(ddrphy_dq_o4),
	.T((~(~ddrphy_dq_oe_n4))),
	.O(ddrphy_dq_i4)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_6 (
	.B(ddram_dq[5]),
	.I(ddrphy_dq_o5),
	.T((~(~ddrphy_dq_oe_n5))),
	.O(ddrphy_dq_i5)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_7 (
	.B(ddram_dq[6]),
	.I(ddrphy_dq_o6),
	.T((~(~ddrphy_dq_oe_n6))),
	.O(ddrphy_dq_i6)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_8 (
	.B(ddram_dq[7]),
	.I(ddrphy_dq_o7),
	.T((~(~ddrphy_dq_oe_n7))),
	.O(ddrphy_dq_i7)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_9 (
	.B(ddram_dqs_p[1]),
	.I(ddrphy_dqs1),
	.T((~(~ddrphy_dqs_oe_n1))),
	.O(ddrphy_dqs_i1)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_10 (
	.B(ddram_dq[8]),
	.I(ddrphy_dq_o8),
	.T((~(~ddrphy_dq_oe_n8))),
	.O(ddrphy_dq_i8)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_11 (
	.B(ddram_dq[9]),
	.I(ddrphy_dq_o9),
	.T((~(~ddrphy_dq_oe_n9))),
	.O(ddrphy_dq_i9)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_12 (
	.B(ddram_dq[10]),
	.I(ddrphy_dq_o10),
	.T((~(~ddrphy_dq_oe_n10))),
	.O(ddrphy_dq_i10)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_13 (
	.B(ddram_dq[11]),
	.I(ddrphy_dq_o11),
	.T((~(~ddrphy_dq_oe_n11))),
	.O(ddrphy_dq_i11)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_14 (
	.B(ddram_dq[12]),
	.I(ddrphy_dq_o12),
	.T((~(~ddrphy_dq_oe_n12))),
	.O(ddrphy_dq_i12)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_15 (
	.B(ddram_dq[13]),
	.I(ddrphy_dq_o13),
	.T((~(~ddrphy_dq_oe_n13))),
	.O(ddrphy_dq_i13)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_16 (
	.B(ddram_dq[14]),
	.I(ddrphy_dq_o14),
	.T((~(~ddrphy_dq_oe_n14))),
	.O(ddrphy_dq_i14)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_17 (
	.B(ddram_dq[15]),
	.I(ddrphy_dq_o15),
	.T((~(~ddrphy_dq_oe_n15))),
	.O(ddrphy_dq_i15)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_18 (
	.B(spiflash4x_dq[0]),
	.I(lxspi_o[0]),
	.T((~lxspi_oe)),
	.O(lxspi_i0[0])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_19 (
	.B(spiflash4x_dq[1]),
	.I(lxspi_o[1]),
	.T((~lxspi_oe)),
	.O(lxspi_i0[1])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_20 (
	.B(spiflash4x_dq[2]),
	.I(lxspi_o[2]),
	.T((~(lxspi_oe | lxspi_bitbang_en_storage))),
	.O(lxspi_i0[2])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_21 (
	.B(spiflash4x_dq[3]),
	.I(lxspi_o[3]),
	.T((~(lxspi_oe | lxspi_bitbang_en_storage))),
	.O(lxspi_i0[3])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_22 (
	.B(usb_d_p),
	.I(usb_iobuf_usb_p_t_o),
	.T((~usb_iobuf_usb_p_t_oe)),
	.O(usb_iobuf_usb_p_t_i0)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_23 (
	.B(usb_d_n),
	.I(usb_iobuf_usb_n_t_o),
	.T((~usb_iobuf_usb_n_t_oe)),
	.O(usb_iobuf_usb_n_t_i0)
);

endmodule
